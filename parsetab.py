
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEAND ARC ASSIGN BOOL CHAR CIRCLE COLOR COMMA DIVIDE DO ELSE EQ FLOAT FLOATING_POINT FOR FUNCTION GE GT ID IF INT INTEGER LBRACE LBRACKET LE LINE LPAREN LT MAIN MINUS NE NOT OR PENDOWN PENUP PLUS POINT PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMICOLON STRING THEN THICKNESS TIMES TO VARS VOID WHILE WRITEprogram : PROGRAM ID SEMICOLON vars function_list main_function\n               | PROGRAM ID SEMICOLON vars empty main_functionvars : VARS var_listvar_list : var_list type id_list SEMICOLON\n                | type id_list SEMICOLONtype : INT\n            | FLOAT\n            | BOOL\n            | CHARid_list : id_list COMMA ID\n               | IDfunction_list : function_list function\n                     | emptyfunction : FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE\n                | FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE\n                | FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE\n                | FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACEparam_list : param_list COMMA type ID\n                  | type ID\n                  | emptymain_function : MAIN LPAREN RPAREN LBRACE statement_list RBRACEstatement_list : statement_list statement\n                      | statement_list return_statement\n                      | statement\n                      | return_statement\n                      | emptystatement : assignment SEMICOLON\n                 | function_call SEMICOLON\n                 | read_statement SEMICOLON\n                 | write_statement SEMICOLON\n                 | if_statement\n                 | while_statement\n                 | for_statementassignment : ID ASSIGN expression\n                  | ID LBRACKET expression RBRACKET ASSIGN expressionfunction_call : ID LPAREN arg_list RPAREN\n                     | ID LPAREN RPARENarg_list : arg_list COMMA expression\n                | expressionread_statement : READ LPAREN id_list RPARENwrite_statement : WRITE LPAREN write_list RPARENwrite_list : write_list COMMA expression\n                  | STRING\n                  | function_call\n                  | ID COMMA expressionif_statement : IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE\n                    | IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE\n                    | IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACEwhile_statement : WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACEfor_statement : FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACEreturn_statement : RETURN LPAREN expression RPAREN SEMICOLONexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression EQ term\n                  | expression NE term\n                  | expression LT term\n                  | expression LE term\n                  | expression GT term\n                  | expression GE term\n                  | expression AND term\n                  | expression OR term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : LPAREN expression RPAREN\n              | ID\n              | ID LBRACKET expression RBRACKET\n              | INTEGER\n              | function_call\n              | FLOATING_POINTempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,19,59,],[0,-1,-2,-21,]),'ID':([2,10,11,12,13,14,20,24,25,28,34,37,38,39,40,45,46,47,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,99,101,102,104,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,130,131,133,134,136,150,156,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[3,22,-6,-7,-8,-9,22,30,31,33,49,49,-24,-25,-26,-31,-32,-33,74,75,-22,-23,-27,-28,-29,-30,83,83,83,83,22,96,83,83,83,83,49,132,49,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,49,49,49,49,-54,83,83,49,49,49,49,49,-25,49,-46,-47,-52,49,49,49,49,49,-25,-25,49,-53,-48,-50,-51,-49,]),'SEMICOLON':([3,21,22,26,33,41,42,43,44,81,82,83,84,85,86,87,90,106,121,123,124,135,137,138,139,140,141,142,143,144,145,146,147,148,161,162,],[4,27,-11,32,-10,62,63,64,65,-65,-68,-70,-72,-73,-74,-34,-37,136,-36,-40,-41,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-71,-35,]),'VARS':([4,76,78,],[6,6,6,]),'MAIN':([5,7,8,9,16,27,32,158,160,166,167,],[-75,17,17,-3,-12,-5,-4,-15,-17,-14,-16,]),'FUNCTION':([5,7,8,9,16,27,32,158,160,166,167,],[-75,18,-13,-3,-12,-5,-4,-15,-17,-14,-16,]),'INT':([6,9,18,27,32,35,36,77,],[11,11,11,-5,-4,11,11,11,]),'FLOAT':([6,9,18,27,32,35,36,77,],[12,12,12,-5,-4,12,12,12,]),'BOOL':([6,9,18,27,32,35,36,77,],[13,13,13,-5,-4,13,13,13,]),'CHAR':([6,9,18,27,32,35,36,77,],[14,14,14,-5,-4,14,14,14,]),'LBRACE':([9,27,29,32,76,78,100,103,154,155,175,176,177,],[-3,-5,34,-4,101,104,130,133,163,164,178,179,180,]),'LPAREN':([17,30,31,48,49,50,51,52,53,66,67,68,69,72,73,79,83,96,99,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,150,156,],[23,35,36,66,69,70,71,72,73,79,79,79,79,79,79,79,69,69,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'VOID':([18,],[25,]),'COMMA':([21,22,26,33,35,36,56,57,58,75,81,82,83,84,85,86,89,90,91,92,93,94,95,96,121,132,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,],[28,-11,28,-10,-75,-75,77,-20,77,-19,-65,-68,-70,-72,-73,-74,122,-37,-39,28,125,-43,-44,126,-36,-18,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-38,-42,-45,-71,]),'RPAREN':([22,23,33,35,36,56,57,58,69,75,80,81,82,83,84,85,86,89,90,91,92,93,94,95,97,98,105,121,132,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,],[-11,29,-10,-75,-75,76,-20,78,90,-19,106,-65,-68,-70,-72,-73,-74,121,-37,-39,123,124,-43,-44,127,128,135,-36,-18,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-38,-42,-45,-71,]),'RETURN':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[48,48,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,48,48,48,48,48,48,-54,48,48,48,48,48,-25,48,-46,-47,-52,48,48,48,48,48,-25,-25,48,-53,-48,-50,-51,-49,]),'RBRACE':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[-75,59,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,-75,-75,-75,158,-75,160,-54,166,167,-75,-75,172,173,174,-46,-47,-52,-75,-75,-75,186,187,188,189,190,-53,-48,-50,-51,-49,]),'READ':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[50,50,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,50,50,50,50,50,50,-54,50,50,50,50,50,-25,50,-46,-47,-52,50,50,50,50,50,-25,-25,50,-53,-48,-50,-51,-49,]),'WRITE':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[51,51,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,51,51,51,51,51,51,-54,51,51,51,51,51,-25,51,-46,-47,-52,51,51,51,51,51,-25,-25,51,-53,-48,-50,-51,-49,]),'IF':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[52,52,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,52,52,52,52,52,52,-54,52,52,52,52,52,-25,52,-46,-47,-52,52,52,52,52,52,-25,-25,52,-53,-48,-50,-51,-49,]),'WHILE':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[53,53,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,53,53,53,53,53,53,-54,53,53,53,53,53,-25,53,-46,-47,-52,53,53,53,53,53,-25,-25,53,-53,-48,-50,-51,-49,]),'FOR':([34,37,38,39,40,45,46,47,60,61,62,63,64,65,101,104,130,131,133,134,136,157,159,163,164,168,169,170,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,],[54,54,-24,-25,-26,-31,-32,-33,-22,-23,-27,-28,-29,-30,54,54,54,54,54,54,-54,54,54,54,54,54,-25,54,-46,-47,-52,54,54,54,54,54,-25,-25,54,-53,-48,-50,-51,-49,]),'ASSIGN':([49,120,],[67,150,]),'LBRACKET':([49,74,83,],[68,99,119,]),'INTEGER':([66,67,68,69,72,73,79,99,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,150,156,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'FLOATING_POINT':([66,67,68,69,72,73,79,99,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,150,156,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'STRING':([71,],[94,]),'PLUS':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[107,-65,-68,-70,-72,-73,-74,107,107,-37,107,107,107,107,-36,107,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,107,107,107,107,-71,107,107,]),'MINUS':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[108,-65,-68,-70,-72,-73,-74,108,108,-37,108,108,108,108,-36,108,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,108,108,108,108,-71,108,108,]),'EQ':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[109,-65,-68,-70,-72,-73,-74,109,109,-37,109,109,109,109,-36,109,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,109,109,109,109,-71,109,109,]),'NE':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[110,-65,-68,-70,-72,-73,-74,110,110,-37,110,110,110,110,-36,110,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,110,110,110,110,-71,110,110,]),'LT':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[111,-65,-68,-70,-72,-73,-74,111,111,-37,111,111,111,111,-36,111,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,111,111,111,111,-71,111,111,]),'LE':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[112,-65,-68,-70,-72,-73,-74,112,112,-37,112,112,112,112,-36,112,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,112,112,112,112,-71,112,112,]),'GT':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[113,-65,-68,-70,-72,-73,-74,113,113,-37,113,113,113,113,-36,113,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,113,113,113,113,-71,113,113,]),'GE':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[114,-65,-68,-70,-72,-73,-74,114,114,-37,114,114,114,114,-36,114,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,114,114,114,114,-71,114,114,]),'AND':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[115,-65,-68,-70,-72,-73,-74,115,115,-37,115,115,115,115,-36,115,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,115,115,115,115,-71,115,115,]),'OR':([80,81,82,83,84,85,86,87,88,90,91,97,98,105,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,161,162,165,],[116,-65,-68,-70,-72,-73,-74,116,116,-37,116,116,116,116,-36,116,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,116,116,116,116,-71,116,116,]),'RBRACKET':([81,82,83,84,85,86,88,90,121,135,137,138,139,140,141,142,143,144,145,146,147,148,149,161,165,],[-65,-68,-70,-72,-73,-74,120,-37,-36,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,161,-71,171,]),'TO':([81,82,83,84,85,86,90,121,129,135,137,138,139,140,141,142,143,144,145,146,147,148,161,],[-65,-68,-70,-72,-73,-74,-37,-36,156,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-67,-71,]),'TIMES':([81,82,83,84,85,86,90,121,135,137,138,139,140,141,142,143,144,145,146,147,148,161,],[117,-68,-70,-72,-73,-74,-37,-36,-69,117,117,117,117,117,117,117,117,117,117,-66,-67,-71,]),'DIVIDE':([81,82,83,84,85,86,90,121,135,137,138,139,140,141,142,143,144,145,146,147,148,161,],[118,-68,-70,-72,-73,-74,-37,-36,-69,118,118,118,118,118,118,118,118,118,118,-66,-67,-71,]),'THEN':([127,],[154,]),'DO':([128,171,],[155,175,]),'ELSE':([172,173,],[176,177,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,76,78,],[5,100,103,]),'function_list':([5,],[7,]),'empty':([5,34,35,36,101,104,130,133,163,164,178,179,180,],[8,40,57,57,40,40,40,40,40,40,40,40,40,]),'var_list':([6,],[9,]),'type':([6,9,18,35,36,77,],[10,20,24,55,55,102,]),'main_function':([7,8,],[15,19,]),'function':([7,],[16,]),'id_list':([10,20,70,],[21,26,92,]),'statement_list':([34,101,104,130,133,163,164,178,179,180,],[37,131,134,157,159,168,170,181,182,185,]),'statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[38,60,38,38,38,60,38,60,60,60,38,38,60,60,38,38,38,60,60,60,]),'return_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[39,61,39,39,39,61,39,61,61,61,169,39,61,61,39,183,184,61,61,61,]),'assignment':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'function_call':([34,37,66,67,68,69,71,72,73,79,99,101,104,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,130,131,133,134,150,156,157,159,163,164,168,170,178,179,180,181,182,185,],[42,42,85,85,85,85,95,85,85,85,85,42,42,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,42,42,42,42,85,85,42,42,42,42,42,42,42,42,42,42,42,42,]),'read_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'write_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'if_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'while_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'for_statement':([34,37,101,104,130,131,133,134,157,159,163,164,168,170,178,179,180,181,182,185,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'param_list':([35,36,],[56,58,]),'expression':([66,67,68,69,72,73,79,99,119,122,125,126,150,156,],[80,87,88,91,97,98,105,129,149,151,152,153,162,165,]),'term':([66,67,68,69,72,73,79,99,107,108,109,110,111,112,113,114,115,116,119,122,125,126,150,156,],[81,81,81,81,81,81,81,81,137,138,139,140,141,142,143,144,145,146,81,81,81,81,81,81,]),'factor':([66,67,68,69,72,73,79,99,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,150,156,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,147,148,82,82,82,82,82,82,]),'arg_list':([69,],[89,]),'write_list':([71,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars function_list main_function','program',6,'p_program','MyR_parser.py',19),
  ('program -> PROGRAM ID SEMICOLON vars empty main_function','program',6,'p_program','MyR_parser.py',20),
  ('vars -> VARS var_list','vars',2,'p_vars','MyR_parser.py',29),
  ('var_list -> var_list type id_list SEMICOLON','var_list',4,'p_var_list','MyR_parser.py',34),
  ('var_list -> type id_list SEMICOLON','var_list',3,'p_var_list','MyR_parser.py',35),
  ('type -> INT','type',1,'p_type','MyR_parser.py',43),
  ('type -> FLOAT','type',1,'p_type','MyR_parser.py',44),
  ('type -> BOOL','type',1,'p_type','MyR_parser.py',45),
  ('type -> CHAR','type',1,'p_type','MyR_parser.py',46),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','MyR_parser.py',51),
  ('id_list -> ID','id_list',1,'p_id_list','MyR_parser.py',52),
  ('function_list -> function_list function','function_list',2,'p_function_list','MyR_parser.py',60),
  ('function_list -> empty','function_list',1,'p_function_list','MyR_parser.py',61),
  ('function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE','function',10,'p_function','MyR_parser.py',75),
  ('function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE','function',9,'p_function','MyR_parser.py',76),
  ('function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE','function',10,'p_function','MyR_parser.py',77),
  ('function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE','function',9,'p_function','MyR_parser.py',78),
  ('param_list -> param_list COMMA type ID','param_list',4,'p_param_list','MyR_parser.py',86),
  ('param_list -> type ID','param_list',2,'p_param_list','MyR_parser.py',87),
  ('param_list -> empty','param_list',1,'p_param_list','MyR_parser.py',88),
  ('main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE','main_function',6,'p_main_function','MyR_parser.py',98),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','MyR_parser.py',103),
  ('statement_list -> statement_list return_statement','statement_list',2,'p_statement_list','MyR_parser.py',104),
  ('statement_list -> statement','statement_list',1,'p_statement_list','MyR_parser.py',105),
  ('statement_list -> return_statement','statement_list',1,'p_statement_list','MyR_parser.py',106),
  ('statement_list -> empty','statement_list',1,'p_statement_list','MyR_parser.py',107),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','MyR_parser.py',117),
  ('statement -> function_call SEMICOLON','statement',2,'p_statement','MyR_parser.py',118),
  ('statement -> read_statement SEMICOLON','statement',2,'p_statement','MyR_parser.py',119),
  ('statement -> write_statement SEMICOLON','statement',2,'p_statement','MyR_parser.py',120),
  ('statement -> if_statement','statement',1,'p_statement','MyR_parser.py',121),
  ('statement -> while_statement','statement',1,'p_statement','MyR_parser.py',122),
  ('statement -> for_statement','statement',1,'p_statement','MyR_parser.py',123),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','MyR_parser.py',128),
  ('assignment -> ID LBRACKET expression RBRACKET ASSIGN expression','assignment',6,'p_assignment','MyR_parser.py',129),
  ('function_call -> ID LPAREN arg_list RPAREN','function_call',4,'p_function_call','MyR_parser.py',137),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','MyR_parser.py',138),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','MyR_parser.py',146),
  ('arg_list -> expression','arg_list',1,'p_arg_list','MyR_parser.py',147),
  ('read_statement -> READ LPAREN id_list RPAREN','read_statement',4,'p_read_statement','MyR_parser.py',155),
  ('write_statement -> WRITE LPAREN write_list RPAREN','write_statement',4,'p_write_statement','MyR_parser.py',160),
  ('write_list -> write_list COMMA expression','write_list',3,'p_write_list','MyR_parser.py',165),
  ('write_list -> STRING','write_list',1,'p_write_list','MyR_parser.py',166),
  ('write_list -> function_call','write_list',1,'p_write_list','MyR_parser.py',167),
  ('write_list -> ID COMMA expression','write_list',3,'p_write_list','MyR_parser.py',168),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE','if_statement',8,'p_if_statement','MyR_parser.py',176),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE','if_statement',8,'p_if_statement','MyR_parser.py',177),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',12,'p_if_statement','MyR_parser.py',178),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE','if_statement',12,'p_if_statement','MyR_parser.py',179),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE','if_statement',12,'p_if_statement','MyR_parser.py',180),
  ('if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE','if_statement',12,'p_if_statement','MyR_parser.py',181),
  ('while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE','while_statement',8,'p_while_statement','MyR_parser.py',189),
  ('for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE','for_statement',11,'p_for_statement','MyR_parser.py',194),
  ('return_statement -> RETURN LPAREN expression RPAREN SEMICOLON','return_statement',5,'p_return_statement','MyR_parser.py',199),
  ('expression -> expression PLUS term','expression',3,'p_expression','MyR_parser.py',204),
  ('expression -> expression MINUS term','expression',3,'p_expression','MyR_parser.py',205),
  ('expression -> expression EQ term','expression',3,'p_expression','MyR_parser.py',206),
  ('expression -> expression NE term','expression',3,'p_expression','MyR_parser.py',207),
  ('expression -> expression LT term','expression',3,'p_expression','MyR_parser.py',208),
  ('expression -> expression LE term','expression',3,'p_expression','MyR_parser.py',209),
  ('expression -> expression GT term','expression',3,'p_expression','MyR_parser.py',210),
  ('expression -> expression GE term','expression',3,'p_expression','MyR_parser.py',211),
  ('expression -> expression AND term','expression',3,'p_expression','MyR_parser.py',212),
  ('expression -> expression OR term','expression',3,'p_expression','MyR_parser.py',213),
  ('expression -> term','expression',1,'p_expression','MyR_parser.py',214),
  ('term -> term TIMES factor','term',3,'p_term','MyR_parser.py',222),
  ('term -> term DIVIDE factor','term',3,'p_term','MyR_parser.py',223),
  ('term -> factor','term',1,'p_term','MyR_parser.py',224),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','MyR_parser.py',232),
  ('factor -> ID','factor',1,'p_factor','MyR_parser.py',233),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_factor','MyR_parser.py',234),
  ('factor -> INTEGER','factor',1,'p_factor','MyR_parser.py',235),
  ('factor -> function_call','factor',1,'p_factor','MyR_parser.py',236),
  ('factor -> FLOATING_POINT','factor',1,'p_factor','MyR_parser.py',237),
  ('empty -> <empty>','empty',0,'p_empty','MyR_parser.py',245),
]
