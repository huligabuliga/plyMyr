Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    NOT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars function_list main_function
Rule 2     program -> PROGRAM ID SEMICOLON vars empty main_function
Rule 3     vars -> VARS var_list
Rule 4     var_list -> var_list type id_list SEMICOLON
Rule 5     var_list -> type id_list SEMICOLON
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> BOOL
Rule 9     type -> CHAR
Rule 10    id_list -> id_list COMMA ID
Rule 11    id_list -> ID
Rule 12    id_list -> id_list COMMA ID LBRACKET INTEGER RBRACKET
Rule 13    id_list -> ID LBRACKET INTEGER RBRACKET
Rule 14    function_list -> function_list function
Rule 15    function_list -> empty
Rule 16    function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
Rule 17    function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 18    function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
Rule 19    function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 20    param_list -> param_list COMMA type ID
Rule 21    param_list -> type ID
Rule 22    param_list -> empty
Rule 23    main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE
Rule 24    statement_list -> statement_list statement
Rule 25    statement_list -> statement_list return_statement
Rule 26    statement_list -> statement
Rule 27    statement_list -> return_statement
Rule 28    statement_list -> empty
Rule 29    statement -> assignment SEMICOLON
Rule 30    statement -> function_call SEMICOLON
Rule 31    statement -> read_statement SEMICOLON
Rule 32    statement -> write_statement SEMICOLON
Rule 33    statement -> if_statement
Rule 34    statement -> while_statement
Rule 35    statement -> for_statement
Rule 36    statement -> circle SEMICOLON
Rule 37    statement -> line SEMICOLON
Rule 38    statement -> color SEMICOLON
Rule 39    statement -> point SEMICOLON
Rule 40    statement -> penup SEMICOLON
Rule 41    statement -> pendown SEMICOLON
Rule 42    statement -> thickness SEMICOLON
Rule 43    assignment -> ID ASSIGN expression
Rule 44    assignment -> ID LBRACKET expression RBRACKET ASSIGN expression
Rule 45    function_call -> ID LPAREN arg_list RPAREN
Rule 46    function_call -> ID LPAREN RPAREN
Rule 47    arg_list -> arg_list COMMA expression
Rule 48    arg_list -> expression
Rule 49    read_statement -> READ LPAREN id_list RPAREN
Rule 50    write_statement -> WRITE LPAREN write_list RPAREN
Rule 51    write_list -> write_list COMMA expression
Rule 52    write_list -> expression COMMA expression
Rule 53    write_list -> expression
Rule 54    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
Rule 55    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
Rule 56    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 57    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
Rule 58    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
Rule 59    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
Rule 60    while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
Rule 61    for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
Rule 62    return_statement -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 63    circle -> CIRCLE LPAREN expression RPAREN
Rule 64    circle -> CIRCLE LPAREN expression COMMA expression RPAREN
Rule 65    circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
Rule 66    line -> LINE LPAREN expression RPAREN
Rule 67    color -> COLOR LPAREN STRING RPAREN
Rule 68    point -> POINT LPAREN expression RPAREN
Rule 69    point -> POINT LPAREN expression COMMA STRING RPAREN
Rule 70    penup -> PENUP LPAREN RPAREN
Rule 71    pendown -> PENDOWN LPAREN RPAREN
Rule 72    thickness -> THICKNESS LPAREN expression RPAREN
Rule 73    expression -> expression PLUS term
Rule 74    expression -> expression MINUS term
Rule 75    expression -> expression EQ term
Rule 76    expression -> expression NE term
Rule 77    expression -> expression LT term
Rule 78    expression -> expression LE term
Rule 79    expression -> expression GT term
Rule 80    expression -> expression GE term
Rule 81    expression -> expression AND term
Rule 82    expression -> expression OR term
Rule 83    expression -> array_element
Rule 84    expression -> ID
Rule 85    expression -> INTEGER
Rule 86    expression -> FLOATING_POINT
Rule 87    expression -> STRING
Rule 88    expression -> function_call
Rule 89    expression -> term
Rule 90    array_element -> ID LBRACKET expression RBRACKET
Rule 91    term -> term TIMES factor
Rule 92    term -> term DIVIDE factor
Rule 93    term -> factor
Rule 94    factor -> LPAREN expression RPAREN
Rule 95    factor -> ID LBRACKET expression RBRACKET
Rule 96    factor -> ID
Rule 97    factor -> INTEGER
Rule 98    factor -> function_call
Rule 99    factor -> FLOATING_POINT
Rule 100   empty -> <empty>

Terminals, with rules where they appear

AND                  : 81
ARRAY                : 
ASSIGN               : 43 44
BOOL                 : 8
CHAR                 : 9
CIRCLE               : 63 64 65
COLOR                : 67
COMMA                : 10 12 20 47 51 52 64 65 65 69
DIVIDE               : 92
DO                   : 60 61
ELSE                 : 56 57 58 59
EQ                   : 75
FLOAT                : 7
FLOATING_POINT       : 86 99
FOR                  : 61
FUNCTION             : 16 17 18 19
GE                   : 80
GT                   : 79
ID                   : 1 2 10 11 12 13 16 17 18 19 20 21 43 44 45 46 61 84 90 95 96
IF                   : 54 55 56 57 58 59
INT                  : 6
INTEGER              : 12 13 85 97
LBRACE               : 16 17 18 19 23 54 55 56 56 57 57 58 58 59 59 60 61
LBRACKET             : 12 13 44 61 90 95
LE                   : 78
LINE                 : 66
LPAREN               : 16 17 18 19 23 45 46 49 50 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 70 71 72 94
LT                   : 77
MAIN                 : 23
MINUS                : 74
NE                   : 76
NOT                  : 
OR                   : 82
PENDOWN              : 71
PENUP                : 70
PLUS                 : 73
POINT                : 68 69
PROGRAM              : 1 2
RBRACE               : 16 17 18 19 23 54 55 56 56 57 57 58 58 59 59 60 61
RBRACKET             : 12 13 44 61 90 95
READ                 : 49
RETURN               : 62
RPAREN               : 16 17 18 19 23 45 46 49 50 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 70 71 72 94
SEMICOLON            : 1 2 4 5 29 30 31 32 36 37 38 39 40 41 42 62
STRING               : 67 69 87
THEN                 : 54 55 56 57 58 59
THICKNESS            : 72
TIMES                : 91
TO                   : 61
VARS                 : 3
VOID                 : 18 19
WHILE                : 60
WRITE                : 50
error                : 

Nonterminals, with rules where they appear

arg_list             : 45 47
array_element        : 83
assignment           : 29
circle               : 36
color                : 38
empty                : 2 15 22 28
expression           : 43 44 44 47 48 51 52 52 53 54 55 56 57 58 59 60 61 61 62 63 64 64 65 65 65 66 68 69 72 73 74 75 76 77 78 79 80 81 82 90 94 95
factor               : 91 92 93
for_statement        : 35
function             : 14
function_call        : 30 88 98
function_list        : 1 14
id_list              : 4 5 10 12 49
if_statement         : 33
line                 : 37
main_function        : 1 2
param_list           : 16 17 18 19 20
pendown              : 41
penup                : 40
point                : 39
program              : 0
read_statement       : 31
return_statement     : 25 27 55 57 58 59 59
statement            : 24 26
statement_list       : 16 17 18 19 23 24 25 54 56 56 57 58 60 61
term                 : 73 74 75 76 77 78 79 80 81 82 89 91 92
thickness            : 42
type                 : 4 5 16 17 20 21
var_list             : 3 4
vars                 : 1 2 16 18
while_statement      : 34
write_list           : 50 51
write_statement      : 32

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars function_list main_function
    (2) program -> . PROGRAM ID SEMICOLON vars empty main_function

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars function_list main_function
    (2) program -> PROGRAM . ID SEMICOLON vars empty main_function

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars function_list main_function
    (2) program -> PROGRAM ID . SEMICOLON vars empty main_function

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars function_list main_function
    (2) program -> PROGRAM ID SEMICOLON . vars empty main_function
    (3) vars -> . VARS var_list

    VARS            shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . function_list main_function
    (2) program -> PROGRAM ID SEMICOLON vars . empty main_function
    (14) function_list -> . function_list function
    (15) function_list -> . empty
    (100) empty -> .

    MAIN            reduce using rule 100 (empty -> .)
    FUNCTION        reduce using rule 100 (empty -> .)

    function_list                  shift and go to state 7
    empty                          shift and go to state 8

state 6

    (3) vars -> VARS . var_list
    (4) var_list -> . var_list type id_list SEMICOLON
    (5) var_list -> . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    var_list                       shift and go to state 9
    type                           shift and go to state 10

state 7

    (1) program -> PROGRAM ID SEMICOLON vars function_list . main_function
    (14) function_list -> function_list . function
    (23) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE
    (16) function -> . FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> . FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (18) function -> . FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (19) function -> . FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    MAIN            shift and go to state 17
    FUNCTION        shift and go to state 18

    main_function                  shift and go to state 15
    function                       shift and go to state 16

state 8

    (2) program -> PROGRAM ID SEMICOLON vars empty . main_function
    (15) function_list -> empty .
    (23) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE

  ! shift/reduce conflict for MAIN resolved as shift
    FUNCTION        reduce using rule 15 (function_list -> empty .)
    MAIN            shift and go to state 17

  ! MAIN            [ reduce using rule 15 (function_list -> empty .) ]

    main_function                  shift and go to state 19

state 9

    (3) vars -> VARS var_list .
    (4) var_list -> var_list . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    MAIN            reduce using rule 3 (vars -> VARS var_list .)
    FUNCTION        reduce using rule 3 (vars -> VARS var_list .)
    LBRACE          reduce using rule 3 (vars -> VARS var_list .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 20

state 10

    (5) var_list -> type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID
    (12) id_list -> . id_list COMMA ID LBRACKET INTEGER RBRACKET
    (13) id_list -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 22

    id_list                        shift and go to state 21

state 11

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 12

    (7) type -> FLOAT .

    ID              reduce using rule 7 (type -> FLOAT .)


state 13

    (8) type -> BOOL .

    ID              reduce using rule 8 (type -> BOOL .)


state 14

    (9) type -> CHAR .

    ID              reduce using rule 9 (type -> CHAR .)


state 15

    (1) program -> PROGRAM ID SEMICOLON vars function_list main_function .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars function_list main_function .)


state 16

    (14) function_list -> function_list function .

    MAIN            reduce using rule 14 (function_list -> function_list function .)
    FUNCTION        reduce using rule 14 (function_list -> function_list function .)


state 17

    (23) main_function -> MAIN . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 23


state 18

    (16) function -> FUNCTION . type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION . type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (18) function -> FUNCTION . VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION . VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 24

state 19

    (2) program -> PROGRAM ID SEMICOLON vars empty main_function .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars empty main_function .)


state 20

    (4) var_list -> var_list type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID
    (12) id_list -> . id_list COMMA ID LBRACKET INTEGER RBRACKET
    (13) id_list -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 22

    id_list                        shift and go to state 26

state 21

    (5) var_list -> type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID
    (12) id_list -> id_list . COMMA ID LBRACKET INTEGER RBRACKET

    SEMICOLON       shift and go to state 27
    COMMA           shift and go to state 28


state 22

    (11) id_list -> ID .
    (13) id_list -> ID . LBRACKET INTEGER RBRACKET

    SEMICOLON       reduce using rule 11 (id_list -> ID .)
    COMMA           reduce using rule 11 (id_list -> ID .)
    RPAREN          reduce using rule 11 (id_list -> ID .)
    LBRACKET        shift and go to state 29


state 23

    (23) main_function -> MAIN LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 30


state 24

    (16) function -> FUNCTION type . ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION type . ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 31


state 25

    (18) function -> FUNCTION VOID . ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION VOID . ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 32


state 26

    (4) var_list -> var_list type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID
    (12) id_list -> id_list . COMMA ID LBRACKET INTEGER RBRACKET

    SEMICOLON       shift and go to state 33
    COMMA           shift and go to state 28


state 27

    (5) var_list -> type id_list SEMICOLON .

    INT             reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FLOAT           reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    BOOL            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    CHAR            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    MAIN            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FUNCTION        reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    LBRACE          reduce using rule 5 (var_list -> type id_list SEMICOLON .)


state 28

    (10) id_list -> id_list COMMA . ID
    (12) id_list -> id_list COMMA . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 34


state 29

    (13) id_list -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 35


state 30

    (23) main_function -> MAIN LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 36


state 31

    (16) function -> FUNCTION type ID . LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION type ID . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 37


state 32

    (18) function -> FUNCTION VOID ID . LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION VOID ID . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 38


state 33

    (4) var_list -> var_list type id_list SEMICOLON .

    INT             reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FLOAT           reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    BOOL            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    CHAR            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    MAIN            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FUNCTION        reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    LBRACE          reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)


state 34

    (10) id_list -> id_list COMMA ID .
    (12) id_list -> id_list COMMA ID . LBRACKET INTEGER RBRACKET

    SEMICOLON       reduce using rule 10 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 10 (id_list -> id_list COMMA ID .)
    RPAREN          reduce using rule 10 (id_list -> id_list COMMA ID .)
    LBRACKET        shift and go to state 39


state 35

    (13) id_list -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 40


state 36

    (23) main_function -> MAIN LPAREN RPAREN LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 41
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 37

    (16) function -> FUNCTION type ID LPAREN . param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION type ID LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (20) param_list -> . param_list COMMA type ID
    (21) param_list -> . type ID
    (22) param_list -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR
    (100) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    type                           shift and go to state 73
    param_list                     shift and go to state 74
    empty                          shift and go to state 75

state 38

    (18) function -> FUNCTION VOID ID LPAREN . param_list RPAREN vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION VOID ID LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (20) param_list -> . param_list COMMA type ID
    (21) param_list -> . type ID
    (22) param_list -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR
    (100) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    param_list                     shift and go to state 76
    type                           shift and go to state 73
    empty                          shift and go to state 75

state 39

    (12) id_list -> id_list COMMA ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 77


state 40

    (13) id_list -> ID LBRACKET INTEGER RBRACKET .

    SEMICOLON       reduce using rule 13 (id_list -> ID LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 13 (id_list -> ID LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 13 (id_list -> ID LBRACKET INTEGER RBRACKET .)


state 41

    (23) main_function -> MAIN LPAREN RPAREN LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 78
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 42

    (26) statement_list -> statement .

    RBRACE          reduce using rule 26 (statement_list -> statement .)
    RETURN          reduce using rule 26 (statement_list -> statement .)
    ID              reduce using rule 26 (statement_list -> statement .)
    READ            reduce using rule 26 (statement_list -> statement .)
    WRITE           reduce using rule 26 (statement_list -> statement .)
    IF              reduce using rule 26 (statement_list -> statement .)
    WHILE           reduce using rule 26 (statement_list -> statement .)
    FOR             reduce using rule 26 (statement_list -> statement .)
    CIRCLE          reduce using rule 26 (statement_list -> statement .)
    LINE            reduce using rule 26 (statement_list -> statement .)
    COLOR           reduce using rule 26 (statement_list -> statement .)
    POINT           reduce using rule 26 (statement_list -> statement .)
    PENUP           reduce using rule 26 (statement_list -> statement .)
    PENDOWN         reduce using rule 26 (statement_list -> statement .)
    THICKNESS       reduce using rule 26 (statement_list -> statement .)


state 43

    (27) statement_list -> return_statement .

    RBRACE          reduce using rule 27 (statement_list -> return_statement .)
    RETURN          reduce using rule 27 (statement_list -> return_statement .)
    ID              reduce using rule 27 (statement_list -> return_statement .)
    READ            reduce using rule 27 (statement_list -> return_statement .)
    WRITE           reduce using rule 27 (statement_list -> return_statement .)
    IF              reduce using rule 27 (statement_list -> return_statement .)
    WHILE           reduce using rule 27 (statement_list -> return_statement .)
    FOR             reduce using rule 27 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 27 (statement_list -> return_statement .)
    LINE            reduce using rule 27 (statement_list -> return_statement .)
    COLOR           reduce using rule 27 (statement_list -> return_statement .)
    POINT           reduce using rule 27 (statement_list -> return_statement .)
    PENUP           reduce using rule 27 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 27 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 27 (statement_list -> return_statement .)


state 44

    (28) statement_list -> empty .

    RBRACE          reduce using rule 28 (statement_list -> empty .)
    RETURN          reduce using rule 28 (statement_list -> empty .)
    ID              reduce using rule 28 (statement_list -> empty .)
    READ            reduce using rule 28 (statement_list -> empty .)
    WRITE           reduce using rule 28 (statement_list -> empty .)
    IF              reduce using rule 28 (statement_list -> empty .)
    WHILE           reduce using rule 28 (statement_list -> empty .)
    FOR             reduce using rule 28 (statement_list -> empty .)
    CIRCLE          reduce using rule 28 (statement_list -> empty .)
    LINE            reduce using rule 28 (statement_list -> empty .)
    COLOR           reduce using rule 28 (statement_list -> empty .)
    POINT           reduce using rule 28 (statement_list -> empty .)
    PENUP           reduce using rule 28 (statement_list -> empty .)
    PENDOWN         reduce using rule 28 (statement_list -> empty .)
    THICKNESS       reduce using rule 28 (statement_list -> empty .)


state 45

    (29) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 81


state 46

    (30) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 82


state 47

    (31) statement -> read_statement . SEMICOLON

    SEMICOLON       shift and go to state 83


state 48

    (32) statement -> write_statement . SEMICOLON

    SEMICOLON       shift and go to state 84


state 49

    (33) statement -> if_statement .

    RBRACE          reduce using rule 33 (statement -> if_statement .)
    RETURN          reduce using rule 33 (statement -> if_statement .)
    ID              reduce using rule 33 (statement -> if_statement .)
    READ            reduce using rule 33 (statement -> if_statement .)
    WRITE           reduce using rule 33 (statement -> if_statement .)
    IF              reduce using rule 33 (statement -> if_statement .)
    WHILE           reduce using rule 33 (statement -> if_statement .)
    FOR             reduce using rule 33 (statement -> if_statement .)
    CIRCLE          reduce using rule 33 (statement -> if_statement .)
    LINE            reduce using rule 33 (statement -> if_statement .)
    COLOR           reduce using rule 33 (statement -> if_statement .)
    POINT           reduce using rule 33 (statement -> if_statement .)
    PENUP           reduce using rule 33 (statement -> if_statement .)
    PENDOWN         reduce using rule 33 (statement -> if_statement .)
    THICKNESS       reduce using rule 33 (statement -> if_statement .)


state 50

    (34) statement -> while_statement .

    RBRACE          reduce using rule 34 (statement -> while_statement .)
    RETURN          reduce using rule 34 (statement -> while_statement .)
    ID              reduce using rule 34 (statement -> while_statement .)
    READ            reduce using rule 34 (statement -> while_statement .)
    WRITE           reduce using rule 34 (statement -> while_statement .)
    IF              reduce using rule 34 (statement -> while_statement .)
    WHILE           reduce using rule 34 (statement -> while_statement .)
    FOR             reduce using rule 34 (statement -> while_statement .)
    CIRCLE          reduce using rule 34 (statement -> while_statement .)
    LINE            reduce using rule 34 (statement -> while_statement .)
    COLOR           reduce using rule 34 (statement -> while_statement .)
    POINT           reduce using rule 34 (statement -> while_statement .)
    PENUP           reduce using rule 34 (statement -> while_statement .)
    PENDOWN         reduce using rule 34 (statement -> while_statement .)
    THICKNESS       reduce using rule 34 (statement -> while_statement .)


state 51

    (35) statement -> for_statement .

    RBRACE          reduce using rule 35 (statement -> for_statement .)
    RETURN          reduce using rule 35 (statement -> for_statement .)
    ID              reduce using rule 35 (statement -> for_statement .)
    READ            reduce using rule 35 (statement -> for_statement .)
    WRITE           reduce using rule 35 (statement -> for_statement .)
    IF              reduce using rule 35 (statement -> for_statement .)
    WHILE           reduce using rule 35 (statement -> for_statement .)
    FOR             reduce using rule 35 (statement -> for_statement .)
    CIRCLE          reduce using rule 35 (statement -> for_statement .)
    LINE            reduce using rule 35 (statement -> for_statement .)
    COLOR           reduce using rule 35 (statement -> for_statement .)
    POINT           reduce using rule 35 (statement -> for_statement .)
    PENUP           reduce using rule 35 (statement -> for_statement .)
    PENDOWN         reduce using rule 35 (statement -> for_statement .)
    THICKNESS       reduce using rule 35 (statement -> for_statement .)


state 52

    (36) statement -> circle . SEMICOLON

    SEMICOLON       shift and go to state 85


state 53

    (37) statement -> line . SEMICOLON

    SEMICOLON       shift and go to state 86


state 54

    (38) statement -> color . SEMICOLON

    SEMICOLON       shift and go to state 87


state 55

    (39) statement -> point . SEMICOLON

    SEMICOLON       shift and go to state 88


state 56

    (40) statement -> penup . SEMICOLON

    SEMICOLON       shift and go to state 89


state 57

    (41) statement -> pendown . SEMICOLON

    SEMICOLON       shift and go to state 90


state 58

    (42) statement -> thickness . SEMICOLON

    SEMICOLON       shift and go to state 91


state 59

    (62) return_statement -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 60

    (43) assignment -> ID . ASSIGN expression
    (44) assignment -> ID . LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> ID . LPAREN arg_list RPAREN
    (46) function_call -> ID . LPAREN RPAREN

    ASSIGN          shift and go to state 93
    LBRACKET        shift and go to state 94
    LPAREN          shift and go to state 95


state 61

    (49) read_statement -> READ . LPAREN id_list RPAREN

    LPAREN          shift and go to state 96


state 62

    (50) write_statement -> WRITE . LPAREN write_list RPAREN

    LPAREN          shift and go to state 97


state 63

    (54) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    LPAREN          shift and go to state 98


state 64

    (60) while_statement -> WHILE . LPAREN expression RPAREN DO LBRACE statement_list RBRACE

    LPAREN          shift and go to state 99


state 65

    (61) for_statement -> FOR . ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    ID              shift and go to state 100


state 66

    (63) circle -> CIRCLE . LPAREN expression RPAREN
    (64) circle -> CIRCLE . LPAREN expression COMMA expression RPAREN
    (65) circle -> CIRCLE . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 101


state 67

    (66) line -> LINE . LPAREN expression RPAREN

    LPAREN          shift and go to state 102


state 68

    (67) color -> COLOR . LPAREN STRING RPAREN

    LPAREN          shift and go to state 103


state 69

    (68) point -> POINT . LPAREN expression RPAREN
    (69) point -> POINT . LPAREN expression COMMA STRING RPAREN

    LPAREN          shift and go to state 104


state 70

    (70) penup -> PENUP . LPAREN RPAREN

    LPAREN          shift and go to state 105


state 71

    (71) pendown -> PENDOWN . LPAREN RPAREN

    LPAREN          shift and go to state 106


state 72

    (72) thickness -> THICKNESS . LPAREN expression RPAREN

    LPAREN          shift and go to state 107


state 73

    (21) param_list -> type . ID

    ID              shift and go to state 108


state 74

    (16) function -> FUNCTION type ID LPAREN param_list . RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION type ID LPAREN param_list . RPAREN LBRACE statement_list RBRACE
    (20) param_list -> param_list . COMMA type ID

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 75

    (22) param_list -> empty .

    RPAREN          reduce using rule 22 (param_list -> empty .)
    COMMA           reduce using rule 22 (param_list -> empty .)


state 76

    (18) function -> FUNCTION VOID ID LPAREN param_list . RPAREN vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION VOID ID LPAREN param_list . RPAREN LBRACE statement_list RBRACE
    (20) param_list -> param_list . COMMA type ID

    RPAREN          shift and go to state 111
    COMMA           shift and go to state 110


state 77

    (12) id_list -> id_list COMMA ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 112


state 78

    (23) main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .

    $end            reduce using rule 23 (main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .)


state 79

    (24) statement_list -> statement_list statement .

    RBRACE          reduce using rule 24 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 24 (statement_list -> statement_list statement .)
    ID              reduce using rule 24 (statement_list -> statement_list statement .)
    READ            reduce using rule 24 (statement_list -> statement_list statement .)
    WRITE           reduce using rule 24 (statement_list -> statement_list statement .)
    IF              reduce using rule 24 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 24 (statement_list -> statement_list statement .)
    FOR             reduce using rule 24 (statement_list -> statement_list statement .)
    CIRCLE          reduce using rule 24 (statement_list -> statement_list statement .)
    LINE            reduce using rule 24 (statement_list -> statement_list statement .)
    COLOR           reduce using rule 24 (statement_list -> statement_list statement .)
    POINT           reduce using rule 24 (statement_list -> statement_list statement .)
    PENUP           reduce using rule 24 (statement_list -> statement_list statement .)
    PENDOWN         reduce using rule 24 (statement_list -> statement_list statement .)
    THICKNESS       reduce using rule 24 (statement_list -> statement_list statement .)


state 80

    (25) statement_list -> statement_list return_statement .

    RBRACE          reduce using rule 25 (statement_list -> statement_list return_statement .)
    RETURN          reduce using rule 25 (statement_list -> statement_list return_statement .)
    ID              reduce using rule 25 (statement_list -> statement_list return_statement .)
    READ            reduce using rule 25 (statement_list -> statement_list return_statement .)
    WRITE           reduce using rule 25 (statement_list -> statement_list return_statement .)
    IF              reduce using rule 25 (statement_list -> statement_list return_statement .)
    WHILE           reduce using rule 25 (statement_list -> statement_list return_statement .)
    FOR             reduce using rule 25 (statement_list -> statement_list return_statement .)
    CIRCLE          reduce using rule 25 (statement_list -> statement_list return_statement .)
    LINE            reduce using rule 25 (statement_list -> statement_list return_statement .)
    COLOR           reduce using rule 25 (statement_list -> statement_list return_statement .)
    POINT           reduce using rule 25 (statement_list -> statement_list return_statement .)
    PENUP           reduce using rule 25 (statement_list -> statement_list return_statement .)
    PENDOWN         reduce using rule 25 (statement_list -> statement_list return_statement .)
    THICKNESS       reduce using rule 25 (statement_list -> statement_list return_statement .)


state 81

    (29) statement -> assignment SEMICOLON .

    RBRACE          reduce using rule 29 (statement -> assignment SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> assignment SEMICOLON .)
    ID              reduce using rule 29 (statement -> assignment SEMICOLON .)
    READ            reduce using rule 29 (statement -> assignment SEMICOLON .)
    WRITE           reduce using rule 29 (statement -> assignment SEMICOLON .)
    IF              reduce using rule 29 (statement -> assignment SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> assignment SEMICOLON .)
    FOR             reduce using rule 29 (statement -> assignment SEMICOLON .)
    CIRCLE          reduce using rule 29 (statement -> assignment SEMICOLON .)
    LINE            reduce using rule 29 (statement -> assignment SEMICOLON .)
    COLOR           reduce using rule 29 (statement -> assignment SEMICOLON .)
    POINT           reduce using rule 29 (statement -> assignment SEMICOLON .)
    PENUP           reduce using rule 29 (statement -> assignment SEMICOLON .)
    PENDOWN         reduce using rule 29 (statement -> assignment SEMICOLON .)
    THICKNESS       reduce using rule 29 (statement -> assignment SEMICOLON .)


state 82

    (30) statement -> function_call SEMICOLON .

    RBRACE          reduce using rule 30 (statement -> function_call SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> function_call SEMICOLON .)
    ID              reduce using rule 30 (statement -> function_call SEMICOLON .)
    READ            reduce using rule 30 (statement -> function_call SEMICOLON .)
    WRITE           reduce using rule 30 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 30 (statement -> function_call SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> function_call SEMICOLON .)
    FOR             reduce using rule 30 (statement -> function_call SEMICOLON .)
    CIRCLE          reduce using rule 30 (statement -> function_call SEMICOLON .)
    LINE            reduce using rule 30 (statement -> function_call SEMICOLON .)
    COLOR           reduce using rule 30 (statement -> function_call SEMICOLON .)
    POINT           reduce using rule 30 (statement -> function_call SEMICOLON .)
    PENUP           reduce using rule 30 (statement -> function_call SEMICOLON .)
    PENDOWN         reduce using rule 30 (statement -> function_call SEMICOLON .)
    THICKNESS       reduce using rule 30 (statement -> function_call SEMICOLON .)


state 83

    (31) statement -> read_statement SEMICOLON .

    RBRACE          reduce using rule 31 (statement -> read_statement SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> read_statement SEMICOLON .)
    ID              reduce using rule 31 (statement -> read_statement SEMICOLON .)
    READ            reduce using rule 31 (statement -> read_statement SEMICOLON .)
    WRITE           reduce using rule 31 (statement -> read_statement SEMICOLON .)
    IF              reduce using rule 31 (statement -> read_statement SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> read_statement SEMICOLON .)
    FOR             reduce using rule 31 (statement -> read_statement SEMICOLON .)
    CIRCLE          reduce using rule 31 (statement -> read_statement SEMICOLON .)
    LINE            reduce using rule 31 (statement -> read_statement SEMICOLON .)
    COLOR           reduce using rule 31 (statement -> read_statement SEMICOLON .)
    POINT           reduce using rule 31 (statement -> read_statement SEMICOLON .)
    PENUP           reduce using rule 31 (statement -> read_statement SEMICOLON .)
    PENDOWN         reduce using rule 31 (statement -> read_statement SEMICOLON .)
    THICKNESS       reduce using rule 31 (statement -> read_statement SEMICOLON .)


state 84

    (32) statement -> write_statement SEMICOLON .

    RBRACE          reduce using rule 32 (statement -> write_statement SEMICOLON .)
    RETURN          reduce using rule 32 (statement -> write_statement SEMICOLON .)
    ID              reduce using rule 32 (statement -> write_statement SEMICOLON .)
    READ            reduce using rule 32 (statement -> write_statement SEMICOLON .)
    WRITE           reduce using rule 32 (statement -> write_statement SEMICOLON .)
    IF              reduce using rule 32 (statement -> write_statement SEMICOLON .)
    WHILE           reduce using rule 32 (statement -> write_statement SEMICOLON .)
    FOR             reduce using rule 32 (statement -> write_statement SEMICOLON .)
    CIRCLE          reduce using rule 32 (statement -> write_statement SEMICOLON .)
    LINE            reduce using rule 32 (statement -> write_statement SEMICOLON .)
    COLOR           reduce using rule 32 (statement -> write_statement SEMICOLON .)
    POINT           reduce using rule 32 (statement -> write_statement SEMICOLON .)
    PENUP           reduce using rule 32 (statement -> write_statement SEMICOLON .)
    PENDOWN         reduce using rule 32 (statement -> write_statement SEMICOLON .)
    THICKNESS       reduce using rule 32 (statement -> write_statement SEMICOLON .)


state 85

    (36) statement -> circle SEMICOLON .

    RBRACE          reduce using rule 36 (statement -> circle SEMICOLON .)
    RETURN          reduce using rule 36 (statement -> circle SEMICOLON .)
    ID              reduce using rule 36 (statement -> circle SEMICOLON .)
    READ            reduce using rule 36 (statement -> circle SEMICOLON .)
    WRITE           reduce using rule 36 (statement -> circle SEMICOLON .)
    IF              reduce using rule 36 (statement -> circle SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> circle SEMICOLON .)
    FOR             reduce using rule 36 (statement -> circle SEMICOLON .)
    CIRCLE          reduce using rule 36 (statement -> circle SEMICOLON .)
    LINE            reduce using rule 36 (statement -> circle SEMICOLON .)
    COLOR           reduce using rule 36 (statement -> circle SEMICOLON .)
    POINT           reduce using rule 36 (statement -> circle SEMICOLON .)
    PENUP           reduce using rule 36 (statement -> circle SEMICOLON .)
    PENDOWN         reduce using rule 36 (statement -> circle SEMICOLON .)
    THICKNESS       reduce using rule 36 (statement -> circle SEMICOLON .)


state 86

    (37) statement -> line SEMICOLON .

    RBRACE          reduce using rule 37 (statement -> line SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> line SEMICOLON .)
    ID              reduce using rule 37 (statement -> line SEMICOLON .)
    READ            reduce using rule 37 (statement -> line SEMICOLON .)
    WRITE           reduce using rule 37 (statement -> line SEMICOLON .)
    IF              reduce using rule 37 (statement -> line SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> line SEMICOLON .)
    FOR             reduce using rule 37 (statement -> line SEMICOLON .)
    CIRCLE          reduce using rule 37 (statement -> line SEMICOLON .)
    LINE            reduce using rule 37 (statement -> line SEMICOLON .)
    COLOR           reduce using rule 37 (statement -> line SEMICOLON .)
    POINT           reduce using rule 37 (statement -> line SEMICOLON .)
    PENUP           reduce using rule 37 (statement -> line SEMICOLON .)
    PENDOWN         reduce using rule 37 (statement -> line SEMICOLON .)
    THICKNESS       reduce using rule 37 (statement -> line SEMICOLON .)


state 87

    (38) statement -> color SEMICOLON .

    RBRACE          reduce using rule 38 (statement -> color SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> color SEMICOLON .)
    ID              reduce using rule 38 (statement -> color SEMICOLON .)
    READ            reduce using rule 38 (statement -> color SEMICOLON .)
    WRITE           reduce using rule 38 (statement -> color SEMICOLON .)
    IF              reduce using rule 38 (statement -> color SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> color SEMICOLON .)
    FOR             reduce using rule 38 (statement -> color SEMICOLON .)
    CIRCLE          reduce using rule 38 (statement -> color SEMICOLON .)
    LINE            reduce using rule 38 (statement -> color SEMICOLON .)
    COLOR           reduce using rule 38 (statement -> color SEMICOLON .)
    POINT           reduce using rule 38 (statement -> color SEMICOLON .)
    PENUP           reduce using rule 38 (statement -> color SEMICOLON .)
    PENDOWN         reduce using rule 38 (statement -> color SEMICOLON .)
    THICKNESS       reduce using rule 38 (statement -> color SEMICOLON .)


state 88

    (39) statement -> point SEMICOLON .

    RBRACE          reduce using rule 39 (statement -> point SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> point SEMICOLON .)
    ID              reduce using rule 39 (statement -> point SEMICOLON .)
    READ            reduce using rule 39 (statement -> point SEMICOLON .)
    WRITE           reduce using rule 39 (statement -> point SEMICOLON .)
    IF              reduce using rule 39 (statement -> point SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> point SEMICOLON .)
    FOR             reduce using rule 39 (statement -> point SEMICOLON .)
    CIRCLE          reduce using rule 39 (statement -> point SEMICOLON .)
    LINE            reduce using rule 39 (statement -> point SEMICOLON .)
    COLOR           reduce using rule 39 (statement -> point SEMICOLON .)
    POINT           reduce using rule 39 (statement -> point SEMICOLON .)
    PENUP           reduce using rule 39 (statement -> point SEMICOLON .)
    PENDOWN         reduce using rule 39 (statement -> point SEMICOLON .)
    THICKNESS       reduce using rule 39 (statement -> point SEMICOLON .)


state 89

    (40) statement -> penup SEMICOLON .

    RBRACE          reduce using rule 40 (statement -> penup SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> penup SEMICOLON .)
    ID              reduce using rule 40 (statement -> penup SEMICOLON .)
    READ            reduce using rule 40 (statement -> penup SEMICOLON .)
    WRITE           reduce using rule 40 (statement -> penup SEMICOLON .)
    IF              reduce using rule 40 (statement -> penup SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> penup SEMICOLON .)
    FOR             reduce using rule 40 (statement -> penup SEMICOLON .)
    CIRCLE          reduce using rule 40 (statement -> penup SEMICOLON .)
    LINE            reduce using rule 40 (statement -> penup SEMICOLON .)
    COLOR           reduce using rule 40 (statement -> penup SEMICOLON .)
    POINT           reduce using rule 40 (statement -> penup SEMICOLON .)
    PENUP           reduce using rule 40 (statement -> penup SEMICOLON .)
    PENDOWN         reduce using rule 40 (statement -> penup SEMICOLON .)
    THICKNESS       reduce using rule 40 (statement -> penup SEMICOLON .)


state 90

    (41) statement -> pendown SEMICOLON .

    RBRACE          reduce using rule 41 (statement -> pendown SEMICOLON .)
    RETURN          reduce using rule 41 (statement -> pendown SEMICOLON .)
    ID              reduce using rule 41 (statement -> pendown SEMICOLON .)
    READ            reduce using rule 41 (statement -> pendown SEMICOLON .)
    WRITE           reduce using rule 41 (statement -> pendown SEMICOLON .)
    IF              reduce using rule 41 (statement -> pendown SEMICOLON .)
    WHILE           reduce using rule 41 (statement -> pendown SEMICOLON .)
    FOR             reduce using rule 41 (statement -> pendown SEMICOLON .)
    CIRCLE          reduce using rule 41 (statement -> pendown SEMICOLON .)
    LINE            reduce using rule 41 (statement -> pendown SEMICOLON .)
    COLOR           reduce using rule 41 (statement -> pendown SEMICOLON .)
    POINT           reduce using rule 41 (statement -> pendown SEMICOLON .)
    PENUP           reduce using rule 41 (statement -> pendown SEMICOLON .)
    PENDOWN         reduce using rule 41 (statement -> pendown SEMICOLON .)
    THICKNESS       reduce using rule 41 (statement -> pendown SEMICOLON .)


state 91

    (42) statement -> thickness SEMICOLON .

    RBRACE          reduce using rule 42 (statement -> thickness SEMICOLON .)
    RETURN          reduce using rule 42 (statement -> thickness SEMICOLON .)
    ID              reduce using rule 42 (statement -> thickness SEMICOLON .)
    READ            reduce using rule 42 (statement -> thickness SEMICOLON .)
    WRITE           reduce using rule 42 (statement -> thickness SEMICOLON .)
    IF              reduce using rule 42 (statement -> thickness SEMICOLON .)
    WHILE           reduce using rule 42 (statement -> thickness SEMICOLON .)
    FOR             reduce using rule 42 (statement -> thickness SEMICOLON .)
    CIRCLE          reduce using rule 42 (statement -> thickness SEMICOLON .)
    LINE            reduce using rule 42 (statement -> thickness SEMICOLON .)
    COLOR           reduce using rule 42 (statement -> thickness SEMICOLON .)
    POINT           reduce using rule 42 (statement -> thickness SEMICOLON .)
    PENUP           reduce using rule 42 (statement -> thickness SEMICOLON .)
    PENDOWN         reduce using rule 42 (statement -> thickness SEMICOLON .)
    THICKNESS       reduce using rule 42 (statement -> thickness SEMICOLON .)


state 92

    (62) return_statement -> RETURN LPAREN . expression RPAREN SEMICOLON
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 114
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 93

    (43) assignment -> ID ASSIGN . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 123
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 94

    (44) assignment -> ID LBRACKET . expression RBRACKET ASSIGN expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 124
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 95

    (45) function_call -> ID LPAREN . arg_list RPAREN
    (46) function_call -> ID LPAREN . RPAREN
    (47) arg_list -> . arg_list COMMA expression
    (48) arg_list -> . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    RPAREN          shift and go to state 126
    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    arg_list                       shift and go to state 125
    expression                     shift and go to state 127
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 96

    (49) read_statement -> READ LPAREN . id_list RPAREN
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID
    (12) id_list -> . id_list COMMA ID LBRACKET INTEGER RBRACKET
    (13) id_list -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 22

    id_list                        shift and go to state 128

state 97

    (50) write_statement -> WRITE LPAREN . write_list RPAREN
    (51) write_list -> . write_list COMMA expression
    (52) write_list -> . expression COMMA expression
    (53) write_list -> . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    write_list                     shift and go to state 129
    expression                     shift and go to state 130
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 98

    (54) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 131
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 99

    (60) while_statement -> WHILE LPAREN . expression RPAREN DO LBRACE statement_list RBRACE
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 132
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 100

    (61) for_statement -> FOR ID . LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    LBRACKET        shift and go to state 133


state 101

    (63) circle -> CIRCLE LPAREN . expression RPAREN
    (64) circle -> CIRCLE LPAREN . expression COMMA expression RPAREN
    (65) circle -> CIRCLE LPAREN . expression COMMA expression COMMA expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 134
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 102

    (66) line -> LINE LPAREN . expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 135
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 103

    (67) color -> COLOR LPAREN . STRING RPAREN

    STRING          shift and go to state 136


state 104

    (68) point -> POINT LPAREN . expression RPAREN
    (69) point -> POINT LPAREN . expression COMMA STRING RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 137
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 105

    (70) penup -> PENUP LPAREN . RPAREN

    RPAREN          shift and go to state 138


state 106

    (71) pendown -> PENDOWN LPAREN . RPAREN

    RPAREN          shift and go to state 139


state 107

    (72) thickness -> THICKNESS LPAREN . expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 140
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 108

    (21) param_list -> type ID .

    RPAREN          reduce using rule 21 (param_list -> type ID .)
    COMMA           reduce using rule 21 (param_list -> type ID .)


state 109

    (16) function -> FUNCTION type ID LPAREN param_list RPAREN . vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION type ID LPAREN param_list RPAREN . LBRACE statement_list RBRACE
    (3) vars -> . VARS var_list

    LBRACE          shift and go to state 142
    VARS            shift and go to state 6

    vars                           shift and go to state 141

state 110

    (20) param_list -> param_list COMMA . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 143

state 111

    (18) function -> FUNCTION VOID ID LPAREN param_list RPAREN . vars LBRACE statement_list RBRACE
    (19) function -> FUNCTION VOID ID LPAREN param_list RPAREN . LBRACE statement_list RBRACE
    (3) vars -> . VARS var_list

    LBRACE          shift and go to state 145
    VARS            shift and go to state 6

    vars                           shift and go to state 144

state 112

    (12) id_list -> id_list COMMA ID LBRACKET INTEGER RBRACKET .

    SEMICOLON       reduce using rule 12 (id_list -> id_list COMMA ID LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 12 (id_list -> id_list COMMA ID LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 12 (id_list -> id_list COMMA ID LBRACKET INTEGER RBRACKET .)


state 113

    (94) factor -> LPAREN . expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 146
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 114

    (62) return_statement -> RETURN LPAREN expression . RPAREN SEMICOLON
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 147
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 115

    (89) expression -> term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 89 (expression -> term .)
    PLUS            reduce using rule 89 (expression -> term .)
    MINUS           reduce using rule 89 (expression -> term .)
    EQ              reduce using rule 89 (expression -> term .)
    NE              reduce using rule 89 (expression -> term .)
    LT              reduce using rule 89 (expression -> term .)
    LE              reduce using rule 89 (expression -> term .)
    GT              reduce using rule 89 (expression -> term .)
    GE              reduce using rule 89 (expression -> term .)
    AND             reduce using rule 89 (expression -> term .)
    OR              reduce using rule 89 (expression -> term .)
    SEMICOLON       reduce using rule 89 (expression -> term .)
    RBRACKET        reduce using rule 89 (expression -> term .)
    COMMA           reduce using rule 89 (expression -> term .)
    TO              reduce using rule 89 (expression -> term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 116

    (83) expression -> array_element .

    RPAREN          reduce using rule 83 (expression -> array_element .)
    PLUS            reduce using rule 83 (expression -> array_element .)
    MINUS           reduce using rule 83 (expression -> array_element .)
    EQ              reduce using rule 83 (expression -> array_element .)
    NE              reduce using rule 83 (expression -> array_element .)
    LT              reduce using rule 83 (expression -> array_element .)
    LE              reduce using rule 83 (expression -> array_element .)
    GT              reduce using rule 83 (expression -> array_element .)
    GE              reduce using rule 83 (expression -> array_element .)
    AND             reduce using rule 83 (expression -> array_element .)
    OR              reduce using rule 83 (expression -> array_element .)
    SEMICOLON       reduce using rule 83 (expression -> array_element .)
    RBRACKET        reduce using rule 83 (expression -> array_element .)
    COMMA           reduce using rule 83 (expression -> array_element .)
    TO              reduce using rule 83 (expression -> array_element .)


state 117

    (84) expression -> ID .
    (90) array_element -> ID . LBRACKET expression RBRACKET
    (45) function_call -> ID . LPAREN arg_list RPAREN
    (46) function_call -> ID . LPAREN RPAREN
    (95) factor -> ID . LBRACKET expression RBRACKET
    (96) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for EQ resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for NE resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for LT resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for LE resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for GT resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for GE resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 84 (expression -> ID .)
  ! reduce/reduce conflict for TO resolved using rule 84 (expression -> ID .)
    RPAREN          reduce using rule 84 (expression -> ID .)
    PLUS            reduce using rule 84 (expression -> ID .)
    MINUS           reduce using rule 84 (expression -> ID .)
    EQ              reduce using rule 84 (expression -> ID .)
    NE              reduce using rule 84 (expression -> ID .)
    LT              reduce using rule 84 (expression -> ID .)
    LE              reduce using rule 84 (expression -> ID .)
    GT              reduce using rule 84 (expression -> ID .)
    GE              reduce using rule 84 (expression -> ID .)
    AND             reduce using rule 84 (expression -> ID .)
    OR              reduce using rule 84 (expression -> ID .)
    SEMICOLON       reduce using rule 84 (expression -> ID .)
    RBRACKET        reduce using rule 84 (expression -> ID .)
    COMMA           reduce using rule 84 (expression -> ID .)
    TO              reduce using rule 84 (expression -> ID .)
    LBRACKET        shift and go to state 160
    LPAREN          shift and go to state 95
    TIMES           reduce using rule 96 (factor -> ID .)
    DIVIDE          reduce using rule 96 (factor -> ID .)

  ! RPAREN          [ reduce using rule 96 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 96 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 96 (factor -> ID .) ]
  ! EQ              [ reduce using rule 96 (factor -> ID .) ]
  ! NE              [ reduce using rule 96 (factor -> ID .) ]
  ! LT              [ reduce using rule 96 (factor -> ID .) ]
  ! LE              [ reduce using rule 96 (factor -> ID .) ]
  ! GT              [ reduce using rule 96 (factor -> ID .) ]
  ! GE              [ reduce using rule 96 (factor -> ID .) ]
  ! AND             [ reduce using rule 96 (factor -> ID .) ]
  ! OR              [ reduce using rule 96 (factor -> ID .) ]
  ! SEMICOLON       [ reduce using rule 96 (factor -> ID .) ]
  ! RBRACKET        [ reduce using rule 96 (factor -> ID .) ]
  ! COMMA           [ reduce using rule 96 (factor -> ID .) ]
  ! TO              [ reduce using rule 96 (factor -> ID .) ]


state 118

    (85) expression -> INTEGER .
    (97) factor -> INTEGER .

  ! reduce/reduce conflict for RPAREN resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for PLUS resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for MINUS resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for EQ resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for NE resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for LT resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for LE resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for GT resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for GE resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for AND resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for OR resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 85 (expression -> INTEGER .)
  ! reduce/reduce conflict for TO resolved using rule 85 (expression -> INTEGER .)
    RPAREN          reduce using rule 85 (expression -> INTEGER .)
    PLUS            reduce using rule 85 (expression -> INTEGER .)
    MINUS           reduce using rule 85 (expression -> INTEGER .)
    EQ              reduce using rule 85 (expression -> INTEGER .)
    NE              reduce using rule 85 (expression -> INTEGER .)
    LT              reduce using rule 85 (expression -> INTEGER .)
    LE              reduce using rule 85 (expression -> INTEGER .)
    GT              reduce using rule 85 (expression -> INTEGER .)
    GE              reduce using rule 85 (expression -> INTEGER .)
    AND             reduce using rule 85 (expression -> INTEGER .)
    OR              reduce using rule 85 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 85 (expression -> INTEGER .)
    RBRACKET        reduce using rule 85 (expression -> INTEGER .)
    COMMA           reduce using rule 85 (expression -> INTEGER .)
    TO              reduce using rule 85 (expression -> INTEGER .)
    TIMES           reduce using rule 97 (factor -> INTEGER .)
    DIVIDE          reduce using rule 97 (factor -> INTEGER .)

  ! RPAREN          [ reduce using rule 97 (factor -> INTEGER .) ]
  ! PLUS            [ reduce using rule 97 (factor -> INTEGER .) ]
  ! MINUS           [ reduce using rule 97 (factor -> INTEGER .) ]
  ! EQ              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! NE              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! LT              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! LE              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! GT              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! GE              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! AND             [ reduce using rule 97 (factor -> INTEGER .) ]
  ! OR              [ reduce using rule 97 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 97 (factor -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 97 (factor -> INTEGER .) ]
  ! COMMA           [ reduce using rule 97 (factor -> INTEGER .) ]
  ! TO              [ reduce using rule 97 (factor -> INTEGER .) ]


state 119

    (86) expression -> FLOATING_POINT .
    (99) factor -> FLOATING_POINT .

  ! reduce/reduce conflict for RPAREN resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for PLUS resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for MINUS resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for EQ resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for NE resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for LT resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for LE resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for GT resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for GE resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for AND resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for OR resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for COMMA resolved using rule 86 (expression -> FLOATING_POINT .)
  ! reduce/reduce conflict for TO resolved using rule 86 (expression -> FLOATING_POINT .)
    RPAREN          reduce using rule 86 (expression -> FLOATING_POINT .)
    PLUS            reduce using rule 86 (expression -> FLOATING_POINT .)
    MINUS           reduce using rule 86 (expression -> FLOATING_POINT .)
    EQ              reduce using rule 86 (expression -> FLOATING_POINT .)
    NE              reduce using rule 86 (expression -> FLOATING_POINT .)
    LT              reduce using rule 86 (expression -> FLOATING_POINT .)
    LE              reduce using rule 86 (expression -> FLOATING_POINT .)
    GT              reduce using rule 86 (expression -> FLOATING_POINT .)
    GE              reduce using rule 86 (expression -> FLOATING_POINT .)
    AND             reduce using rule 86 (expression -> FLOATING_POINT .)
    OR              reduce using rule 86 (expression -> FLOATING_POINT .)
    SEMICOLON       reduce using rule 86 (expression -> FLOATING_POINT .)
    RBRACKET        reduce using rule 86 (expression -> FLOATING_POINT .)
    COMMA           reduce using rule 86 (expression -> FLOATING_POINT .)
    TO              reduce using rule 86 (expression -> FLOATING_POINT .)
    TIMES           reduce using rule 99 (factor -> FLOATING_POINT .)
    DIVIDE          reduce using rule 99 (factor -> FLOATING_POINT .)

  ! RPAREN          [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! PLUS            [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! MINUS           [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! EQ              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! NE              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! LT              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! LE              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! GT              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! GE              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! AND             [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! OR              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! SEMICOLON       [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! RBRACKET        [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! COMMA           [ reduce using rule 99 (factor -> FLOATING_POINT .) ]
  ! TO              [ reduce using rule 99 (factor -> FLOATING_POINT .) ]


state 120

    (87) expression -> STRING .

    RPAREN          reduce using rule 87 (expression -> STRING .)
    PLUS            reduce using rule 87 (expression -> STRING .)
    MINUS           reduce using rule 87 (expression -> STRING .)
    EQ              reduce using rule 87 (expression -> STRING .)
    NE              reduce using rule 87 (expression -> STRING .)
    LT              reduce using rule 87 (expression -> STRING .)
    LE              reduce using rule 87 (expression -> STRING .)
    GT              reduce using rule 87 (expression -> STRING .)
    GE              reduce using rule 87 (expression -> STRING .)
    AND             reduce using rule 87 (expression -> STRING .)
    OR              reduce using rule 87 (expression -> STRING .)
    SEMICOLON       reduce using rule 87 (expression -> STRING .)
    RBRACKET        reduce using rule 87 (expression -> STRING .)
    COMMA           reduce using rule 87 (expression -> STRING .)
    TO              reduce using rule 87 (expression -> STRING .)


state 121

    (88) expression -> function_call .
    (98) factor -> function_call .

  ! reduce/reduce conflict for RPAREN resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for PLUS resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for MINUS resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for EQ resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for NE resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for LT resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for LE resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for GT resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for GE resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for AND resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for OR resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for COMMA resolved using rule 88 (expression -> function_call .)
  ! reduce/reduce conflict for TO resolved using rule 88 (expression -> function_call .)
    RPAREN          reduce using rule 88 (expression -> function_call .)
    PLUS            reduce using rule 88 (expression -> function_call .)
    MINUS           reduce using rule 88 (expression -> function_call .)
    EQ              reduce using rule 88 (expression -> function_call .)
    NE              reduce using rule 88 (expression -> function_call .)
    LT              reduce using rule 88 (expression -> function_call .)
    LE              reduce using rule 88 (expression -> function_call .)
    GT              reduce using rule 88 (expression -> function_call .)
    GE              reduce using rule 88 (expression -> function_call .)
    AND             reduce using rule 88 (expression -> function_call .)
    OR              reduce using rule 88 (expression -> function_call .)
    SEMICOLON       reduce using rule 88 (expression -> function_call .)
    RBRACKET        reduce using rule 88 (expression -> function_call .)
    COMMA           reduce using rule 88 (expression -> function_call .)
    TO              reduce using rule 88 (expression -> function_call .)
    TIMES           reduce using rule 98 (factor -> function_call .)
    DIVIDE          reduce using rule 98 (factor -> function_call .)

  ! RPAREN          [ reduce using rule 98 (factor -> function_call .) ]
  ! PLUS            [ reduce using rule 98 (factor -> function_call .) ]
  ! MINUS           [ reduce using rule 98 (factor -> function_call .) ]
  ! EQ              [ reduce using rule 98 (factor -> function_call .) ]
  ! NE              [ reduce using rule 98 (factor -> function_call .) ]
  ! LT              [ reduce using rule 98 (factor -> function_call .) ]
  ! LE              [ reduce using rule 98 (factor -> function_call .) ]
  ! GT              [ reduce using rule 98 (factor -> function_call .) ]
  ! GE              [ reduce using rule 98 (factor -> function_call .) ]
  ! AND             [ reduce using rule 98 (factor -> function_call .) ]
  ! OR              [ reduce using rule 98 (factor -> function_call .) ]
  ! SEMICOLON       [ reduce using rule 98 (factor -> function_call .) ]
  ! RBRACKET        [ reduce using rule 98 (factor -> function_call .) ]
  ! COMMA           [ reduce using rule 98 (factor -> function_call .) ]
  ! TO              [ reduce using rule 98 (factor -> function_call .) ]


state 122

    (93) term -> factor .

    TIMES           reduce using rule 93 (term -> factor .)
    DIVIDE          reduce using rule 93 (term -> factor .)
    RPAREN          reduce using rule 93 (term -> factor .)
    PLUS            reduce using rule 93 (term -> factor .)
    MINUS           reduce using rule 93 (term -> factor .)
    EQ              reduce using rule 93 (term -> factor .)
    NE              reduce using rule 93 (term -> factor .)
    LT              reduce using rule 93 (term -> factor .)
    LE              reduce using rule 93 (term -> factor .)
    GT              reduce using rule 93 (term -> factor .)
    GE              reduce using rule 93 (term -> factor .)
    AND             reduce using rule 93 (term -> factor .)
    OR              reduce using rule 93 (term -> factor .)
    SEMICOLON       reduce using rule 93 (term -> factor .)
    RBRACKET        reduce using rule 93 (term -> factor .)
    COMMA           reduce using rule 93 (term -> factor .)
    TO              reduce using rule 93 (term -> factor .)


state 123

    (43) assignment -> ID ASSIGN expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    SEMICOLON       reduce using rule 43 (assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 124

    (44) assignment -> ID LBRACKET expression . RBRACKET ASSIGN expression
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RBRACKET        shift and go to state 161
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 125

    (45) function_call -> ID LPAREN arg_list . RPAREN
    (47) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 162
    COMMA           shift and go to state 163


state 126

    (46) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    NE              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 46 (function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 46 (function_call -> ID LPAREN RPAREN .)


state 127

    (48) arg_list -> expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          reduce using rule 48 (arg_list -> expression .)
    COMMA           reduce using rule 48 (arg_list -> expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 128

    (49) read_statement -> READ LPAREN id_list . RPAREN
    (10) id_list -> id_list . COMMA ID
    (12) id_list -> id_list . COMMA ID LBRACKET INTEGER RBRACKET

    RPAREN          shift and go to state 164
    COMMA           shift and go to state 28


state 129

    (50) write_statement -> WRITE LPAREN write_list . RPAREN
    (51) write_list -> write_list . COMMA expression

    RPAREN          shift and go to state 165
    COMMA           shift and go to state 166


state 130

    (52) write_list -> expression . COMMA expression
    (53) write_list -> expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 167
    RPAREN          reduce using rule 53 (write_list -> expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157

  ! COMMA           [ reduce using rule 53 (write_list -> expression .) ]


state 131

    (54) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 168
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 132

    (60) while_statement -> WHILE LPAREN expression . RPAREN DO LBRACE statement_list RBRACE
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 169
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 133

    (61) for_statement -> FOR ID LBRACKET . expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 170
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 134

    (63) circle -> CIRCLE LPAREN expression . RPAREN
    (64) circle -> CIRCLE LPAREN expression . COMMA expression RPAREN
    (65) circle -> CIRCLE LPAREN expression . COMMA expression COMMA expression RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 171
    COMMA           shift and go to state 172
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 135

    (66) line -> LINE LPAREN expression . RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 173
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 136

    (67) color -> COLOR LPAREN STRING . RPAREN

    RPAREN          shift and go to state 174


state 137

    (68) point -> POINT LPAREN expression . RPAREN
    (69) point -> POINT LPAREN expression . COMMA STRING RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 175
    COMMA           shift and go to state 176
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 138

    (70) penup -> PENUP LPAREN RPAREN .

    SEMICOLON       reduce using rule 70 (penup -> PENUP LPAREN RPAREN .)


state 139

    (71) pendown -> PENDOWN LPAREN RPAREN .

    SEMICOLON       reduce using rule 71 (pendown -> PENDOWN LPAREN RPAREN .)


state 140

    (72) thickness -> THICKNESS LPAREN expression . RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 177
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 141

    (16) function -> FUNCTION type ID LPAREN param_list RPAREN vars . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 178


state 142

    (17) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 179
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 143

    (20) param_list -> param_list COMMA type . ID

    ID              shift and go to state 180


state 144

    (18) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 181


state 145

    (19) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 182
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 146

    (94) factor -> LPAREN expression . RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 183
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 147

    (62) return_statement -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 184


state 148

    (73) expression -> expression PLUS . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 185
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 149

    (74) expression -> expression MINUS . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 190
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 150

    (75) expression -> expression EQ . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 191
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 151

    (76) expression -> expression NE . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 192
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 152

    (77) expression -> expression LT . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 193
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 153

    (78) expression -> expression LE . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 194
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 154

    (79) expression -> expression GT . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 195
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 155

    (80) expression -> expression GE . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 196
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 156

    (81) expression -> expression AND . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 197
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 157

    (82) expression -> expression OR . term
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    term                           shift and go to state 198
    factor                         shift and go to state 122
    function_call                  shift and go to state 188

state 158

    (91) term -> term TIMES . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    factor                         shift and go to state 199
    function_call                  shift and go to state 188

state 159

    (92) term -> term DIVIDE . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 113
    ID              shift and go to state 186
    INTEGER         shift and go to state 187
    FLOATING_POINT  shift and go to state 189

    factor                         shift and go to state 200
    function_call                  shift and go to state 188

state 160

    (90) array_element -> ID LBRACKET . expression RBRACKET
    (95) factor -> ID LBRACKET . expression RBRACKET
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 201
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 161

    (44) assignment -> ID LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 202


state 162

    (45) function_call -> ID LPAREN arg_list RPAREN .

    SEMICOLON       reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    EQ              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    NE              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    LT              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    LE              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    GT              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    GE              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    RBRACKET        reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)
    TO              reduce using rule 45 (function_call -> ID LPAREN arg_list RPAREN .)


state 163

    (47) arg_list -> arg_list COMMA . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 203
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 164

    (49) read_statement -> READ LPAREN id_list RPAREN .

    SEMICOLON       reduce using rule 49 (read_statement -> READ LPAREN id_list RPAREN .)


state 165

    (50) write_statement -> WRITE LPAREN write_list RPAREN .

    SEMICOLON       reduce using rule 50 (write_statement -> WRITE LPAREN write_list RPAREN .)


state 166

    (51) write_list -> write_list COMMA . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 204
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 167

    (52) write_list -> expression COMMA . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 205
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 168

    (54) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    THEN            shift and go to state 206


state 169

    (60) while_statement -> WHILE LPAREN expression RPAREN . DO LBRACE statement_list RBRACE

    DO              shift and go to state 207


state 170

    (61) for_statement -> FOR ID LBRACKET expression . TO expression RBRACKET DO LBRACE statement_list RBRACE
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    TO              shift and go to state 208
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 171

    (63) circle -> CIRCLE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 63 (circle -> CIRCLE LPAREN expression RPAREN .)


state 172

    (64) circle -> CIRCLE LPAREN expression COMMA . expression RPAREN
    (65) circle -> CIRCLE LPAREN expression COMMA . expression COMMA expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 209
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 173

    (66) line -> LINE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 66 (line -> LINE LPAREN expression RPAREN .)


state 174

    (67) color -> COLOR LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 67 (color -> COLOR LPAREN STRING RPAREN .)


state 175

    (68) point -> POINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 68 (point -> POINT LPAREN expression RPAREN .)


state 176

    (69) point -> POINT LPAREN expression COMMA . STRING RPAREN

    STRING          shift and go to state 210


state 177

    (72) thickness -> THICKNESS LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 72 (thickness -> THICKNESS LPAREN expression RPAREN .)


state 178

    (16) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 211
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 179

    (17) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 212
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 180

    (20) param_list -> param_list COMMA type ID .

    RPAREN          reduce using rule 20 (param_list -> param_list COMMA type ID .)
    COMMA           reduce using rule 20 (param_list -> param_list COMMA type ID .)


state 181

    (18) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 213
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 182

    (19) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 214
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 183

    (94) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 94 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 94 (factor -> LPAREN expression RPAREN .)


state 184

    (62) return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    LINE            reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    POINT           reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    PENUP           reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    PENDOWN         reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    THICKNESS       reduce using rule 62 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 185

    (73) expression -> expression PLUS term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 73 (expression -> expression PLUS term .)
    PLUS            reduce using rule 73 (expression -> expression PLUS term .)
    MINUS           reduce using rule 73 (expression -> expression PLUS term .)
    EQ              reduce using rule 73 (expression -> expression PLUS term .)
    NE              reduce using rule 73 (expression -> expression PLUS term .)
    LT              reduce using rule 73 (expression -> expression PLUS term .)
    LE              reduce using rule 73 (expression -> expression PLUS term .)
    GT              reduce using rule 73 (expression -> expression PLUS term .)
    GE              reduce using rule 73 (expression -> expression PLUS term .)
    AND             reduce using rule 73 (expression -> expression PLUS term .)
    OR              reduce using rule 73 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 73 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 73 (expression -> expression PLUS term .)
    COMMA           reduce using rule 73 (expression -> expression PLUS term .)
    TO              reduce using rule 73 (expression -> expression PLUS term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 186

    (95) factor -> ID . LBRACKET expression RBRACKET
    (96) factor -> ID .
    (45) function_call -> ID . LPAREN arg_list RPAREN
    (46) function_call -> ID . LPAREN RPAREN

    LBRACKET        shift and go to state 215
    TIMES           reduce using rule 96 (factor -> ID .)
    DIVIDE          reduce using rule 96 (factor -> ID .)
    RPAREN          reduce using rule 96 (factor -> ID .)
    PLUS            reduce using rule 96 (factor -> ID .)
    MINUS           reduce using rule 96 (factor -> ID .)
    EQ              reduce using rule 96 (factor -> ID .)
    NE              reduce using rule 96 (factor -> ID .)
    LT              reduce using rule 96 (factor -> ID .)
    LE              reduce using rule 96 (factor -> ID .)
    GT              reduce using rule 96 (factor -> ID .)
    GE              reduce using rule 96 (factor -> ID .)
    AND             reduce using rule 96 (factor -> ID .)
    OR              reduce using rule 96 (factor -> ID .)
    SEMICOLON       reduce using rule 96 (factor -> ID .)
    RBRACKET        reduce using rule 96 (factor -> ID .)
    COMMA           reduce using rule 96 (factor -> ID .)
    TO              reduce using rule 96 (factor -> ID .)
    LPAREN          shift and go to state 95


state 187

    (97) factor -> INTEGER .

    TIMES           reduce using rule 97 (factor -> INTEGER .)
    DIVIDE          reduce using rule 97 (factor -> INTEGER .)
    RPAREN          reduce using rule 97 (factor -> INTEGER .)
    PLUS            reduce using rule 97 (factor -> INTEGER .)
    MINUS           reduce using rule 97 (factor -> INTEGER .)
    EQ              reduce using rule 97 (factor -> INTEGER .)
    NE              reduce using rule 97 (factor -> INTEGER .)
    LT              reduce using rule 97 (factor -> INTEGER .)
    LE              reduce using rule 97 (factor -> INTEGER .)
    GT              reduce using rule 97 (factor -> INTEGER .)
    GE              reduce using rule 97 (factor -> INTEGER .)
    AND             reduce using rule 97 (factor -> INTEGER .)
    OR              reduce using rule 97 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 97 (factor -> INTEGER .)
    RBRACKET        reduce using rule 97 (factor -> INTEGER .)
    COMMA           reduce using rule 97 (factor -> INTEGER .)
    TO              reduce using rule 97 (factor -> INTEGER .)


state 188

    (98) factor -> function_call .

    TIMES           reduce using rule 98 (factor -> function_call .)
    DIVIDE          reduce using rule 98 (factor -> function_call .)
    RPAREN          reduce using rule 98 (factor -> function_call .)
    PLUS            reduce using rule 98 (factor -> function_call .)
    MINUS           reduce using rule 98 (factor -> function_call .)
    EQ              reduce using rule 98 (factor -> function_call .)
    NE              reduce using rule 98 (factor -> function_call .)
    LT              reduce using rule 98 (factor -> function_call .)
    LE              reduce using rule 98 (factor -> function_call .)
    GT              reduce using rule 98 (factor -> function_call .)
    GE              reduce using rule 98 (factor -> function_call .)
    AND             reduce using rule 98 (factor -> function_call .)
    OR              reduce using rule 98 (factor -> function_call .)
    SEMICOLON       reduce using rule 98 (factor -> function_call .)
    RBRACKET        reduce using rule 98 (factor -> function_call .)
    COMMA           reduce using rule 98 (factor -> function_call .)
    TO              reduce using rule 98 (factor -> function_call .)


state 189

    (99) factor -> FLOATING_POINT .

    TIMES           reduce using rule 99 (factor -> FLOATING_POINT .)
    DIVIDE          reduce using rule 99 (factor -> FLOATING_POINT .)
    RPAREN          reduce using rule 99 (factor -> FLOATING_POINT .)
    PLUS            reduce using rule 99 (factor -> FLOATING_POINT .)
    MINUS           reduce using rule 99 (factor -> FLOATING_POINT .)
    EQ              reduce using rule 99 (factor -> FLOATING_POINT .)
    NE              reduce using rule 99 (factor -> FLOATING_POINT .)
    LT              reduce using rule 99 (factor -> FLOATING_POINT .)
    LE              reduce using rule 99 (factor -> FLOATING_POINT .)
    GT              reduce using rule 99 (factor -> FLOATING_POINT .)
    GE              reduce using rule 99 (factor -> FLOATING_POINT .)
    AND             reduce using rule 99 (factor -> FLOATING_POINT .)
    OR              reduce using rule 99 (factor -> FLOATING_POINT .)
    SEMICOLON       reduce using rule 99 (factor -> FLOATING_POINT .)
    RBRACKET        reduce using rule 99 (factor -> FLOATING_POINT .)
    COMMA           reduce using rule 99 (factor -> FLOATING_POINT .)
    TO              reduce using rule 99 (factor -> FLOATING_POINT .)


state 190

    (74) expression -> expression MINUS term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 74 (expression -> expression MINUS term .)
    PLUS            reduce using rule 74 (expression -> expression MINUS term .)
    MINUS           reduce using rule 74 (expression -> expression MINUS term .)
    EQ              reduce using rule 74 (expression -> expression MINUS term .)
    NE              reduce using rule 74 (expression -> expression MINUS term .)
    LT              reduce using rule 74 (expression -> expression MINUS term .)
    LE              reduce using rule 74 (expression -> expression MINUS term .)
    GT              reduce using rule 74 (expression -> expression MINUS term .)
    GE              reduce using rule 74 (expression -> expression MINUS term .)
    AND             reduce using rule 74 (expression -> expression MINUS term .)
    OR              reduce using rule 74 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 74 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 74 (expression -> expression MINUS term .)
    COMMA           reduce using rule 74 (expression -> expression MINUS term .)
    TO              reduce using rule 74 (expression -> expression MINUS term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 191

    (75) expression -> expression EQ term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 75 (expression -> expression EQ term .)
    PLUS            reduce using rule 75 (expression -> expression EQ term .)
    MINUS           reduce using rule 75 (expression -> expression EQ term .)
    EQ              reduce using rule 75 (expression -> expression EQ term .)
    NE              reduce using rule 75 (expression -> expression EQ term .)
    LT              reduce using rule 75 (expression -> expression EQ term .)
    LE              reduce using rule 75 (expression -> expression EQ term .)
    GT              reduce using rule 75 (expression -> expression EQ term .)
    GE              reduce using rule 75 (expression -> expression EQ term .)
    AND             reduce using rule 75 (expression -> expression EQ term .)
    OR              reduce using rule 75 (expression -> expression EQ term .)
    SEMICOLON       reduce using rule 75 (expression -> expression EQ term .)
    RBRACKET        reduce using rule 75 (expression -> expression EQ term .)
    COMMA           reduce using rule 75 (expression -> expression EQ term .)
    TO              reduce using rule 75 (expression -> expression EQ term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 192

    (76) expression -> expression NE term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 76 (expression -> expression NE term .)
    PLUS            reduce using rule 76 (expression -> expression NE term .)
    MINUS           reduce using rule 76 (expression -> expression NE term .)
    EQ              reduce using rule 76 (expression -> expression NE term .)
    NE              reduce using rule 76 (expression -> expression NE term .)
    LT              reduce using rule 76 (expression -> expression NE term .)
    LE              reduce using rule 76 (expression -> expression NE term .)
    GT              reduce using rule 76 (expression -> expression NE term .)
    GE              reduce using rule 76 (expression -> expression NE term .)
    AND             reduce using rule 76 (expression -> expression NE term .)
    OR              reduce using rule 76 (expression -> expression NE term .)
    SEMICOLON       reduce using rule 76 (expression -> expression NE term .)
    RBRACKET        reduce using rule 76 (expression -> expression NE term .)
    COMMA           reduce using rule 76 (expression -> expression NE term .)
    TO              reduce using rule 76 (expression -> expression NE term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 193

    (77) expression -> expression LT term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 77 (expression -> expression LT term .)
    PLUS            reduce using rule 77 (expression -> expression LT term .)
    MINUS           reduce using rule 77 (expression -> expression LT term .)
    EQ              reduce using rule 77 (expression -> expression LT term .)
    NE              reduce using rule 77 (expression -> expression LT term .)
    LT              reduce using rule 77 (expression -> expression LT term .)
    LE              reduce using rule 77 (expression -> expression LT term .)
    GT              reduce using rule 77 (expression -> expression LT term .)
    GE              reduce using rule 77 (expression -> expression LT term .)
    AND             reduce using rule 77 (expression -> expression LT term .)
    OR              reduce using rule 77 (expression -> expression LT term .)
    SEMICOLON       reduce using rule 77 (expression -> expression LT term .)
    RBRACKET        reduce using rule 77 (expression -> expression LT term .)
    COMMA           reduce using rule 77 (expression -> expression LT term .)
    TO              reduce using rule 77 (expression -> expression LT term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 194

    (78) expression -> expression LE term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 78 (expression -> expression LE term .)
    PLUS            reduce using rule 78 (expression -> expression LE term .)
    MINUS           reduce using rule 78 (expression -> expression LE term .)
    EQ              reduce using rule 78 (expression -> expression LE term .)
    NE              reduce using rule 78 (expression -> expression LE term .)
    LT              reduce using rule 78 (expression -> expression LE term .)
    LE              reduce using rule 78 (expression -> expression LE term .)
    GT              reduce using rule 78 (expression -> expression LE term .)
    GE              reduce using rule 78 (expression -> expression LE term .)
    AND             reduce using rule 78 (expression -> expression LE term .)
    OR              reduce using rule 78 (expression -> expression LE term .)
    SEMICOLON       reduce using rule 78 (expression -> expression LE term .)
    RBRACKET        reduce using rule 78 (expression -> expression LE term .)
    COMMA           reduce using rule 78 (expression -> expression LE term .)
    TO              reduce using rule 78 (expression -> expression LE term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 195

    (79) expression -> expression GT term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 79 (expression -> expression GT term .)
    PLUS            reduce using rule 79 (expression -> expression GT term .)
    MINUS           reduce using rule 79 (expression -> expression GT term .)
    EQ              reduce using rule 79 (expression -> expression GT term .)
    NE              reduce using rule 79 (expression -> expression GT term .)
    LT              reduce using rule 79 (expression -> expression GT term .)
    LE              reduce using rule 79 (expression -> expression GT term .)
    GT              reduce using rule 79 (expression -> expression GT term .)
    GE              reduce using rule 79 (expression -> expression GT term .)
    AND             reduce using rule 79 (expression -> expression GT term .)
    OR              reduce using rule 79 (expression -> expression GT term .)
    SEMICOLON       reduce using rule 79 (expression -> expression GT term .)
    RBRACKET        reduce using rule 79 (expression -> expression GT term .)
    COMMA           reduce using rule 79 (expression -> expression GT term .)
    TO              reduce using rule 79 (expression -> expression GT term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 196

    (80) expression -> expression GE term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 80 (expression -> expression GE term .)
    PLUS            reduce using rule 80 (expression -> expression GE term .)
    MINUS           reduce using rule 80 (expression -> expression GE term .)
    EQ              reduce using rule 80 (expression -> expression GE term .)
    NE              reduce using rule 80 (expression -> expression GE term .)
    LT              reduce using rule 80 (expression -> expression GE term .)
    LE              reduce using rule 80 (expression -> expression GE term .)
    GT              reduce using rule 80 (expression -> expression GE term .)
    GE              reduce using rule 80 (expression -> expression GE term .)
    AND             reduce using rule 80 (expression -> expression GE term .)
    OR              reduce using rule 80 (expression -> expression GE term .)
    SEMICOLON       reduce using rule 80 (expression -> expression GE term .)
    RBRACKET        reduce using rule 80 (expression -> expression GE term .)
    COMMA           reduce using rule 80 (expression -> expression GE term .)
    TO              reduce using rule 80 (expression -> expression GE term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 197

    (81) expression -> expression AND term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 81 (expression -> expression AND term .)
    PLUS            reduce using rule 81 (expression -> expression AND term .)
    MINUS           reduce using rule 81 (expression -> expression AND term .)
    EQ              reduce using rule 81 (expression -> expression AND term .)
    NE              reduce using rule 81 (expression -> expression AND term .)
    LT              reduce using rule 81 (expression -> expression AND term .)
    LE              reduce using rule 81 (expression -> expression AND term .)
    GT              reduce using rule 81 (expression -> expression AND term .)
    GE              reduce using rule 81 (expression -> expression AND term .)
    AND             reduce using rule 81 (expression -> expression AND term .)
    OR              reduce using rule 81 (expression -> expression AND term .)
    SEMICOLON       reduce using rule 81 (expression -> expression AND term .)
    RBRACKET        reduce using rule 81 (expression -> expression AND term .)
    COMMA           reduce using rule 81 (expression -> expression AND term .)
    TO              reduce using rule 81 (expression -> expression AND term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 198

    (82) expression -> expression OR term .
    (91) term -> term . TIMES factor
    (92) term -> term . DIVIDE factor

    RPAREN          reduce using rule 82 (expression -> expression OR term .)
    PLUS            reduce using rule 82 (expression -> expression OR term .)
    MINUS           reduce using rule 82 (expression -> expression OR term .)
    EQ              reduce using rule 82 (expression -> expression OR term .)
    NE              reduce using rule 82 (expression -> expression OR term .)
    LT              reduce using rule 82 (expression -> expression OR term .)
    LE              reduce using rule 82 (expression -> expression OR term .)
    GT              reduce using rule 82 (expression -> expression OR term .)
    GE              reduce using rule 82 (expression -> expression OR term .)
    AND             reduce using rule 82 (expression -> expression OR term .)
    OR              reduce using rule 82 (expression -> expression OR term .)
    SEMICOLON       reduce using rule 82 (expression -> expression OR term .)
    RBRACKET        reduce using rule 82 (expression -> expression OR term .)
    COMMA           reduce using rule 82 (expression -> expression OR term .)
    TO              reduce using rule 82 (expression -> expression OR term .)
    TIMES           shift and go to state 158
    DIVIDE          shift and go to state 159


state 199

    (91) term -> term TIMES factor .

    TIMES           reduce using rule 91 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 91 (term -> term TIMES factor .)
    RPAREN          reduce using rule 91 (term -> term TIMES factor .)
    PLUS            reduce using rule 91 (term -> term TIMES factor .)
    MINUS           reduce using rule 91 (term -> term TIMES factor .)
    EQ              reduce using rule 91 (term -> term TIMES factor .)
    NE              reduce using rule 91 (term -> term TIMES factor .)
    LT              reduce using rule 91 (term -> term TIMES factor .)
    LE              reduce using rule 91 (term -> term TIMES factor .)
    GT              reduce using rule 91 (term -> term TIMES factor .)
    GE              reduce using rule 91 (term -> term TIMES factor .)
    AND             reduce using rule 91 (term -> term TIMES factor .)
    OR              reduce using rule 91 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 91 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 91 (term -> term TIMES factor .)
    COMMA           reduce using rule 91 (term -> term TIMES factor .)
    TO              reduce using rule 91 (term -> term TIMES factor .)


state 200

    (92) term -> term DIVIDE factor .

    TIMES           reduce using rule 92 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 92 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 92 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 92 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 92 (term -> term DIVIDE factor .)
    EQ              reduce using rule 92 (term -> term DIVIDE factor .)
    NE              reduce using rule 92 (term -> term DIVIDE factor .)
    LT              reduce using rule 92 (term -> term DIVIDE factor .)
    LE              reduce using rule 92 (term -> term DIVIDE factor .)
    GT              reduce using rule 92 (term -> term DIVIDE factor .)
    GE              reduce using rule 92 (term -> term DIVIDE factor .)
    AND             reduce using rule 92 (term -> term DIVIDE factor .)
    OR              reduce using rule 92 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 92 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 92 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 92 (term -> term DIVIDE factor .)
    TO              reduce using rule 92 (term -> term DIVIDE factor .)


state 201

    (90) array_element -> ID LBRACKET expression . RBRACKET
    (95) factor -> ID LBRACKET expression . RBRACKET
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RBRACKET        shift and go to state 216
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 202

    (44) assignment -> ID LBRACKET expression RBRACKET ASSIGN . expression
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 217
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 203

    (47) arg_list -> arg_list COMMA expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          reduce using rule 47 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 47 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 204

    (51) write_list -> write_list COMMA expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          reduce using rule 51 (write_list -> write_list COMMA expression .)
    COMMA           reduce using rule 51 (write_list -> write_list COMMA expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 205

    (52) write_list -> expression COMMA expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          reduce using rule 52 (write_list -> expression COMMA expression .)
    COMMA           reduce using rule 52 (write_list -> expression COMMA expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 206

    (54) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    LBRACE          shift and go to state 218


state 207

    (60) while_statement -> WHILE LPAREN expression RPAREN DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 219


state 208

    (61) for_statement -> FOR ID LBRACKET expression TO . expression RBRACKET DO LBRACE statement_list RBRACE
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 220
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 209

    (64) circle -> CIRCLE LPAREN expression COMMA expression . RPAREN
    (65) circle -> CIRCLE LPAREN expression COMMA expression . COMMA expression RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 222
    COMMA           shift and go to state 221
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 210

    (69) point -> POINT LPAREN expression COMMA STRING . RPAREN

    RPAREN          shift and go to state 223


state 211

    (16) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 224
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 212

    (17) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    MAIN            reduce using rule 17 (function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 17 (function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)


state 213

    (18) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 225
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 214

    (19) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    MAIN            reduce using rule 19 (function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 19 (function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)


state 215

    (95) factor -> ID LBRACKET . expression RBRACKET
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 226
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 216

    (90) array_element -> ID LBRACKET expression RBRACKET .
    (95) factor -> ID LBRACKET expression RBRACKET .

  ! reduce/reduce conflict for RPAREN resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for PLUS resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for MINUS resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for EQ resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for NE resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LT resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LE resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for GT resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for GE resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for AND resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for OR resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for COMMA resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for TO resolved using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 90 (array_element -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)

  ! RPAREN          [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! PLUS            [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! MINUS           [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! EQ              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! NE              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! LT              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! LE              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! GT              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! GE              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! AND             [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! OR              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! SEMICOLON       [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! RBRACKET        [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! COMMA           [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]
  ! TO              [ reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .) ]


state 217

    (44) assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    SEMICOLON       reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 218

    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 227
    return_statement               shift and go to state 228
    statement                      shift and go to state 42
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 219

    (60) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 229
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 220

    (61) for_statement -> FOR ID LBRACKET expression TO expression . RBRACKET DO LBRACE statement_list RBRACE
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RBRACKET        shift and go to state 230
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 221

    (65) circle -> CIRCLE LPAREN expression COMMA expression COMMA . expression RPAREN
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . expression EQ term
    (76) expression -> . expression NE term
    (77) expression -> . expression LT term
    (78) expression -> . expression LE term
    (79) expression -> . expression GT term
    (80) expression -> . expression GE term
    (81) expression -> . expression AND term
    (82) expression -> . expression OR term
    (83) expression -> . array_element
    (84) expression -> . ID
    (85) expression -> . INTEGER
    (86) expression -> . FLOATING_POINT
    (87) expression -> . STRING
    (88) expression -> . function_call
    (89) expression -> . term
    (90) array_element -> . ID LBRACKET expression RBRACKET
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (91) term -> . term TIMES factor
    (92) term -> . term DIVIDE factor
    (93) term -> . factor
    (94) factor -> . LPAREN expression RPAREN
    (95) factor -> . ID LBRACKET expression RBRACKET
    (96) factor -> . ID
    (97) factor -> . INTEGER
    (98) factor -> . function_call
    (99) factor -> . FLOATING_POINT

    ID              shift and go to state 117
    INTEGER         shift and go to state 118
    FLOATING_POINT  shift and go to state 119
    STRING          shift and go to state 120
    LPAREN          shift and go to state 113

    expression                     shift and go to state 231
    term                           shift and go to state 115
    array_element                  shift and go to state 116
    function_call                  shift and go to state 121
    factor                         shift and go to state 122

state 222

    (64) circle -> CIRCLE LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 64 (circle -> CIRCLE LPAREN expression COMMA expression RPAREN .)


state 223

    (69) point -> POINT LPAREN expression COMMA STRING RPAREN .

    SEMICOLON       reduce using rule 69 (point -> POINT LPAREN expression COMMA STRING RPAREN .)


state 224

    (16) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .

    MAIN            reduce using rule 16 (function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 16 (function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)


state 225

    (18) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .

    MAIN            reduce using rule 18 (function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 18 (function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)


state 226

    (95) factor -> ID LBRACKET expression . RBRACKET
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RBRACKET        shift and go to state 232
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 227

    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE ELSE LBRACE return_statement RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 233
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    return_statement               shift and go to state 80
    statement                      shift and go to state 79
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 228

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE ELSE LBRACE statement_list RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE ELSE LBRACE return_statement RBRACE
    (27) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 234
    RETURN          reduce using rule 27 (statement_list -> return_statement .)
    ID              reduce using rule 27 (statement_list -> return_statement .)
    READ            reduce using rule 27 (statement_list -> return_statement .)
    WRITE           reduce using rule 27 (statement_list -> return_statement .)
    IF              reduce using rule 27 (statement_list -> return_statement .)
    WHILE           reduce using rule 27 (statement_list -> return_statement .)
    FOR             reduce using rule 27 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 27 (statement_list -> return_statement .)
    LINE            reduce using rule 27 (statement_list -> return_statement .)
    COLOR           reduce using rule 27 (statement_list -> return_statement .)
    POINT           reduce using rule 27 (statement_list -> return_statement .)
    PENUP           reduce using rule 27 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 27 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 27 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 27 (statement_list -> return_statement .) ]


state 229

    (60) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 235
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 230

    (61) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET . DO LBRACE statement_list RBRACE

    DO              shift and go to state 236


state 231

    (65) circle -> CIRCLE LPAREN expression COMMA expression COMMA expression . RPAREN
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (75) expression -> expression . EQ term
    (76) expression -> expression . NE term
    (77) expression -> expression . LT term
    (78) expression -> expression . LE term
    (79) expression -> expression . GT term
    (80) expression -> expression . GE term
    (81) expression -> expression . AND term
    (82) expression -> expression . OR term

    RPAREN          shift and go to state 237
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149
    EQ              shift and go to state 150
    NE              shift and go to state 151
    LT              shift and go to state 152
    LE              shift and go to state 153
    GT              shift and go to state 154
    GE              shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157


state 232

    (95) factor -> ID LBRACKET expression RBRACKET .

    TIMES           reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 95 (factor -> ID LBRACKET expression RBRACKET .)


state 233

    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE . ELSE LBRACE return_statement RBRACE

    RBRACE          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ID              reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    READ            reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    IF              reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    LINE            reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    POINT           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 238


state 234

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE . ELSE LBRACE statement_list RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE . ELSE LBRACE return_statement RBRACE

    RBRACE          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    ID              reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    READ            reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    IF              reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    FOR             reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    LINE            reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    POINT           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    ELSE            shift and go to state 239


state 235

    (60) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    LINE            reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    POINT           reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 60 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)


state 236

    (61) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 240


state 237

    (65) circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 65 (circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN .)


state 238

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 241


state 239

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE . LBRACE statement_list RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 242


state 240

    (61) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE . statement_list RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 243
    statement                      shift and go to state 42
    return_statement               shift and go to state 43
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 241

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE . return_statement RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    statement_list                 shift and go to state 244
    return_statement               shift and go to state 245
    statement                      shift and go to state 42
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 242

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE . statement_list RBRACE
    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE . return_statement RBRACE
    (24) statement_list -> . statement_list statement
    (25) statement_list -> . statement_list return_statement
    (26) statement_list -> . statement
    (27) statement_list -> . return_statement
    (28) statement_list -> . empty
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (100) empty -> .
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 59
    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 100 (empty -> .) ]
  ! LINE            [ reduce using rule 100 (empty -> .) ]
  ! COLOR           [ reduce using rule 100 (empty -> .) ]
  ! POINT           [ reduce using rule 100 (empty -> .) ]
  ! PENUP           [ reduce using rule 100 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 100 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 100 (empty -> .) ]

    return_statement               shift and go to state 246
    statement_list                 shift and go to state 247
    statement                      shift and go to state 42
    empty                          shift and go to state 44
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 243

    (61) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 248
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 244

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 249
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    statement                      shift and go to state 79
    return_statement               shift and go to state 80
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 245

    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement . RBRACE
    (27) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 250
    RETURN          reduce using rule 27 (statement_list -> return_statement .)
    ID              reduce using rule 27 (statement_list -> return_statement .)
    READ            reduce using rule 27 (statement_list -> return_statement .)
    WRITE           reduce using rule 27 (statement_list -> return_statement .)
    IF              reduce using rule 27 (statement_list -> return_statement .)
    WHILE           reduce using rule 27 (statement_list -> return_statement .)
    FOR             reduce using rule 27 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 27 (statement_list -> return_statement .)
    LINE            reduce using rule 27 (statement_list -> return_statement .)
    COLOR           reduce using rule 27 (statement_list -> return_statement .)
    POINT           reduce using rule 27 (statement_list -> return_statement .)
    PENUP           reduce using rule 27 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 27 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 27 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 27 (statement_list -> return_statement .) ]


state 246

    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement . RBRACE
    (27) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 251
    RETURN          reduce using rule 27 (statement_list -> return_statement .)
    ID              reduce using rule 27 (statement_list -> return_statement .)
    READ            reduce using rule 27 (statement_list -> return_statement .)
    WRITE           reduce using rule 27 (statement_list -> return_statement .)
    IF              reduce using rule 27 (statement_list -> return_statement .)
    WHILE           reduce using rule 27 (statement_list -> return_statement .)
    FOR             reduce using rule 27 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 27 (statement_list -> return_statement .)
    LINE            reduce using rule 27 (statement_list -> return_statement .)
    COLOR           reduce using rule 27 (statement_list -> return_statement .)
    POINT           reduce using rule 27 (statement_list -> return_statement .)
    PENUP           reduce using rule 27 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 27 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 27 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 27 (statement_list -> return_statement .) ]


state 247

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list . RBRACE
    (24) statement_list -> statement_list . statement
    (25) statement_list -> statement_list . return_statement
    (29) statement -> . assignment SEMICOLON
    (30) statement -> . function_call SEMICOLON
    (31) statement -> . read_statement SEMICOLON
    (32) statement -> . write_statement SEMICOLON
    (33) statement -> . if_statement
    (34) statement -> . while_statement
    (35) statement -> . for_statement
    (36) statement -> . circle SEMICOLON
    (37) statement -> . line SEMICOLON
    (38) statement -> . color SEMICOLON
    (39) statement -> . point SEMICOLON
    (40) statement -> . penup SEMICOLON
    (41) statement -> . pendown SEMICOLON
    (42) statement -> . thickness SEMICOLON
    (62) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (43) assignment -> . ID ASSIGN expression
    (44) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (45) function_call -> . ID LPAREN arg_list RPAREN
    (46) function_call -> . ID LPAREN RPAREN
    (49) read_statement -> . READ LPAREN id_list RPAREN
    (50) write_statement -> . WRITE LPAREN write_list RPAREN
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (59) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (60) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (61) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (63) circle -> . CIRCLE LPAREN expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (65) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (66) line -> . LINE LPAREN expression RPAREN
    (67) color -> . COLOR LPAREN STRING RPAREN
    (68) point -> . POINT LPAREN expression RPAREN
    (69) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (70) penup -> . PENUP LPAREN RPAREN
    (71) pendown -> . PENDOWN LPAREN RPAREN
    (72) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 252
    RETURN          shift and go to state 59
    ID              shift and go to state 60
    READ            shift and go to state 61
    WRITE           shift and go to state 62
    IF              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65
    CIRCLE          shift and go to state 66
    LINE            shift and go to state 67
    COLOR           shift and go to state 68
    POINT           shift and go to state 69
    PENUP           shift and go to state 70
    PENDOWN         shift and go to state 71
    THICKNESS       shift and go to state 72

    return_statement               shift and go to state 80
    statement                      shift and go to state 79
    assignment                     shift and go to state 45
    function_call                  shift and go to state 46
    read_statement                 shift and go to state 47
    write_statement                shift and go to state 48
    if_statement                   shift and go to state 49
    while_statement                shift and go to state 50
    for_statement                  shift and go to state 51
    circle                         shift and go to state 52
    line                           shift and go to state 53
    color                          shift and go to state 54
    point                          shift and go to state 55
    penup                          shift and go to state 56
    pendown                        shift and go to state 57
    thickness                      shift and go to state 58

state 248

    (61) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    LINE            reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    POINT           reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 61 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)


state 249

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    READ            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LINE            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    POINT           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 250

    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .

    RBRACE          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    ID              reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    READ            reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    IF              reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    FOR             reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    LINE            reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    POINT           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)


state 251

    (59) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .

    RBRACE          reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    ID              reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    READ            reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    IF              reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    FOR             reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    LINE            reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    POINT           reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 59 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)


state 252

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    READ            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    LINE            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    POINT           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 8 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for READ in state 36 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 36 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 36 resolved as shift
WARNING: shift/reduce conflict for FOR in state 36 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 36 resolved as shift
WARNING: shift/reduce conflict for LINE in state 36 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 36 resolved as shift
WARNING: shift/reduce conflict for POINT in state 36 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 36 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 36 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 36 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 130 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for READ in state 142 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 142 resolved as shift
WARNING: shift/reduce conflict for LINE in state 142 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 142 resolved as shift
WARNING: shift/reduce conflict for POINT in state 142 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 142 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 142 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for READ in state 145 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 145 resolved as shift
WARNING: shift/reduce conflict for FOR in state 145 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 145 resolved as shift
WARNING: shift/reduce conflict for LINE in state 145 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 145 resolved as shift
WARNING: shift/reduce conflict for POINT in state 145 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 145 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 145 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 145 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for READ in state 178 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 178 resolved as shift
WARNING: shift/reduce conflict for FOR in state 178 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 178 resolved as shift
WARNING: shift/reduce conflict for LINE in state 178 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 178 resolved as shift
WARNING: shift/reduce conflict for POINT in state 178 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 178 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 178 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 178 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for READ in state 181 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 181 resolved as shift
WARNING: shift/reduce conflict for FOR in state 181 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 181 resolved as shift
WARNING: shift/reduce conflict for LINE in state 181 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 181 resolved as shift
WARNING: shift/reduce conflict for POINT in state 181 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 181 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 181 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 181 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for READ in state 218 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 218 resolved as shift
WARNING: shift/reduce conflict for IF in state 218 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 218 resolved as shift
WARNING: shift/reduce conflict for FOR in state 218 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 218 resolved as shift
WARNING: shift/reduce conflict for LINE in state 218 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 218 resolved as shift
WARNING: shift/reduce conflict for POINT in state 218 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 218 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 218 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 218 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for READ in state 219 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 219 resolved as shift
WARNING: shift/reduce conflict for IF in state 219 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 219 resolved as shift
WARNING: shift/reduce conflict for FOR in state 219 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 219 resolved as shift
WARNING: shift/reduce conflict for LINE in state 219 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 219 resolved as shift
WARNING: shift/reduce conflict for POINT in state 219 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 219 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 219 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 219 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 228 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for READ in state 240 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 240 resolved as shift
WARNING: shift/reduce conflict for FOR in state 240 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 240 resolved as shift
WARNING: shift/reduce conflict for LINE in state 240 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 240 resolved as shift
WARNING: shift/reduce conflict for POINT in state 240 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 240 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 240 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 240 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 241 resolved as shift
WARNING: shift/reduce conflict for ID in state 241 resolved as shift
WARNING: shift/reduce conflict for READ in state 241 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 241 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 241 resolved as shift
WARNING: shift/reduce conflict for FOR in state 241 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 241 resolved as shift
WARNING: shift/reduce conflict for LINE in state 241 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 241 resolved as shift
WARNING: shift/reduce conflict for POINT in state 241 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 241 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 241 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 241 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 242 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for READ in state 242 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 242 resolved as shift
WARNING: shift/reduce conflict for IF in state 242 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 242 resolved as shift
WARNING: shift/reduce conflict for FOR in state 242 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 242 resolved as shift
WARNING: shift/reduce conflict for LINE in state 242 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 242 resolved as shift
WARNING: shift/reduce conflict for POINT in state 242 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 242 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 242 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 242 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 245 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 246 resolved as shift
WARNING: reduce/reduce conflict in state 117 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (expression -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 118
WARNING: reduce/reduce conflict in state 119 resolved using rule (expression -> FLOATING_POINT)
WARNING: rejected rule (factor -> FLOATING_POINT) in state 119
WARNING: reduce/reduce conflict in state 121 resolved using rule (expression -> function_call)
WARNING: rejected rule (factor -> function_call) in state 121
WARNING: reduce/reduce conflict in state 216 resolved using rule (array_element -> ID LBRACKET expression RBRACKET)
WARNING: rejected rule (factor -> ID LBRACKET expression RBRACKET) in state 216
