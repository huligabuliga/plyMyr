Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars function_list main_function
Rule 2     program -> PROGRAM ID SEMICOLON vars empty main_function
Rule 3     vars -> VARS var_list
Rule 4     var_list -> var_list type id_list SEMICOLON
Rule 5     var_list -> type id_list SEMICOLON
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> BOOL
Rule 9     type -> CHAR
Rule 10    id_list -> id_list COMMA ID
Rule 11    id_list -> ID
Rule 12    function_list -> function_list function
Rule 13    function_list -> empty
Rule 14    function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
Rule 15    function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 16    function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
Rule 17    function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 18    param_list -> param_list COMMA type ID
Rule 19    param_list -> type ID
Rule 20    param_list -> empty
Rule 21    main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE
Rule 22    statement_list -> statement_list statement
Rule 23    statement_list -> statement_list return_statement
Rule 24    statement_list -> statement
Rule 25    statement_list -> return_statement
Rule 26    statement_list -> empty
Rule 27    statement -> assignment SEMICOLON
Rule 28    statement -> function_call SEMICOLON
Rule 29    statement -> read_statement SEMICOLON
Rule 30    statement -> write_statement SEMICOLON
Rule 31    statement -> if_statement
Rule 32    statement -> while_statement
Rule 33    statement -> for_statement
Rule 34    statement -> circle SEMICOLON
Rule 35    statement -> line SEMICOLON
Rule 36    statement -> color SEMICOLON
Rule 37    statement -> point SEMICOLON
Rule 38    statement -> penup SEMICOLON
Rule 39    statement -> pendown SEMICOLON
Rule 40    statement -> thickness SEMICOLON
Rule 41    assignment -> ID ASSIGN expression
Rule 42    assignment -> ID LBRACKET expression RBRACKET ASSIGN expression
Rule 43    function_call -> ID LPAREN arg_list RPAREN
Rule 44    function_call -> ID LPAREN RPAREN
Rule 45    arg_list -> arg_list COMMA expression
Rule 46    arg_list -> expression
Rule 47    read_statement -> READ LPAREN id_list RPAREN
Rule 48    write_statement -> WRITE LPAREN write_list RPAREN
Rule 49    write_list -> write_list COMMA expression
Rule 50    write_list -> STRING
Rule 51    write_list -> function_call
Rule 52    write_list -> ID COMMA expression
Rule 53    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
Rule 54    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
Rule 55    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 56    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
Rule 57    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
Rule 58    if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
Rule 59    while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
Rule 60    for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
Rule 61    return_statement -> RETURN LPAREN expression RPAREN SEMICOLON
Rule 62    circle -> CIRCLE LPAREN expression RPAREN
Rule 63    circle -> CIRCLE LPAREN expression COMMA expression RPAREN
Rule 64    circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
Rule 65    line -> LINE LPAREN expression RPAREN
Rule 66    color -> COLOR LPAREN STRING RPAREN
Rule 67    point -> POINT LPAREN expression RPAREN
Rule 68    point -> POINT LPAREN expression COMMA STRING RPAREN
Rule 69    penup -> PENUP LPAREN RPAREN
Rule 70    pendown -> PENDOWN LPAREN RPAREN
Rule 71    thickness -> THICKNESS LPAREN expression RPAREN
Rule 72    expression -> expression PLUS term
Rule 73    expression -> expression MINUS term
Rule 74    expression -> expression EQ term
Rule 75    expression -> expression NE term
Rule 76    expression -> expression LT term
Rule 77    expression -> expression LE term
Rule 78    expression -> expression GT term
Rule 79    expression -> expression GE term
Rule 80    expression -> expression AND term
Rule 81    expression -> expression OR term
Rule 82    expression -> term
Rule 83    term -> term TIMES factor
Rule 84    term -> term DIVIDE factor
Rule 85    term -> factor
Rule 86    factor -> LPAREN expression RPAREN
Rule 87    factor -> ID
Rule 88    factor -> ID LBRACKET expression RBRACKET
Rule 89    factor -> INTEGER
Rule 90    factor -> function_call
Rule 91    factor -> FLOATING_POINT
Rule 92    empty -> <empty>

Terminals, with rules where they appear

AND                  : 80
ASSIGN               : 41 42
BOOL                 : 8
CHAR                 : 9
CIRCLE               : 62 63 64
COLOR                : 66
COMMA                : 10 18 45 49 52 63 64 64 68
DIVIDE               : 84
DO                   : 59 60
ELSE                 : 55 56 57 58
EQ                   : 74
FLOAT                : 7
FLOATING_POINT       : 91
FOR                  : 60
FUNCTION             : 14 15 16 17
GE                   : 79
GT                   : 78
ID                   : 1 2 10 11 14 15 16 17 18 19 41 42 43 44 52 60 87 88
IF                   : 53 54 55 56 57 58
INT                  : 6
INTEGER              : 89
LBRACE               : 14 15 16 17 21 53 54 55 55 56 56 57 57 58 58 59 60
LBRACKET             : 42 60 88
LE                   : 77
LINE                 : 65
LPAREN               : 14 15 16 17 21 43 44 47 48 53 54 55 56 57 58 59 61 62 63 64 65 66 67 68 69 70 71 86
LT                   : 76
MAIN                 : 21
MINUS                : 73
NE                   : 75
NOT                  : 
OR                   : 81
PENDOWN              : 70
PENUP                : 69
PLUS                 : 72
POINT                : 67 68
PROGRAM              : 1 2
RBRACE               : 14 15 16 17 21 53 54 55 55 56 56 57 57 58 58 59 60
RBRACKET             : 42 60 88
READ                 : 47
RETURN               : 61
RPAREN               : 14 15 16 17 21 43 44 47 48 53 54 55 56 57 58 59 61 62 63 64 65 66 67 68 69 70 71 86
SEMICOLON            : 1 2 4 5 27 28 29 30 34 35 36 37 38 39 40 61
STRING               : 50 66 68
THEN                 : 53 54 55 56 57 58
THICKNESS            : 71
TIMES                : 83
TO                   : 60
VARS                 : 3
VOID                 : 16 17
WHILE                : 59
WRITE                : 48
error                : 

Nonterminals, with rules where they appear

arg_list             : 43 45
assignment           : 27
circle               : 34
color                : 36
empty                : 2 13 20 26
expression           : 41 42 42 45 46 49 52 53 54 55 56 57 58 59 60 60 61 62 63 63 64 64 64 65 67 68 71 72 73 74 75 76 77 78 79 80 81 86 88
factor               : 83 84 85
for_statement        : 33
function             : 12
function_call        : 28 51 90
function_list        : 1 12
id_list              : 4 5 10 47
if_statement         : 31
line                 : 35
main_function        : 1 2
param_list           : 14 15 16 17 18
pendown              : 39
penup                : 38
point                : 37
program              : 0
read_statement       : 29
return_statement     : 23 25 54 56 57 58 58
statement            : 22 24
statement_list       : 14 15 16 17 21 22 23 53 55 55 56 57 59 60
term                 : 72 73 74 75 76 77 78 79 80 81 82 83 84
thickness            : 40
type                 : 4 5 14 15 18 19
var_list             : 3 4
vars                 : 1 2 14 16
while_statement      : 32
write_list           : 48 49
write_statement      : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars function_list main_function
    (2) program -> . PROGRAM ID SEMICOLON vars empty main_function

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars function_list main_function
    (2) program -> PROGRAM . ID SEMICOLON vars empty main_function

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars function_list main_function
    (2) program -> PROGRAM ID . SEMICOLON vars empty main_function

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars function_list main_function
    (2) program -> PROGRAM ID SEMICOLON . vars empty main_function
    (3) vars -> . VARS var_list

    VARS            shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . function_list main_function
    (2) program -> PROGRAM ID SEMICOLON vars . empty main_function
    (12) function_list -> . function_list function
    (13) function_list -> . empty
    (92) empty -> .

    MAIN            reduce using rule 92 (empty -> .)
    FUNCTION        reduce using rule 92 (empty -> .)

    function_list                  shift and go to state 7
    empty                          shift and go to state 8

state 6

    (3) vars -> VARS . var_list
    (4) var_list -> . var_list type id_list SEMICOLON
    (5) var_list -> . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    var_list                       shift and go to state 9
    type                           shift and go to state 10

state 7

    (1) program -> PROGRAM ID SEMICOLON vars function_list . main_function
    (12) function_list -> function_list . function
    (21) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE
    (14) function -> . FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (15) function -> . FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (16) function -> . FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> . FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    MAIN            shift and go to state 17
    FUNCTION        shift and go to state 18

    main_function                  shift and go to state 15
    function                       shift and go to state 16

state 8

    (2) program -> PROGRAM ID SEMICOLON vars empty . main_function
    (13) function_list -> empty .
    (21) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE

  ! shift/reduce conflict for MAIN resolved as shift
    FUNCTION        reduce using rule 13 (function_list -> empty .)
    MAIN            shift and go to state 17

  ! MAIN            [ reduce using rule 13 (function_list -> empty .) ]

    main_function                  shift and go to state 19

state 9

    (3) vars -> VARS var_list .
    (4) var_list -> var_list . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    MAIN            reduce using rule 3 (vars -> VARS var_list .)
    FUNCTION        reduce using rule 3 (vars -> VARS var_list .)
    LBRACE          reduce using rule 3 (vars -> VARS var_list .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 20

state 10

    (5) var_list -> type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 21

state 11

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 12

    (7) type -> FLOAT .

    ID              reduce using rule 7 (type -> FLOAT .)


state 13

    (8) type -> BOOL .

    ID              reduce using rule 8 (type -> BOOL .)


state 14

    (9) type -> CHAR .

    ID              reduce using rule 9 (type -> CHAR .)


state 15

    (1) program -> PROGRAM ID SEMICOLON vars function_list main_function .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars function_list main_function .)


state 16

    (12) function_list -> function_list function .

    MAIN            reduce using rule 12 (function_list -> function_list function .)
    FUNCTION        reduce using rule 12 (function_list -> function_list function .)


state 17

    (21) main_function -> MAIN . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 23


state 18

    (14) function -> FUNCTION . type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION . type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (16) function -> FUNCTION . VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION . VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 24

state 19

    (2) program -> PROGRAM ID SEMICOLON vars empty main_function .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars empty main_function .)


state 20

    (4) var_list -> var_list type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 26

state 21

    (5) var_list -> type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID

    SEMICOLON       shift and go to state 27
    COMMA           shift and go to state 28


state 22

    (11) id_list -> ID .

    SEMICOLON       reduce using rule 11 (id_list -> ID .)
    COMMA           reduce using rule 11 (id_list -> ID .)
    RPAREN          reduce using rule 11 (id_list -> ID .)


state 23

    (21) main_function -> MAIN LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 29


state 24

    (14) function -> FUNCTION type . ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION type . ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 30


state 25

    (16) function -> FUNCTION VOID . ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION VOID . ID LPAREN param_list RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 31


state 26

    (4) var_list -> var_list type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID

    SEMICOLON       shift and go to state 32
    COMMA           shift and go to state 28


state 27

    (5) var_list -> type id_list SEMICOLON .

    INT             reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FLOAT           reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    BOOL            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    CHAR            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    MAIN            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FUNCTION        reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    LBRACE          reduce using rule 5 (var_list -> type id_list SEMICOLON .)


state 28

    (10) id_list -> id_list COMMA . ID

    ID              shift and go to state 33


state 29

    (21) main_function -> MAIN LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 34


state 30

    (14) function -> FUNCTION type ID . LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION type ID . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 35


state 31

    (16) function -> FUNCTION VOID ID . LPAREN param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION VOID ID . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 36


state 32

    (4) var_list -> var_list type id_list SEMICOLON .

    INT             reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FLOAT           reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    BOOL            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    CHAR            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    MAIN            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FUNCTION        reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    LBRACE          reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)


state 33

    (10) id_list -> id_list COMMA ID .

    SEMICOLON       reduce using rule 10 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 10 (id_list -> id_list COMMA ID .)
    RPAREN          reduce using rule 10 (id_list -> id_list COMMA ID .)


state 34

    (21) main_function -> MAIN LPAREN RPAREN LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 37
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 35

    (14) function -> FUNCTION type ID LPAREN . param_list RPAREN vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION type ID LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (18) param_list -> . param_list COMMA type ID
    (19) param_list -> . type ID
    (20) param_list -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR
    (92) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14
    RPAREN          reduce using rule 92 (empty -> .)
    COMMA           reduce using rule 92 (empty -> .)

    type                           shift and go to state 69
    param_list                     shift and go to state 70
    empty                          shift and go to state 71

state 36

    (16) function -> FUNCTION VOID ID LPAREN . param_list RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION VOID ID LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (18) param_list -> . param_list COMMA type ID
    (19) param_list -> . type ID
    (20) param_list -> . empty
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR
    (92) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14
    RPAREN          reduce using rule 92 (empty -> .)
    COMMA           reduce using rule 92 (empty -> .)

    param_list                     shift and go to state 72
    type                           shift and go to state 69
    empty                          shift and go to state 71

state 37

    (21) main_function -> MAIN LPAREN RPAREN LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 73
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 38

    (24) statement_list -> statement .

    RBRACE          reduce using rule 24 (statement_list -> statement .)
    RETURN          reduce using rule 24 (statement_list -> statement .)
    ID              reduce using rule 24 (statement_list -> statement .)
    READ            reduce using rule 24 (statement_list -> statement .)
    WRITE           reduce using rule 24 (statement_list -> statement .)
    IF              reduce using rule 24 (statement_list -> statement .)
    WHILE           reduce using rule 24 (statement_list -> statement .)
    FOR             reduce using rule 24 (statement_list -> statement .)
    CIRCLE          reduce using rule 24 (statement_list -> statement .)
    LINE            reduce using rule 24 (statement_list -> statement .)
    COLOR           reduce using rule 24 (statement_list -> statement .)
    POINT           reduce using rule 24 (statement_list -> statement .)
    PENUP           reduce using rule 24 (statement_list -> statement .)
    PENDOWN         reduce using rule 24 (statement_list -> statement .)
    THICKNESS       reduce using rule 24 (statement_list -> statement .)


state 39

    (25) statement_list -> return_statement .

    RBRACE          reduce using rule 25 (statement_list -> return_statement .)
    RETURN          reduce using rule 25 (statement_list -> return_statement .)
    ID              reduce using rule 25 (statement_list -> return_statement .)
    READ            reduce using rule 25 (statement_list -> return_statement .)
    WRITE           reduce using rule 25 (statement_list -> return_statement .)
    IF              reduce using rule 25 (statement_list -> return_statement .)
    WHILE           reduce using rule 25 (statement_list -> return_statement .)
    FOR             reduce using rule 25 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 25 (statement_list -> return_statement .)
    LINE            reduce using rule 25 (statement_list -> return_statement .)
    COLOR           reduce using rule 25 (statement_list -> return_statement .)
    POINT           reduce using rule 25 (statement_list -> return_statement .)
    PENUP           reduce using rule 25 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 25 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 25 (statement_list -> return_statement .)


state 40

    (26) statement_list -> empty .

    RBRACE          reduce using rule 26 (statement_list -> empty .)
    RETURN          reduce using rule 26 (statement_list -> empty .)
    ID              reduce using rule 26 (statement_list -> empty .)
    READ            reduce using rule 26 (statement_list -> empty .)
    WRITE           reduce using rule 26 (statement_list -> empty .)
    IF              reduce using rule 26 (statement_list -> empty .)
    WHILE           reduce using rule 26 (statement_list -> empty .)
    FOR             reduce using rule 26 (statement_list -> empty .)
    CIRCLE          reduce using rule 26 (statement_list -> empty .)
    LINE            reduce using rule 26 (statement_list -> empty .)
    COLOR           reduce using rule 26 (statement_list -> empty .)
    POINT           reduce using rule 26 (statement_list -> empty .)
    PENUP           reduce using rule 26 (statement_list -> empty .)
    PENDOWN         reduce using rule 26 (statement_list -> empty .)
    THICKNESS       reduce using rule 26 (statement_list -> empty .)


state 41

    (27) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 76


state 42

    (28) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 77


state 43

    (29) statement -> read_statement . SEMICOLON

    SEMICOLON       shift and go to state 78


state 44

    (30) statement -> write_statement . SEMICOLON

    SEMICOLON       shift and go to state 79


state 45

    (31) statement -> if_statement .

    RBRACE          reduce using rule 31 (statement -> if_statement .)
    RETURN          reduce using rule 31 (statement -> if_statement .)
    ID              reduce using rule 31 (statement -> if_statement .)
    READ            reduce using rule 31 (statement -> if_statement .)
    WRITE           reduce using rule 31 (statement -> if_statement .)
    IF              reduce using rule 31 (statement -> if_statement .)
    WHILE           reduce using rule 31 (statement -> if_statement .)
    FOR             reduce using rule 31 (statement -> if_statement .)
    CIRCLE          reduce using rule 31 (statement -> if_statement .)
    LINE            reduce using rule 31 (statement -> if_statement .)
    COLOR           reduce using rule 31 (statement -> if_statement .)
    POINT           reduce using rule 31 (statement -> if_statement .)
    PENUP           reduce using rule 31 (statement -> if_statement .)
    PENDOWN         reduce using rule 31 (statement -> if_statement .)
    THICKNESS       reduce using rule 31 (statement -> if_statement .)


state 46

    (32) statement -> while_statement .

    RBRACE          reduce using rule 32 (statement -> while_statement .)
    RETURN          reduce using rule 32 (statement -> while_statement .)
    ID              reduce using rule 32 (statement -> while_statement .)
    READ            reduce using rule 32 (statement -> while_statement .)
    WRITE           reduce using rule 32 (statement -> while_statement .)
    IF              reduce using rule 32 (statement -> while_statement .)
    WHILE           reduce using rule 32 (statement -> while_statement .)
    FOR             reduce using rule 32 (statement -> while_statement .)
    CIRCLE          reduce using rule 32 (statement -> while_statement .)
    LINE            reduce using rule 32 (statement -> while_statement .)
    COLOR           reduce using rule 32 (statement -> while_statement .)
    POINT           reduce using rule 32 (statement -> while_statement .)
    PENUP           reduce using rule 32 (statement -> while_statement .)
    PENDOWN         reduce using rule 32 (statement -> while_statement .)
    THICKNESS       reduce using rule 32 (statement -> while_statement .)


state 47

    (33) statement -> for_statement .

    RBRACE          reduce using rule 33 (statement -> for_statement .)
    RETURN          reduce using rule 33 (statement -> for_statement .)
    ID              reduce using rule 33 (statement -> for_statement .)
    READ            reduce using rule 33 (statement -> for_statement .)
    WRITE           reduce using rule 33 (statement -> for_statement .)
    IF              reduce using rule 33 (statement -> for_statement .)
    WHILE           reduce using rule 33 (statement -> for_statement .)
    FOR             reduce using rule 33 (statement -> for_statement .)
    CIRCLE          reduce using rule 33 (statement -> for_statement .)
    LINE            reduce using rule 33 (statement -> for_statement .)
    COLOR           reduce using rule 33 (statement -> for_statement .)
    POINT           reduce using rule 33 (statement -> for_statement .)
    PENUP           reduce using rule 33 (statement -> for_statement .)
    PENDOWN         reduce using rule 33 (statement -> for_statement .)
    THICKNESS       reduce using rule 33 (statement -> for_statement .)


state 48

    (34) statement -> circle . SEMICOLON

    SEMICOLON       shift and go to state 80


state 49

    (35) statement -> line . SEMICOLON

    SEMICOLON       shift and go to state 81


state 50

    (36) statement -> color . SEMICOLON

    SEMICOLON       shift and go to state 82


state 51

    (37) statement -> point . SEMICOLON

    SEMICOLON       shift and go to state 83


state 52

    (38) statement -> penup . SEMICOLON

    SEMICOLON       shift and go to state 84


state 53

    (39) statement -> pendown . SEMICOLON

    SEMICOLON       shift and go to state 85


state 54

    (40) statement -> thickness . SEMICOLON

    SEMICOLON       shift and go to state 86


state 55

    (61) return_statement -> RETURN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 56

    (41) assignment -> ID . ASSIGN expression
    (42) assignment -> ID . LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> ID . LPAREN arg_list RPAREN
    (44) function_call -> ID . LPAREN RPAREN

    ASSIGN          shift and go to state 88
    LBRACKET        shift and go to state 89
    LPAREN          shift and go to state 90


state 57

    (47) read_statement -> READ . LPAREN id_list RPAREN

    LPAREN          shift and go to state 91


state 58

    (48) write_statement -> WRITE . LPAREN write_list RPAREN

    LPAREN          shift and go to state 92


state 59

    (53) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    LPAREN          shift and go to state 93


state 60

    (59) while_statement -> WHILE . LPAREN expression RPAREN DO LBRACE statement_list RBRACE

    LPAREN          shift and go to state 94


state 61

    (60) for_statement -> FOR . ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    ID              shift and go to state 95


state 62

    (62) circle -> CIRCLE . LPAREN expression RPAREN
    (63) circle -> CIRCLE . LPAREN expression COMMA expression RPAREN
    (64) circle -> CIRCLE . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 96


state 63

    (65) line -> LINE . LPAREN expression RPAREN

    LPAREN          shift and go to state 97


state 64

    (66) color -> COLOR . LPAREN STRING RPAREN

    LPAREN          shift and go to state 98


state 65

    (67) point -> POINT . LPAREN expression RPAREN
    (68) point -> POINT . LPAREN expression COMMA STRING RPAREN

    LPAREN          shift and go to state 99


state 66

    (69) penup -> PENUP . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 67

    (70) pendown -> PENDOWN . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 68

    (71) thickness -> THICKNESS . LPAREN expression RPAREN

    LPAREN          shift and go to state 102


state 69

    (19) param_list -> type . ID

    ID              shift and go to state 103


state 70

    (14) function -> FUNCTION type ID LPAREN param_list . RPAREN vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION type ID LPAREN param_list . RPAREN LBRACE statement_list RBRACE
    (18) param_list -> param_list . COMMA type ID

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 71

    (20) param_list -> empty .

    RPAREN          reduce using rule 20 (param_list -> empty .)
    COMMA           reduce using rule 20 (param_list -> empty .)


state 72

    (16) function -> FUNCTION VOID ID LPAREN param_list . RPAREN vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION VOID ID LPAREN param_list . RPAREN LBRACE statement_list RBRACE
    (18) param_list -> param_list . COMMA type ID

    RPAREN          shift and go to state 106
    COMMA           shift and go to state 105


state 73

    (21) main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .

    $end            reduce using rule 21 (main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .)


state 74

    (22) statement_list -> statement_list statement .

    RBRACE          reduce using rule 22 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 22 (statement_list -> statement_list statement .)
    ID              reduce using rule 22 (statement_list -> statement_list statement .)
    READ            reduce using rule 22 (statement_list -> statement_list statement .)
    WRITE           reduce using rule 22 (statement_list -> statement_list statement .)
    IF              reduce using rule 22 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 22 (statement_list -> statement_list statement .)
    FOR             reduce using rule 22 (statement_list -> statement_list statement .)
    CIRCLE          reduce using rule 22 (statement_list -> statement_list statement .)
    LINE            reduce using rule 22 (statement_list -> statement_list statement .)
    COLOR           reduce using rule 22 (statement_list -> statement_list statement .)
    POINT           reduce using rule 22 (statement_list -> statement_list statement .)
    PENUP           reduce using rule 22 (statement_list -> statement_list statement .)
    PENDOWN         reduce using rule 22 (statement_list -> statement_list statement .)
    THICKNESS       reduce using rule 22 (statement_list -> statement_list statement .)


state 75

    (23) statement_list -> statement_list return_statement .

    RBRACE          reduce using rule 23 (statement_list -> statement_list return_statement .)
    RETURN          reduce using rule 23 (statement_list -> statement_list return_statement .)
    ID              reduce using rule 23 (statement_list -> statement_list return_statement .)
    READ            reduce using rule 23 (statement_list -> statement_list return_statement .)
    WRITE           reduce using rule 23 (statement_list -> statement_list return_statement .)
    IF              reduce using rule 23 (statement_list -> statement_list return_statement .)
    WHILE           reduce using rule 23 (statement_list -> statement_list return_statement .)
    FOR             reduce using rule 23 (statement_list -> statement_list return_statement .)
    CIRCLE          reduce using rule 23 (statement_list -> statement_list return_statement .)
    LINE            reduce using rule 23 (statement_list -> statement_list return_statement .)
    COLOR           reduce using rule 23 (statement_list -> statement_list return_statement .)
    POINT           reduce using rule 23 (statement_list -> statement_list return_statement .)
    PENUP           reduce using rule 23 (statement_list -> statement_list return_statement .)
    PENDOWN         reduce using rule 23 (statement_list -> statement_list return_statement .)
    THICKNESS       reduce using rule 23 (statement_list -> statement_list return_statement .)


state 76

    (27) statement -> assignment SEMICOLON .

    RBRACE          reduce using rule 27 (statement -> assignment SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> assignment SEMICOLON .)
    ID              reduce using rule 27 (statement -> assignment SEMICOLON .)
    READ            reduce using rule 27 (statement -> assignment SEMICOLON .)
    WRITE           reduce using rule 27 (statement -> assignment SEMICOLON .)
    IF              reduce using rule 27 (statement -> assignment SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> assignment SEMICOLON .)
    FOR             reduce using rule 27 (statement -> assignment SEMICOLON .)
    CIRCLE          reduce using rule 27 (statement -> assignment SEMICOLON .)
    LINE            reduce using rule 27 (statement -> assignment SEMICOLON .)
    COLOR           reduce using rule 27 (statement -> assignment SEMICOLON .)
    POINT           reduce using rule 27 (statement -> assignment SEMICOLON .)
    PENUP           reduce using rule 27 (statement -> assignment SEMICOLON .)
    PENDOWN         reduce using rule 27 (statement -> assignment SEMICOLON .)
    THICKNESS       reduce using rule 27 (statement -> assignment SEMICOLON .)


state 77

    (28) statement -> function_call SEMICOLON .

    RBRACE          reduce using rule 28 (statement -> function_call SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> function_call SEMICOLON .)
    ID              reduce using rule 28 (statement -> function_call SEMICOLON .)
    READ            reduce using rule 28 (statement -> function_call SEMICOLON .)
    WRITE           reduce using rule 28 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 28 (statement -> function_call SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> function_call SEMICOLON .)
    FOR             reduce using rule 28 (statement -> function_call SEMICOLON .)
    CIRCLE          reduce using rule 28 (statement -> function_call SEMICOLON .)
    LINE            reduce using rule 28 (statement -> function_call SEMICOLON .)
    COLOR           reduce using rule 28 (statement -> function_call SEMICOLON .)
    POINT           reduce using rule 28 (statement -> function_call SEMICOLON .)
    PENUP           reduce using rule 28 (statement -> function_call SEMICOLON .)
    PENDOWN         reduce using rule 28 (statement -> function_call SEMICOLON .)
    THICKNESS       reduce using rule 28 (statement -> function_call SEMICOLON .)


state 78

    (29) statement -> read_statement SEMICOLON .

    RBRACE          reduce using rule 29 (statement -> read_statement SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> read_statement SEMICOLON .)
    ID              reduce using rule 29 (statement -> read_statement SEMICOLON .)
    READ            reduce using rule 29 (statement -> read_statement SEMICOLON .)
    WRITE           reduce using rule 29 (statement -> read_statement SEMICOLON .)
    IF              reduce using rule 29 (statement -> read_statement SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> read_statement SEMICOLON .)
    FOR             reduce using rule 29 (statement -> read_statement SEMICOLON .)
    CIRCLE          reduce using rule 29 (statement -> read_statement SEMICOLON .)
    LINE            reduce using rule 29 (statement -> read_statement SEMICOLON .)
    COLOR           reduce using rule 29 (statement -> read_statement SEMICOLON .)
    POINT           reduce using rule 29 (statement -> read_statement SEMICOLON .)
    PENUP           reduce using rule 29 (statement -> read_statement SEMICOLON .)
    PENDOWN         reduce using rule 29 (statement -> read_statement SEMICOLON .)
    THICKNESS       reduce using rule 29 (statement -> read_statement SEMICOLON .)


state 79

    (30) statement -> write_statement SEMICOLON .

    RBRACE          reduce using rule 30 (statement -> write_statement SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> write_statement SEMICOLON .)
    ID              reduce using rule 30 (statement -> write_statement SEMICOLON .)
    READ            reduce using rule 30 (statement -> write_statement SEMICOLON .)
    WRITE           reduce using rule 30 (statement -> write_statement SEMICOLON .)
    IF              reduce using rule 30 (statement -> write_statement SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> write_statement SEMICOLON .)
    FOR             reduce using rule 30 (statement -> write_statement SEMICOLON .)
    CIRCLE          reduce using rule 30 (statement -> write_statement SEMICOLON .)
    LINE            reduce using rule 30 (statement -> write_statement SEMICOLON .)
    COLOR           reduce using rule 30 (statement -> write_statement SEMICOLON .)
    POINT           reduce using rule 30 (statement -> write_statement SEMICOLON .)
    PENUP           reduce using rule 30 (statement -> write_statement SEMICOLON .)
    PENDOWN         reduce using rule 30 (statement -> write_statement SEMICOLON .)
    THICKNESS       reduce using rule 30 (statement -> write_statement SEMICOLON .)


state 80

    (34) statement -> circle SEMICOLON .

    RBRACE          reduce using rule 34 (statement -> circle SEMICOLON .)
    RETURN          reduce using rule 34 (statement -> circle SEMICOLON .)
    ID              reduce using rule 34 (statement -> circle SEMICOLON .)
    READ            reduce using rule 34 (statement -> circle SEMICOLON .)
    WRITE           reduce using rule 34 (statement -> circle SEMICOLON .)
    IF              reduce using rule 34 (statement -> circle SEMICOLON .)
    WHILE           reduce using rule 34 (statement -> circle SEMICOLON .)
    FOR             reduce using rule 34 (statement -> circle SEMICOLON .)
    CIRCLE          reduce using rule 34 (statement -> circle SEMICOLON .)
    LINE            reduce using rule 34 (statement -> circle SEMICOLON .)
    COLOR           reduce using rule 34 (statement -> circle SEMICOLON .)
    POINT           reduce using rule 34 (statement -> circle SEMICOLON .)
    PENUP           reduce using rule 34 (statement -> circle SEMICOLON .)
    PENDOWN         reduce using rule 34 (statement -> circle SEMICOLON .)
    THICKNESS       reduce using rule 34 (statement -> circle SEMICOLON .)


state 81

    (35) statement -> line SEMICOLON .

    RBRACE          reduce using rule 35 (statement -> line SEMICOLON .)
    RETURN          reduce using rule 35 (statement -> line SEMICOLON .)
    ID              reduce using rule 35 (statement -> line SEMICOLON .)
    READ            reduce using rule 35 (statement -> line SEMICOLON .)
    WRITE           reduce using rule 35 (statement -> line SEMICOLON .)
    IF              reduce using rule 35 (statement -> line SEMICOLON .)
    WHILE           reduce using rule 35 (statement -> line SEMICOLON .)
    FOR             reduce using rule 35 (statement -> line SEMICOLON .)
    CIRCLE          reduce using rule 35 (statement -> line SEMICOLON .)
    LINE            reduce using rule 35 (statement -> line SEMICOLON .)
    COLOR           reduce using rule 35 (statement -> line SEMICOLON .)
    POINT           reduce using rule 35 (statement -> line SEMICOLON .)
    PENUP           reduce using rule 35 (statement -> line SEMICOLON .)
    PENDOWN         reduce using rule 35 (statement -> line SEMICOLON .)
    THICKNESS       reduce using rule 35 (statement -> line SEMICOLON .)


state 82

    (36) statement -> color SEMICOLON .

    RBRACE          reduce using rule 36 (statement -> color SEMICOLON .)
    RETURN          reduce using rule 36 (statement -> color SEMICOLON .)
    ID              reduce using rule 36 (statement -> color SEMICOLON .)
    READ            reduce using rule 36 (statement -> color SEMICOLON .)
    WRITE           reduce using rule 36 (statement -> color SEMICOLON .)
    IF              reduce using rule 36 (statement -> color SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> color SEMICOLON .)
    FOR             reduce using rule 36 (statement -> color SEMICOLON .)
    CIRCLE          reduce using rule 36 (statement -> color SEMICOLON .)
    LINE            reduce using rule 36 (statement -> color SEMICOLON .)
    COLOR           reduce using rule 36 (statement -> color SEMICOLON .)
    POINT           reduce using rule 36 (statement -> color SEMICOLON .)
    PENUP           reduce using rule 36 (statement -> color SEMICOLON .)
    PENDOWN         reduce using rule 36 (statement -> color SEMICOLON .)
    THICKNESS       reduce using rule 36 (statement -> color SEMICOLON .)


state 83

    (37) statement -> point SEMICOLON .

    RBRACE          reduce using rule 37 (statement -> point SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> point SEMICOLON .)
    ID              reduce using rule 37 (statement -> point SEMICOLON .)
    READ            reduce using rule 37 (statement -> point SEMICOLON .)
    WRITE           reduce using rule 37 (statement -> point SEMICOLON .)
    IF              reduce using rule 37 (statement -> point SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> point SEMICOLON .)
    FOR             reduce using rule 37 (statement -> point SEMICOLON .)
    CIRCLE          reduce using rule 37 (statement -> point SEMICOLON .)
    LINE            reduce using rule 37 (statement -> point SEMICOLON .)
    COLOR           reduce using rule 37 (statement -> point SEMICOLON .)
    POINT           reduce using rule 37 (statement -> point SEMICOLON .)
    PENUP           reduce using rule 37 (statement -> point SEMICOLON .)
    PENDOWN         reduce using rule 37 (statement -> point SEMICOLON .)
    THICKNESS       reduce using rule 37 (statement -> point SEMICOLON .)


state 84

    (38) statement -> penup SEMICOLON .

    RBRACE          reduce using rule 38 (statement -> penup SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> penup SEMICOLON .)
    ID              reduce using rule 38 (statement -> penup SEMICOLON .)
    READ            reduce using rule 38 (statement -> penup SEMICOLON .)
    WRITE           reduce using rule 38 (statement -> penup SEMICOLON .)
    IF              reduce using rule 38 (statement -> penup SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> penup SEMICOLON .)
    FOR             reduce using rule 38 (statement -> penup SEMICOLON .)
    CIRCLE          reduce using rule 38 (statement -> penup SEMICOLON .)
    LINE            reduce using rule 38 (statement -> penup SEMICOLON .)
    COLOR           reduce using rule 38 (statement -> penup SEMICOLON .)
    POINT           reduce using rule 38 (statement -> penup SEMICOLON .)
    PENUP           reduce using rule 38 (statement -> penup SEMICOLON .)
    PENDOWN         reduce using rule 38 (statement -> penup SEMICOLON .)
    THICKNESS       reduce using rule 38 (statement -> penup SEMICOLON .)


state 85

    (39) statement -> pendown SEMICOLON .

    RBRACE          reduce using rule 39 (statement -> pendown SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> pendown SEMICOLON .)
    ID              reduce using rule 39 (statement -> pendown SEMICOLON .)
    READ            reduce using rule 39 (statement -> pendown SEMICOLON .)
    WRITE           reduce using rule 39 (statement -> pendown SEMICOLON .)
    IF              reduce using rule 39 (statement -> pendown SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> pendown SEMICOLON .)
    FOR             reduce using rule 39 (statement -> pendown SEMICOLON .)
    CIRCLE          reduce using rule 39 (statement -> pendown SEMICOLON .)
    LINE            reduce using rule 39 (statement -> pendown SEMICOLON .)
    COLOR           reduce using rule 39 (statement -> pendown SEMICOLON .)
    POINT           reduce using rule 39 (statement -> pendown SEMICOLON .)
    PENUP           reduce using rule 39 (statement -> pendown SEMICOLON .)
    PENDOWN         reduce using rule 39 (statement -> pendown SEMICOLON .)
    THICKNESS       reduce using rule 39 (statement -> pendown SEMICOLON .)


state 86

    (40) statement -> thickness SEMICOLON .

    RBRACE          reduce using rule 40 (statement -> thickness SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> thickness SEMICOLON .)
    ID              reduce using rule 40 (statement -> thickness SEMICOLON .)
    READ            reduce using rule 40 (statement -> thickness SEMICOLON .)
    WRITE           reduce using rule 40 (statement -> thickness SEMICOLON .)
    IF              reduce using rule 40 (statement -> thickness SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> thickness SEMICOLON .)
    FOR             reduce using rule 40 (statement -> thickness SEMICOLON .)
    CIRCLE          reduce using rule 40 (statement -> thickness SEMICOLON .)
    LINE            reduce using rule 40 (statement -> thickness SEMICOLON .)
    COLOR           reduce using rule 40 (statement -> thickness SEMICOLON .)
    POINT           reduce using rule 40 (statement -> thickness SEMICOLON .)
    PENUP           reduce using rule 40 (statement -> thickness SEMICOLON .)
    PENDOWN         reduce using rule 40 (statement -> thickness SEMICOLON .)
    THICKNESS       reduce using rule 40 (statement -> thickness SEMICOLON .)


state 87

    (61) return_statement -> RETURN LPAREN . expression RPAREN SEMICOLON
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 108
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 88

    (41) assignment -> ID ASSIGN . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 115
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 89

    (42) assignment -> ID LBRACKET . expression RBRACKET ASSIGN expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 116
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 90

    (43) function_call -> ID LPAREN . arg_list RPAREN
    (44) function_call -> ID LPAREN . RPAREN
    (45) arg_list -> . arg_list COMMA expression
    (46) arg_list -> . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 118
    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    arg_list                       shift and go to state 117
    expression                     shift and go to state 119
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 91

    (47) read_statement -> READ LPAREN . id_list RPAREN
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 120

state 92

    (48) write_statement -> WRITE LPAREN . write_list RPAREN
    (49) write_list -> . write_list COMMA expression
    (50) write_list -> . STRING
    (51) write_list -> . function_call
    (52) write_list -> . ID COMMA expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    STRING          shift and go to state 122
    ID              shift and go to state 124

    write_list                     shift and go to state 121
    function_call                  shift and go to state 123

state 93

    (53) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 125
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 94

    (59) while_statement -> WHILE LPAREN . expression RPAREN DO LBRACE statement_list RBRACE
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 126
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 95

    (60) for_statement -> FOR ID . LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    LBRACKET        shift and go to state 127


state 96

    (62) circle -> CIRCLE LPAREN . expression RPAREN
    (63) circle -> CIRCLE LPAREN . expression COMMA expression RPAREN
    (64) circle -> CIRCLE LPAREN . expression COMMA expression COMMA expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 128
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 97

    (65) line -> LINE LPAREN . expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 129
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 98

    (66) color -> COLOR LPAREN . STRING RPAREN

    STRING          shift and go to state 130


state 99

    (67) point -> POINT LPAREN . expression RPAREN
    (68) point -> POINT LPAREN . expression COMMA STRING RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 131
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 100

    (69) penup -> PENUP LPAREN . RPAREN

    RPAREN          shift and go to state 132


state 101

    (70) pendown -> PENDOWN LPAREN . RPAREN

    RPAREN          shift and go to state 133


state 102

    (71) thickness -> THICKNESS LPAREN . expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 134
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 103

    (19) param_list -> type ID .

    RPAREN          reduce using rule 19 (param_list -> type ID .)
    COMMA           reduce using rule 19 (param_list -> type ID .)


state 104

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN . vars LBRACE statement_list RBRACE
    (15) function -> FUNCTION type ID LPAREN param_list RPAREN . LBRACE statement_list RBRACE
    (3) vars -> . VARS var_list

    LBRACE          shift and go to state 136
    VARS            shift and go to state 6

    vars                           shift and go to state 135

state 105

    (18) param_list -> param_list COMMA . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 137

state 106

    (16) function -> FUNCTION VOID ID LPAREN param_list RPAREN . vars LBRACE statement_list RBRACE
    (17) function -> FUNCTION VOID ID LPAREN param_list RPAREN . LBRACE statement_list RBRACE
    (3) vars -> . VARS var_list

    LBRACE          shift and go to state 139
    VARS            shift and go to state 6

    vars                           shift and go to state 138

state 107

    (86) factor -> LPAREN . expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 140
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 108

    (61) return_statement -> RETURN LPAREN expression . RPAREN SEMICOLON
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 141
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 109

    (82) expression -> term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 82 (expression -> term .)
    PLUS            reduce using rule 82 (expression -> term .)
    MINUS           reduce using rule 82 (expression -> term .)
    EQ              reduce using rule 82 (expression -> term .)
    NE              reduce using rule 82 (expression -> term .)
    LT              reduce using rule 82 (expression -> term .)
    LE              reduce using rule 82 (expression -> term .)
    GT              reduce using rule 82 (expression -> term .)
    GE              reduce using rule 82 (expression -> term .)
    AND             reduce using rule 82 (expression -> term .)
    OR              reduce using rule 82 (expression -> term .)
    SEMICOLON       reduce using rule 82 (expression -> term .)
    RBRACKET        reduce using rule 82 (expression -> term .)
    COMMA           reduce using rule 82 (expression -> term .)
    TO              reduce using rule 82 (expression -> term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 110

    (85) term -> factor .

    TIMES           reduce using rule 85 (term -> factor .)
    DIVIDE          reduce using rule 85 (term -> factor .)
    RPAREN          reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    EQ              reduce using rule 85 (term -> factor .)
    NE              reduce using rule 85 (term -> factor .)
    LT              reduce using rule 85 (term -> factor .)
    LE              reduce using rule 85 (term -> factor .)
    GT              reduce using rule 85 (term -> factor .)
    GE              reduce using rule 85 (term -> factor .)
    AND             reduce using rule 85 (term -> factor .)
    OR              reduce using rule 85 (term -> factor .)
    SEMICOLON       reduce using rule 85 (term -> factor .)
    RBRACKET        reduce using rule 85 (term -> factor .)
    COMMA           reduce using rule 85 (term -> factor .)
    TO              reduce using rule 85 (term -> factor .)


state 111

    (87) factor -> ID .
    (88) factor -> ID . LBRACKET expression RBRACKET
    (43) function_call -> ID . LPAREN arg_list RPAREN
    (44) function_call -> ID . LPAREN RPAREN

    TIMES           reduce using rule 87 (factor -> ID .)
    DIVIDE          reduce using rule 87 (factor -> ID .)
    RPAREN          reduce using rule 87 (factor -> ID .)
    PLUS            reduce using rule 87 (factor -> ID .)
    MINUS           reduce using rule 87 (factor -> ID .)
    EQ              reduce using rule 87 (factor -> ID .)
    NE              reduce using rule 87 (factor -> ID .)
    LT              reduce using rule 87 (factor -> ID .)
    LE              reduce using rule 87 (factor -> ID .)
    GT              reduce using rule 87 (factor -> ID .)
    GE              reduce using rule 87 (factor -> ID .)
    AND             reduce using rule 87 (factor -> ID .)
    OR              reduce using rule 87 (factor -> ID .)
    SEMICOLON       reduce using rule 87 (factor -> ID .)
    RBRACKET        reduce using rule 87 (factor -> ID .)
    COMMA           reduce using rule 87 (factor -> ID .)
    TO              reduce using rule 87 (factor -> ID .)
    LBRACKET        shift and go to state 154
    LPAREN          shift and go to state 90


state 112

    (89) factor -> INTEGER .

    TIMES           reduce using rule 89 (factor -> INTEGER .)
    DIVIDE          reduce using rule 89 (factor -> INTEGER .)
    RPAREN          reduce using rule 89 (factor -> INTEGER .)
    PLUS            reduce using rule 89 (factor -> INTEGER .)
    MINUS           reduce using rule 89 (factor -> INTEGER .)
    EQ              reduce using rule 89 (factor -> INTEGER .)
    NE              reduce using rule 89 (factor -> INTEGER .)
    LT              reduce using rule 89 (factor -> INTEGER .)
    LE              reduce using rule 89 (factor -> INTEGER .)
    GT              reduce using rule 89 (factor -> INTEGER .)
    GE              reduce using rule 89 (factor -> INTEGER .)
    AND             reduce using rule 89 (factor -> INTEGER .)
    OR              reduce using rule 89 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 89 (factor -> INTEGER .)
    RBRACKET        reduce using rule 89 (factor -> INTEGER .)
    COMMA           reduce using rule 89 (factor -> INTEGER .)
    TO              reduce using rule 89 (factor -> INTEGER .)


state 113

    (90) factor -> function_call .

    TIMES           reduce using rule 90 (factor -> function_call .)
    DIVIDE          reduce using rule 90 (factor -> function_call .)
    RPAREN          reduce using rule 90 (factor -> function_call .)
    PLUS            reduce using rule 90 (factor -> function_call .)
    MINUS           reduce using rule 90 (factor -> function_call .)
    EQ              reduce using rule 90 (factor -> function_call .)
    NE              reduce using rule 90 (factor -> function_call .)
    LT              reduce using rule 90 (factor -> function_call .)
    LE              reduce using rule 90 (factor -> function_call .)
    GT              reduce using rule 90 (factor -> function_call .)
    GE              reduce using rule 90 (factor -> function_call .)
    AND             reduce using rule 90 (factor -> function_call .)
    OR              reduce using rule 90 (factor -> function_call .)
    SEMICOLON       reduce using rule 90 (factor -> function_call .)
    RBRACKET        reduce using rule 90 (factor -> function_call .)
    COMMA           reduce using rule 90 (factor -> function_call .)
    TO              reduce using rule 90 (factor -> function_call .)


state 114

    (91) factor -> FLOATING_POINT .

    TIMES           reduce using rule 91 (factor -> FLOATING_POINT .)
    DIVIDE          reduce using rule 91 (factor -> FLOATING_POINT .)
    RPAREN          reduce using rule 91 (factor -> FLOATING_POINT .)
    PLUS            reduce using rule 91 (factor -> FLOATING_POINT .)
    MINUS           reduce using rule 91 (factor -> FLOATING_POINT .)
    EQ              reduce using rule 91 (factor -> FLOATING_POINT .)
    NE              reduce using rule 91 (factor -> FLOATING_POINT .)
    LT              reduce using rule 91 (factor -> FLOATING_POINT .)
    LE              reduce using rule 91 (factor -> FLOATING_POINT .)
    GT              reduce using rule 91 (factor -> FLOATING_POINT .)
    GE              reduce using rule 91 (factor -> FLOATING_POINT .)
    AND             reduce using rule 91 (factor -> FLOATING_POINT .)
    OR              reduce using rule 91 (factor -> FLOATING_POINT .)
    SEMICOLON       reduce using rule 91 (factor -> FLOATING_POINT .)
    RBRACKET        reduce using rule 91 (factor -> FLOATING_POINT .)
    COMMA           reduce using rule 91 (factor -> FLOATING_POINT .)
    TO              reduce using rule 91 (factor -> FLOATING_POINT .)


state 115

    (41) assignment -> ID ASSIGN expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    SEMICOLON       reduce using rule 41 (assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 116

    (42) assignment -> ID LBRACKET expression . RBRACKET ASSIGN expression
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RBRACKET        shift and go to state 155
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 117

    (43) function_call -> ID LPAREN arg_list . RPAREN
    (45) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 156
    COMMA           shift and go to state 157


state 118

    (44) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    NE              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 44 (function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 44 (function_call -> ID LPAREN RPAREN .)


state 119

    (46) arg_list -> expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          reduce using rule 46 (arg_list -> expression .)
    COMMA           reduce using rule 46 (arg_list -> expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 120

    (47) read_statement -> READ LPAREN id_list . RPAREN
    (10) id_list -> id_list . COMMA ID

    RPAREN          shift and go to state 158
    COMMA           shift and go to state 28


state 121

    (48) write_statement -> WRITE LPAREN write_list . RPAREN
    (49) write_list -> write_list . COMMA expression

    RPAREN          shift and go to state 159
    COMMA           shift and go to state 160


state 122

    (50) write_list -> STRING .

    RPAREN          reduce using rule 50 (write_list -> STRING .)
    COMMA           reduce using rule 50 (write_list -> STRING .)


state 123

    (51) write_list -> function_call .

    RPAREN          reduce using rule 51 (write_list -> function_call .)
    COMMA           reduce using rule 51 (write_list -> function_call .)


state 124

    (52) write_list -> ID . COMMA expression
    (43) function_call -> ID . LPAREN arg_list RPAREN
    (44) function_call -> ID . LPAREN RPAREN

    COMMA           shift and go to state 161
    LPAREN          shift and go to state 90


state 125

    (53) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 162
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 126

    (59) while_statement -> WHILE LPAREN expression . RPAREN DO LBRACE statement_list RBRACE
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 163
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 127

    (60) for_statement -> FOR ID LBRACKET . expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 164
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 128

    (62) circle -> CIRCLE LPAREN expression . RPAREN
    (63) circle -> CIRCLE LPAREN expression . COMMA expression RPAREN
    (64) circle -> CIRCLE LPAREN expression . COMMA expression COMMA expression RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 165
    COMMA           shift and go to state 166
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 129

    (65) line -> LINE LPAREN expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 167
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 130

    (66) color -> COLOR LPAREN STRING . RPAREN

    RPAREN          shift and go to state 168


state 131

    (67) point -> POINT LPAREN expression . RPAREN
    (68) point -> POINT LPAREN expression . COMMA STRING RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 169
    COMMA           shift and go to state 170
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 132

    (69) penup -> PENUP LPAREN RPAREN .

    SEMICOLON       reduce using rule 69 (penup -> PENUP LPAREN RPAREN .)


state 133

    (70) pendown -> PENDOWN LPAREN RPAREN .

    SEMICOLON       reduce using rule 70 (pendown -> PENDOWN LPAREN RPAREN .)


state 134

    (71) thickness -> THICKNESS LPAREN expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 171
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 135

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN vars . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 172


state 136

    (15) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 173
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 137

    (18) param_list -> param_list COMMA type . ID

    ID              shift and go to state 174


state 138

    (16) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 175


state 139

    (17) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 176
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 140

    (86) factor -> LPAREN expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 177
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 141

    (61) return_statement -> RETURN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 142

    (72) expression -> expression PLUS . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 179
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 143

    (73) expression -> expression MINUS . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 180
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 144

    (74) expression -> expression EQ . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 181
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 145

    (75) expression -> expression NE . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 182
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 146

    (76) expression -> expression LT . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 183
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 147

    (77) expression -> expression LE . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 184
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 148

    (78) expression -> expression GT . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 185
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 149

    (79) expression -> expression GE . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 186
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 150

    (80) expression -> expression AND . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 187
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 151

    (81) expression -> expression OR . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    term                           shift and go to state 188
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 152

    (83) term -> term TIMES . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    factor                         shift and go to state 189
    function_call                  shift and go to state 113

state 153

    (84) term -> term DIVIDE . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    factor                         shift and go to state 190
    function_call                  shift and go to state 113

state 154

    (88) factor -> ID LBRACKET . expression RBRACKET
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 191
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 155

    (42) assignment -> ID LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 192


state 156

    (43) function_call -> ID LPAREN arg_list RPAREN .

    SEMICOLON       reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    EQ              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    NE              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    LT              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    LE              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    GT              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    GE              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    RBRACKET        reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)
    TO              reduce using rule 43 (function_call -> ID LPAREN arg_list RPAREN .)


state 157

    (45) arg_list -> arg_list COMMA . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 193
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 158

    (47) read_statement -> READ LPAREN id_list RPAREN .

    SEMICOLON       reduce using rule 47 (read_statement -> READ LPAREN id_list RPAREN .)


state 159

    (48) write_statement -> WRITE LPAREN write_list RPAREN .

    SEMICOLON       reduce using rule 48 (write_statement -> WRITE LPAREN write_list RPAREN .)


state 160

    (49) write_list -> write_list COMMA . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 194
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 161

    (52) write_list -> ID COMMA . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 195
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 162

    (53) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE
    (54) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    THEN            shift and go to state 196


state 163

    (59) while_statement -> WHILE LPAREN expression RPAREN . DO LBRACE statement_list RBRACE

    DO              shift and go to state 197


state 164

    (60) for_statement -> FOR ID LBRACKET expression . TO expression RBRACKET DO LBRACE statement_list RBRACE
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    TO              shift and go to state 198
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 165

    (62) circle -> CIRCLE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 62 (circle -> CIRCLE LPAREN expression RPAREN .)


state 166

    (63) circle -> CIRCLE LPAREN expression COMMA . expression RPAREN
    (64) circle -> CIRCLE LPAREN expression COMMA . expression COMMA expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 199
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 167

    (65) line -> LINE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 65 (line -> LINE LPAREN expression RPAREN .)


state 168

    (66) color -> COLOR LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 66 (color -> COLOR LPAREN STRING RPAREN .)


state 169

    (67) point -> POINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 67 (point -> POINT LPAREN expression RPAREN .)


state 170

    (68) point -> POINT LPAREN expression COMMA . STRING RPAREN

    STRING          shift and go to state 200


state 171

    (71) thickness -> THICKNESS LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 71 (thickness -> THICKNESS LPAREN expression RPAREN .)


state 172

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 201
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 173

    (15) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 202
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 174

    (18) param_list -> param_list COMMA type ID .

    RPAREN          reduce using rule 18 (param_list -> param_list COMMA type ID .)
    COMMA           reduce using rule 18 (param_list -> param_list COMMA type ID .)


state 175

    (16) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 203
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 176

    (17) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 204
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 177

    (86) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 86 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 86 (factor -> LPAREN expression RPAREN .)


state 178

    (61) return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    LINE            reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    POINT           reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    PENUP           reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    PENDOWN         reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)
    THICKNESS       reduce using rule 61 (return_statement -> RETURN LPAREN expression RPAREN SEMICOLON .)


state 179

    (72) expression -> expression PLUS term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 72 (expression -> expression PLUS term .)
    PLUS            reduce using rule 72 (expression -> expression PLUS term .)
    MINUS           reduce using rule 72 (expression -> expression PLUS term .)
    EQ              reduce using rule 72 (expression -> expression PLUS term .)
    NE              reduce using rule 72 (expression -> expression PLUS term .)
    LT              reduce using rule 72 (expression -> expression PLUS term .)
    LE              reduce using rule 72 (expression -> expression PLUS term .)
    GT              reduce using rule 72 (expression -> expression PLUS term .)
    GE              reduce using rule 72 (expression -> expression PLUS term .)
    AND             reduce using rule 72 (expression -> expression PLUS term .)
    OR              reduce using rule 72 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 72 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 72 (expression -> expression PLUS term .)
    COMMA           reduce using rule 72 (expression -> expression PLUS term .)
    TO              reduce using rule 72 (expression -> expression PLUS term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 180

    (73) expression -> expression MINUS term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 73 (expression -> expression MINUS term .)
    PLUS            reduce using rule 73 (expression -> expression MINUS term .)
    MINUS           reduce using rule 73 (expression -> expression MINUS term .)
    EQ              reduce using rule 73 (expression -> expression MINUS term .)
    NE              reduce using rule 73 (expression -> expression MINUS term .)
    LT              reduce using rule 73 (expression -> expression MINUS term .)
    LE              reduce using rule 73 (expression -> expression MINUS term .)
    GT              reduce using rule 73 (expression -> expression MINUS term .)
    GE              reduce using rule 73 (expression -> expression MINUS term .)
    AND             reduce using rule 73 (expression -> expression MINUS term .)
    OR              reduce using rule 73 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 73 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 73 (expression -> expression MINUS term .)
    COMMA           reduce using rule 73 (expression -> expression MINUS term .)
    TO              reduce using rule 73 (expression -> expression MINUS term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 181

    (74) expression -> expression EQ term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 74 (expression -> expression EQ term .)
    PLUS            reduce using rule 74 (expression -> expression EQ term .)
    MINUS           reduce using rule 74 (expression -> expression EQ term .)
    EQ              reduce using rule 74 (expression -> expression EQ term .)
    NE              reduce using rule 74 (expression -> expression EQ term .)
    LT              reduce using rule 74 (expression -> expression EQ term .)
    LE              reduce using rule 74 (expression -> expression EQ term .)
    GT              reduce using rule 74 (expression -> expression EQ term .)
    GE              reduce using rule 74 (expression -> expression EQ term .)
    AND             reduce using rule 74 (expression -> expression EQ term .)
    OR              reduce using rule 74 (expression -> expression EQ term .)
    SEMICOLON       reduce using rule 74 (expression -> expression EQ term .)
    RBRACKET        reduce using rule 74 (expression -> expression EQ term .)
    COMMA           reduce using rule 74 (expression -> expression EQ term .)
    TO              reduce using rule 74 (expression -> expression EQ term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 182

    (75) expression -> expression NE term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 75 (expression -> expression NE term .)
    PLUS            reduce using rule 75 (expression -> expression NE term .)
    MINUS           reduce using rule 75 (expression -> expression NE term .)
    EQ              reduce using rule 75 (expression -> expression NE term .)
    NE              reduce using rule 75 (expression -> expression NE term .)
    LT              reduce using rule 75 (expression -> expression NE term .)
    LE              reduce using rule 75 (expression -> expression NE term .)
    GT              reduce using rule 75 (expression -> expression NE term .)
    GE              reduce using rule 75 (expression -> expression NE term .)
    AND             reduce using rule 75 (expression -> expression NE term .)
    OR              reduce using rule 75 (expression -> expression NE term .)
    SEMICOLON       reduce using rule 75 (expression -> expression NE term .)
    RBRACKET        reduce using rule 75 (expression -> expression NE term .)
    COMMA           reduce using rule 75 (expression -> expression NE term .)
    TO              reduce using rule 75 (expression -> expression NE term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 183

    (76) expression -> expression LT term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 76 (expression -> expression LT term .)
    PLUS            reduce using rule 76 (expression -> expression LT term .)
    MINUS           reduce using rule 76 (expression -> expression LT term .)
    EQ              reduce using rule 76 (expression -> expression LT term .)
    NE              reduce using rule 76 (expression -> expression LT term .)
    LT              reduce using rule 76 (expression -> expression LT term .)
    LE              reduce using rule 76 (expression -> expression LT term .)
    GT              reduce using rule 76 (expression -> expression LT term .)
    GE              reduce using rule 76 (expression -> expression LT term .)
    AND             reduce using rule 76 (expression -> expression LT term .)
    OR              reduce using rule 76 (expression -> expression LT term .)
    SEMICOLON       reduce using rule 76 (expression -> expression LT term .)
    RBRACKET        reduce using rule 76 (expression -> expression LT term .)
    COMMA           reduce using rule 76 (expression -> expression LT term .)
    TO              reduce using rule 76 (expression -> expression LT term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 184

    (77) expression -> expression LE term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 77 (expression -> expression LE term .)
    PLUS            reduce using rule 77 (expression -> expression LE term .)
    MINUS           reduce using rule 77 (expression -> expression LE term .)
    EQ              reduce using rule 77 (expression -> expression LE term .)
    NE              reduce using rule 77 (expression -> expression LE term .)
    LT              reduce using rule 77 (expression -> expression LE term .)
    LE              reduce using rule 77 (expression -> expression LE term .)
    GT              reduce using rule 77 (expression -> expression LE term .)
    GE              reduce using rule 77 (expression -> expression LE term .)
    AND             reduce using rule 77 (expression -> expression LE term .)
    OR              reduce using rule 77 (expression -> expression LE term .)
    SEMICOLON       reduce using rule 77 (expression -> expression LE term .)
    RBRACKET        reduce using rule 77 (expression -> expression LE term .)
    COMMA           reduce using rule 77 (expression -> expression LE term .)
    TO              reduce using rule 77 (expression -> expression LE term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 185

    (78) expression -> expression GT term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 78 (expression -> expression GT term .)
    PLUS            reduce using rule 78 (expression -> expression GT term .)
    MINUS           reduce using rule 78 (expression -> expression GT term .)
    EQ              reduce using rule 78 (expression -> expression GT term .)
    NE              reduce using rule 78 (expression -> expression GT term .)
    LT              reduce using rule 78 (expression -> expression GT term .)
    LE              reduce using rule 78 (expression -> expression GT term .)
    GT              reduce using rule 78 (expression -> expression GT term .)
    GE              reduce using rule 78 (expression -> expression GT term .)
    AND             reduce using rule 78 (expression -> expression GT term .)
    OR              reduce using rule 78 (expression -> expression GT term .)
    SEMICOLON       reduce using rule 78 (expression -> expression GT term .)
    RBRACKET        reduce using rule 78 (expression -> expression GT term .)
    COMMA           reduce using rule 78 (expression -> expression GT term .)
    TO              reduce using rule 78 (expression -> expression GT term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 186

    (79) expression -> expression GE term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 79 (expression -> expression GE term .)
    PLUS            reduce using rule 79 (expression -> expression GE term .)
    MINUS           reduce using rule 79 (expression -> expression GE term .)
    EQ              reduce using rule 79 (expression -> expression GE term .)
    NE              reduce using rule 79 (expression -> expression GE term .)
    LT              reduce using rule 79 (expression -> expression GE term .)
    LE              reduce using rule 79 (expression -> expression GE term .)
    GT              reduce using rule 79 (expression -> expression GE term .)
    GE              reduce using rule 79 (expression -> expression GE term .)
    AND             reduce using rule 79 (expression -> expression GE term .)
    OR              reduce using rule 79 (expression -> expression GE term .)
    SEMICOLON       reduce using rule 79 (expression -> expression GE term .)
    RBRACKET        reduce using rule 79 (expression -> expression GE term .)
    COMMA           reduce using rule 79 (expression -> expression GE term .)
    TO              reduce using rule 79 (expression -> expression GE term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 187

    (80) expression -> expression AND term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 80 (expression -> expression AND term .)
    PLUS            reduce using rule 80 (expression -> expression AND term .)
    MINUS           reduce using rule 80 (expression -> expression AND term .)
    EQ              reduce using rule 80 (expression -> expression AND term .)
    NE              reduce using rule 80 (expression -> expression AND term .)
    LT              reduce using rule 80 (expression -> expression AND term .)
    LE              reduce using rule 80 (expression -> expression AND term .)
    GT              reduce using rule 80 (expression -> expression AND term .)
    GE              reduce using rule 80 (expression -> expression AND term .)
    AND             reduce using rule 80 (expression -> expression AND term .)
    OR              reduce using rule 80 (expression -> expression AND term .)
    SEMICOLON       reduce using rule 80 (expression -> expression AND term .)
    RBRACKET        reduce using rule 80 (expression -> expression AND term .)
    COMMA           reduce using rule 80 (expression -> expression AND term .)
    TO              reduce using rule 80 (expression -> expression AND term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 188

    (81) expression -> expression OR term .
    (83) term -> term . TIMES factor
    (84) term -> term . DIVIDE factor

    RPAREN          reduce using rule 81 (expression -> expression OR term .)
    PLUS            reduce using rule 81 (expression -> expression OR term .)
    MINUS           reduce using rule 81 (expression -> expression OR term .)
    EQ              reduce using rule 81 (expression -> expression OR term .)
    NE              reduce using rule 81 (expression -> expression OR term .)
    LT              reduce using rule 81 (expression -> expression OR term .)
    LE              reduce using rule 81 (expression -> expression OR term .)
    GT              reduce using rule 81 (expression -> expression OR term .)
    GE              reduce using rule 81 (expression -> expression OR term .)
    AND             reduce using rule 81 (expression -> expression OR term .)
    OR              reduce using rule 81 (expression -> expression OR term .)
    SEMICOLON       reduce using rule 81 (expression -> expression OR term .)
    RBRACKET        reduce using rule 81 (expression -> expression OR term .)
    COMMA           reduce using rule 81 (expression -> expression OR term .)
    TO              reduce using rule 81 (expression -> expression OR term .)
    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153


state 189

    (83) term -> term TIMES factor .

    TIMES           reduce using rule 83 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 83 (term -> term TIMES factor .)
    RPAREN          reduce using rule 83 (term -> term TIMES factor .)
    PLUS            reduce using rule 83 (term -> term TIMES factor .)
    MINUS           reduce using rule 83 (term -> term TIMES factor .)
    EQ              reduce using rule 83 (term -> term TIMES factor .)
    NE              reduce using rule 83 (term -> term TIMES factor .)
    LT              reduce using rule 83 (term -> term TIMES factor .)
    LE              reduce using rule 83 (term -> term TIMES factor .)
    GT              reduce using rule 83 (term -> term TIMES factor .)
    GE              reduce using rule 83 (term -> term TIMES factor .)
    AND             reduce using rule 83 (term -> term TIMES factor .)
    OR              reduce using rule 83 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 83 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 83 (term -> term TIMES factor .)
    COMMA           reduce using rule 83 (term -> term TIMES factor .)
    TO              reduce using rule 83 (term -> term TIMES factor .)


state 190

    (84) term -> term DIVIDE factor .

    TIMES           reduce using rule 84 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 84 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 84 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 84 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 84 (term -> term DIVIDE factor .)
    EQ              reduce using rule 84 (term -> term DIVIDE factor .)
    NE              reduce using rule 84 (term -> term DIVIDE factor .)
    LT              reduce using rule 84 (term -> term DIVIDE factor .)
    LE              reduce using rule 84 (term -> term DIVIDE factor .)
    GT              reduce using rule 84 (term -> term DIVIDE factor .)
    GE              reduce using rule 84 (term -> term DIVIDE factor .)
    AND             reduce using rule 84 (term -> term DIVIDE factor .)
    OR              reduce using rule 84 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 84 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 84 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 84 (term -> term DIVIDE factor .)
    TO              reduce using rule 84 (term -> term DIVIDE factor .)


state 191

    (88) factor -> ID LBRACKET expression . RBRACKET
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RBRACKET        shift and go to state 205
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 192

    (42) assignment -> ID LBRACKET expression RBRACKET ASSIGN . expression
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 206
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 193

    (45) arg_list -> arg_list COMMA expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          reduce using rule 45 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 45 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 194

    (49) write_list -> write_list COMMA expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          reduce using rule 49 (write_list -> write_list COMMA expression .)
    COMMA           reduce using rule 49 (write_list -> write_list COMMA expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 195

    (52) write_list -> ID COMMA expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          reduce using rule 52 (write_list -> ID COMMA expression .)
    COMMA           reduce using rule 52 (write_list -> ID COMMA expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 196

    (53) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE
    (54) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE

    LBRACE          shift and go to state 207


state 197

    (59) while_statement -> WHILE LPAREN expression RPAREN DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 208


state 198

    (60) for_statement -> FOR ID LBRACKET expression TO . expression RBRACKET DO LBRACE statement_list RBRACE
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 209
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 199

    (63) circle -> CIRCLE LPAREN expression COMMA expression . RPAREN
    (64) circle -> CIRCLE LPAREN expression COMMA expression . COMMA expression RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 211
    COMMA           shift and go to state 210
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 200

    (68) point -> POINT LPAREN expression COMMA STRING . RPAREN

    RPAREN          shift and go to state 212


state 201

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 213
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 202

    (15) function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    MAIN            reduce using rule 15 (function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 15 (function -> FUNCTION type ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)


state 203

    (16) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 214
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 204

    (17) function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    MAIN            reduce using rule 17 (function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 17 (function -> FUNCTION VOID ID LPAREN param_list RPAREN LBRACE statement_list RBRACE .)


state 205

    (88) factor -> ID LBRACKET expression RBRACKET .

    TIMES           reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 88 (factor -> ID LBRACKET expression RBRACKET .)


state 206

    (42) assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    SEMICOLON       reduce using rule 42 (assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 207

    (53) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE
    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 215
    return_statement               shift and go to state 216
    statement                      shift and go to state 38
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 208

    (59) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 217
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 209

    (60) for_statement -> FOR ID LBRACKET expression TO expression . RBRACKET DO LBRACE statement_list RBRACE
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RBRACKET        shift and go to state 218
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 210

    (64) circle -> CIRCLE LPAREN expression COMMA expression COMMA . expression RPAREN
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) expression -> . expression EQ term
    (75) expression -> . expression NE term
    (76) expression -> . expression LT term
    (77) expression -> . expression LE term
    (78) expression -> . expression GT term
    (79) expression -> . expression GE term
    (80) expression -> . expression AND term
    (81) expression -> . expression OR term
    (82) expression -> . term
    (83) term -> . term TIMES factor
    (84) term -> . term DIVIDE factor
    (85) term -> . factor
    (86) factor -> . LPAREN expression RPAREN
    (87) factor -> . ID
    (88) factor -> . ID LBRACKET expression RBRACKET
    (89) factor -> . INTEGER
    (90) factor -> . function_call
    (91) factor -> . FLOATING_POINT
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 107
    ID              shift and go to state 111
    INTEGER         shift and go to state 112
    FLOATING_POINT  shift and go to state 114

    expression                     shift and go to state 219
    term                           shift and go to state 109
    factor                         shift and go to state 110
    function_call                  shift and go to state 113

state 211

    (63) circle -> CIRCLE LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 63 (circle -> CIRCLE LPAREN expression COMMA expression RPAREN .)


state 212

    (68) point -> POINT LPAREN expression COMMA STRING RPAREN .

    SEMICOLON       reduce using rule 68 (point -> POINT LPAREN expression COMMA STRING RPAREN .)


state 213

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .

    MAIN            reduce using rule 14 (function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 14 (function -> FUNCTION type ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)


state 214

    (16) function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .

    MAIN            reduce using rule 16 (function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 16 (function -> FUNCTION VOID ID LPAREN param_list RPAREN vars LBRACE statement_list RBRACE .)


state 215

    (53) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE
    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE ELSE LBRACE return_statement RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 220
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    return_statement               shift and go to state 75
    statement                      shift and go to state 74
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 216

    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement . RBRACE ELSE LBRACE return_statement RBRACE
    (25) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 221
    RETURN          reduce using rule 25 (statement_list -> return_statement .)
    ID              reduce using rule 25 (statement_list -> return_statement .)
    READ            reduce using rule 25 (statement_list -> return_statement .)
    WRITE           reduce using rule 25 (statement_list -> return_statement .)
    IF              reduce using rule 25 (statement_list -> return_statement .)
    WHILE           reduce using rule 25 (statement_list -> return_statement .)
    FOR             reduce using rule 25 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 25 (statement_list -> return_statement .)
    LINE            reduce using rule 25 (statement_list -> return_statement .)
    COLOR           reduce using rule 25 (statement_list -> return_statement .)
    POINT           reduce using rule 25 (statement_list -> return_statement .)
    PENUP           reduce using rule 25 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 25 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 25 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 25 (statement_list -> return_statement .) ]


state 217

    (59) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 222
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 218

    (60) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET . DO LBRACE statement_list RBRACE

    DO              shift and go to state 223


state 219

    (64) circle -> CIRCLE LPAREN expression COMMA expression COMMA expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (74) expression -> expression . EQ term
    (75) expression -> expression . NE term
    (76) expression -> expression . LT term
    (77) expression -> expression . LE term
    (78) expression -> expression . GT term
    (79) expression -> expression . GE term
    (80) expression -> expression . AND term
    (81) expression -> expression . OR term

    RPAREN          shift and go to state 224
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143
    EQ              shift and go to state 144
    NE              shift and go to state 145
    LT              shift and go to state 146
    LE              shift and go to state 147
    GT              shift and go to state 148
    GE              shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151


state 220

    (53) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .
    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE . ELSE LBRACE return_statement RBRACE

    RBRACE          reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ID              reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    READ            reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    IF              reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    LINE            reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    POINT           reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 53 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 225


state 221

    (54) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .
    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE . ELSE LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE . ELSE LBRACE return_statement RBRACE

    RBRACE          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    ID              reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    READ            reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    IF              reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    FOR             reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    LINE            reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    POINT           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 54 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE .)
    ELSE            shift and go to state 226


state 222

    (59) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    LINE            reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    POINT           reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 59 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)


state 223

    (60) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 227


state 224

    (64) circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 64 (circle -> CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN .)


state 225

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 228


state 226

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE . LBRACE statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 229


state 227

    (60) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE . statement_list RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 230
    statement                      shift and go to state 38
    return_statement               shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 228

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE . return_statement RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    statement_list                 shift and go to state 231
    return_statement               shift and go to state 232
    statement                      shift and go to state 38
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 229

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE . statement_list RBRACE
    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE . return_statement RBRACE
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . statement_list return_statement
    (24) statement_list -> . statement
    (25) statement_list -> . return_statement
    (26) statement_list -> . empty
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (92) empty -> .
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for THICKNESS resolved as shift
    RETURN          shift and go to state 55
    RBRACE          reduce using rule 92 (empty -> .)
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

  ! RETURN          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! READ            [ reduce using rule 92 (empty -> .) ]
  ! WRITE           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 92 (empty -> .) ]
  ! LINE            [ reduce using rule 92 (empty -> .) ]
  ! COLOR           [ reduce using rule 92 (empty -> .) ]
  ! POINT           [ reduce using rule 92 (empty -> .) ]
  ! PENUP           [ reduce using rule 92 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 92 (empty -> .) ]
  ! THICKNESS       [ reduce using rule 92 (empty -> .) ]

    return_statement               shift and go to state 233
    statement_list                 shift and go to state 234
    statement                      shift and go to state 38
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 230

    (60) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 235
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 231

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 236
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    statement                      shift and go to state 74
    return_statement               shift and go to state 75
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 232

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement . RBRACE
    (25) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 237
    RETURN          reduce using rule 25 (statement_list -> return_statement .)
    ID              reduce using rule 25 (statement_list -> return_statement .)
    READ            reduce using rule 25 (statement_list -> return_statement .)
    WRITE           reduce using rule 25 (statement_list -> return_statement .)
    IF              reduce using rule 25 (statement_list -> return_statement .)
    WHILE           reduce using rule 25 (statement_list -> return_statement .)
    FOR             reduce using rule 25 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 25 (statement_list -> return_statement .)
    LINE            reduce using rule 25 (statement_list -> return_statement .)
    COLOR           reduce using rule 25 (statement_list -> return_statement .)
    POINT           reduce using rule 25 (statement_list -> return_statement .)
    PENUP           reduce using rule 25 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 25 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 25 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 25 (statement_list -> return_statement .) ]


state 233

    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement . RBRACE
    (25) statement_list -> return_statement .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 238
    RETURN          reduce using rule 25 (statement_list -> return_statement .)
    ID              reduce using rule 25 (statement_list -> return_statement .)
    READ            reduce using rule 25 (statement_list -> return_statement .)
    WRITE           reduce using rule 25 (statement_list -> return_statement .)
    IF              reduce using rule 25 (statement_list -> return_statement .)
    WHILE           reduce using rule 25 (statement_list -> return_statement .)
    FOR             reduce using rule 25 (statement_list -> return_statement .)
    CIRCLE          reduce using rule 25 (statement_list -> return_statement .)
    LINE            reduce using rule 25 (statement_list -> return_statement .)
    COLOR           reduce using rule 25 (statement_list -> return_statement .)
    POINT           reduce using rule 25 (statement_list -> return_statement .)
    PENUP           reduce using rule 25 (statement_list -> return_statement .)
    PENDOWN         reduce using rule 25 (statement_list -> return_statement .)
    THICKNESS       reduce using rule 25 (statement_list -> return_statement .)

  ! RBRACE          [ reduce using rule 25 (statement_list -> return_statement .) ]


state 234

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list . RBRACE
    (22) statement_list -> statement_list . statement
    (23) statement_list -> statement_list . return_statement
    (27) statement -> . assignment SEMICOLON
    (28) statement -> . function_call SEMICOLON
    (29) statement -> . read_statement SEMICOLON
    (30) statement -> . write_statement SEMICOLON
    (31) statement -> . if_statement
    (32) statement -> . while_statement
    (33) statement -> . for_statement
    (34) statement -> . circle SEMICOLON
    (35) statement -> . line SEMICOLON
    (36) statement -> . color SEMICOLON
    (37) statement -> . point SEMICOLON
    (38) statement -> . penup SEMICOLON
    (39) statement -> . pendown SEMICOLON
    (40) statement -> . thickness SEMICOLON
    (61) return_statement -> . RETURN LPAREN expression RPAREN SEMICOLON
    (41) assignment -> . ID ASSIGN expression
    (42) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (43) function_call -> . ID LPAREN arg_list RPAREN
    (44) function_call -> . ID LPAREN RPAREN
    (47) read_statement -> . READ LPAREN id_list RPAREN
    (48) write_statement -> . WRITE LPAREN write_list RPAREN
    (53) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (54) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE
    (55) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (56) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE
    (57) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE
    (58) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE
    (59) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (60) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (62) circle -> . CIRCLE LPAREN expression RPAREN
    (63) circle -> . CIRCLE LPAREN expression COMMA expression RPAREN
    (64) circle -> . CIRCLE LPAREN expression COMMA expression COMMA expression RPAREN
    (65) line -> . LINE LPAREN expression RPAREN
    (66) color -> . COLOR LPAREN STRING RPAREN
    (67) point -> . POINT LPAREN expression RPAREN
    (68) point -> . POINT LPAREN expression COMMA STRING RPAREN
    (69) penup -> . PENUP LPAREN RPAREN
    (70) pendown -> . PENDOWN LPAREN RPAREN
    (71) thickness -> . THICKNESS LPAREN expression RPAREN

    RBRACE          shift and go to state 239
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    CIRCLE          shift and go to state 62
    LINE            shift and go to state 63
    COLOR           shift and go to state 64
    POINT           shift and go to state 65
    PENUP           shift and go to state 66
    PENDOWN         shift and go to state 67
    THICKNESS       shift and go to state 68

    return_statement               shift and go to state 75
    statement                      shift and go to state 74
    assignment                     shift and go to state 41
    function_call                  shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    if_statement                   shift and go to state 45
    while_statement                shift and go to state 46
    for_statement                  shift and go to state 47
    circle                         shift and go to state 48
    line                           shift and go to state 49
    color                          shift and go to state 50
    point                          shift and go to state 51
    penup                          shift and go to state 52
    pendown                        shift and go to state 53
    thickness                      shift and go to state 54

state 235

    (60) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    LINE            reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    POINT           reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 60 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)


state 236

    (55) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    READ            reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LINE            reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    POINT           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 55 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 237

    (57) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .

    RBRACE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    ID              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    READ            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    IF              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    FOR             reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    LINE            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    POINT           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE return_statement RBRACE .)


state 238

    (58) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .

    RBRACE          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    RETURN          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    ID              reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    READ            reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    WRITE           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    IF              reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    FOR             reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    CIRCLE          reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    LINE            reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    COLOR           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    POINT           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    PENUP           reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    PENDOWN         reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)
    THICKNESS       reduce using rule 58 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE return_statement RBRACE .)


state 239

    (56) if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    READ            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    CIRCLE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    LINE            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    COLOR           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    POINT           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    PENUP           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    PENDOWN         reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)
    THICKNESS       reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE return_statement RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 8 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for READ in state 34 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 34 resolved as shift
WARNING: shift/reduce conflict for IF in state 34 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 34 resolved as shift
WARNING: shift/reduce conflict for FOR in state 34 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 34 resolved as shift
WARNING: shift/reduce conflict for LINE in state 34 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 34 resolved as shift
WARNING: shift/reduce conflict for POINT in state 34 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 34 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 34 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 34 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for READ in state 136 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 136 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 136 resolved as shift
WARNING: shift/reduce conflict for FOR in state 136 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 136 resolved as shift
WARNING: shift/reduce conflict for LINE in state 136 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 136 resolved as shift
WARNING: shift/reduce conflict for POINT in state 136 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 136 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 136 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 136 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for READ in state 139 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
WARNING: shift/reduce conflict for FOR in state 139 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 139 resolved as shift
WARNING: shift/reduce conflict for LINE in state 139 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 139 resolved as shift
WARNING: shift/reduce conflict for POINT in state 139 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 139 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 139 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 139 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for READ in state 172 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 172 resolved as shift
WARNING: shift/reduce conflict for LINE in state 172 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 172 resolved as shift
WARNING: shift/reduce conflict for POINT in state 172 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 172 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 172 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 172 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 175 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for READ in state 175 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 175 resolved as shift
WARNING: shift/reduce conflict for IF in state 175 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 175 resolved as shift
WARNING: shift/reduce conflict for FOR in state 175 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 175 resolved as shift
WARNING: shift/reduce conflict for LINE in state 175 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 175 resolved as shift
WARNING: shift/reduce conflict for POINT in state 175 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 175 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 175 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 175 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 207 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for READ in state 207 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 207 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 207 resolved as shift
WARNING: shift/reduce conflict for FOR in state 207 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 207 resolved as shift
WARNING: shift/reduce conflict for LINE in state 207 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 207 resolved as shift
WARNING: shift/reduce conflict for POINT in state 207 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 207 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 207 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 207 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for READ in state 208 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for FOR in state 208 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 208 resolved as shift
WARNING: shift/reduce conflict for LINE in state 208 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 208 resolved as shift
WARNING: shift/reduce conflict for POINT in state 208 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 208 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 208 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 208 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 216 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for READ in state 227 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 227 resolved as shift
WARNING: shift/reduce conflict for IF in state 227 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 227 resolved as shift
WARNING: shift/reduce conflict for FOR in state 227 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 227 resolved as shift
WARNING: shift/reduce conflict for LINE in state 227 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 227 resolved as shift
WARNING: shift/reduce conflict for POINT in state 227 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 227 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 227 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 227 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 228 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for READ in state 228 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 228 resolved as shift
WARNING: shift/reduce conflict for IF in state 228 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 228 resolved as shift
WARNING: shift/reduce conflict for FOR in state 228 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 228 resolved as shift
WARNING: shift/reduce conflict for LINE in state 228 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 228 resolved as shift
WARNING: shift/reduce conflict for POINT in state 228 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 228 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 228 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 228 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for READ in state 229 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for FOR in state 229 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 229 resolved as shift
WARNING: shift/reduce conflict for LINE in state 229 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 229 resolved as shift
WARNING: shift/reduce conflict for POINT in state 229 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 229 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 229 resolved as shift
WARNING: shift/reduce conflict for THICKNESS in state 229 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 232 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 233 resolved as shift
