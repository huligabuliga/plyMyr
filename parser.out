Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARC
    CIRCLE
    COLOR
    LINE
    NOT
    PENDOWN
    PENUP
    POINT
    RETURN
    THICKNESS
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars function_list main_function
Rule 2     program -> PROGRAM ID SEMICOLON vars empty main_function
Rule 3     vars -> VARS var_list
Rule 4     var_list -> var_list type id_list SEMICOLON
Rule 5     var_list -> type id_list SEMICOLON
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> BOOL
Rule 9     type -> CHAR
Rule 10    id_list -> id_list COMMA ID
Rule 11    id_list -> ID
Rule 12    function_list -> function_list function
Rule 13    function_list -> empty
Rule 14    function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE
Rule 15    param_list -> param_list COMMA type ID
Rule 16    param_list -> type ID
Rule 17    main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE
Rule 18    statement_list -> statement_list statement
Rule 19    statement_list -> empty
Rule 20    statement -> assignment SEMICOLON
Rule 21    statement -> function_call SEMICOLON
Rule 22    statement -> read_statement SEMICOLON
Rule 23    statement -> write_statement SEMICOLON
Rule 24    statement -> if_statement
Rule 25    statement -> while_statement
Rule 26    statement -> for_statement
Rule 27    assignment -> ID ASSIGN expression
Rule 28    assignment -> ID LBRACKET expression RBRACKET ASSIGN expression
Rule 29    function_call -> ID LPAREN arg_list RPAREN
Rule 30    arg_list -> arg_list COMMA expression
Rule 31    arg_list -> expression
Rule 32    read_statement -> READ id_list
Rule 33    write_statement -> WRITE LPAREN write_list RPAREN
Rule 34    write_list -> write_list COMMA expression
Rule 35    write_list -> STRING
Rule 36    write_list -> ID COMMA expression
Rule 37    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
Rule 38    if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 39    while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
Rule 40    for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE
Rule 41    expression -> expression PLUS term
Rule 42    expression -> expression MINUS term
Rule 43    expression -> expression EQ term
Rule 44    expression -> expression NE term
Rule 45    expression -> expression LT term
Rule 46    expression -> expression LE term
Rule 47    expression -> expression GT term
Rule 48    expression -> expression GE term
Rule 49    expression -> expression AND term
Rule 50    expression -> expression OR term
Rule 51    expression -> term
Rule 52    expression -> STRING
Rule 53    term -> term TIMES factor
Rule 54    term -> term DIVIDE factor
Rule 55    term -> factor
Rule 56    factor -> LPAREN expression RPAREN
Rule 57    factor -> ID
Rule 58    factor -> ID LBRACKET expression RBRACKET
Rule 59    factor -> INTEGER
Rule 60    factor -> FLOATING_POINT
Rule 61    empty -> <empty>

Terminals, with rules where they appear

AND                  : 49
ARC                  : 
ASSIGN               : 27 28
BOOL                 : 8
CHAR                 : 9
CIRCLE               : 
COLOR                : 
COMMA                : 10 15 30 34 36
DIVIDE               : 54
DO                   : 39 40
ELSE                 : 38
EQ                   : 43
FLOAT                : 7
FLOATING_POINT       : 60
FOR                  : 40
FUNCTION             : 14
GE                   : 48
GT                   : 47
ID                   : 1 2 10 11 14 15 16 27 28 29 36 40 57 58
IF                   : 37 38
INT                  : 6
INTEGER              : 59
LBRACE               : 17 37 38 38 39 40
LBRACKET             : 28 40 58
LE                   : 46
LINE                 : 
LPAREN               : 14 17 29 33 37 38 39 56
LT                   : 45
MAIN                 : 17
MINUS                : 42
NE                   : 44
NOT                  : 
OR                   : 50
PENDOWN              : 
PENUP                : 
PLUS                 : 41
POINT                : 
PROGRAM              : 1 2
RBRACE               : 14 17 37 38 38 39 40
RBRACKET             : 28 40 58
READ                 : 32
RETURN               : 
RPAREN               : 14 17 29 33 37 38 39 56
SEMICOLON            : 1 2 4 5 14 20 21 22 23
STRING               : 35 52
THEN                 : 37 38
THICKNESS            : 
TIMES                : 53
TO                   : 40
VARS                 : 3
VOID                 : 
WHILE                : 39
WRITE                : 33
error                : 

Nonterminals, with rules where they appear

arg_list             : 29 30
assignment           : 20
empty                : 2 13 19
expression           : 27 28 28 30 31 34 36 37 38 39 40 40 41 42 43 44 45 46 47 48 49 50 56 58
factor               : 53 54 55
for_statement        : 26
function             : 12
function_call        : 21
function_list        : 1 12
id_list              : 4 5 10 32
if_statement         : 24
main_function        : 1 2
param_list           : 14 15
program              : 0
read_statement       : 22
statement            : 18
statement_list       : 14 17 18 37 38 38 39 40
term                 : 41 42 43 44 45 46 47 48 49 50 51 53 54
type                 : 4 5 14 15 16
var_list             : 3 4
vars                 : 1 2 14
while_statement      : 25
write_list           : 33 34
write_statement      : 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars function_list main_function
    (2) program -> . PROGRAM ID SEMICOLON vars empty main_function

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars function_list main_function
    (2) program -> PROGRAM . ID SEMICOLON vars empty main_function

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars function_list main_function
    (2) program -> PROGRAM ID . SEMICOLON vars empty main_function

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars function_list main_function
    (2) program -> PROGRAM ID SEMICOLON . vars empty main_function
    (3) vars -> . VARS var_list

    VARS            shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . function_list main_function
    (2) program -> PROGRAM ID SEMICOLON vars . empty main_function
    (12) function_list -> . function_list function
    (13) function_list -> . empty
    (61) empty -> .

    MAIN            reduce using rule 61 (empty -> .)
    FUNCTION        reduce using rule 61 (empty -> .)

    function_list                  shift and go to state 7
    empty                          shift and go to state 8

state 6

    (3) vars -> VARS . var_list
    (4) var_list -> . var_list type id_list SEMICOLON
    (5) var_list -> . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    var_list                       shift and go to state 9
    type                           shift and go to state 10

state 7

    (1) program -> PROGRAM ID SEMICOLON vars function_list . main_function
    (12) function_list -> function_list . function
    (17) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE
    (14) function -> . FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE

    MAIN            shift and go to state 17
    FUNCTION        shift and go to state 18

    main_function                  shift and go to state 15
    function                       shift and go to state 16

state 8

    (2) program -> PROGRAM ID SEMICOLON vars empty . main_function
    (13) function_list -> empty .
    (17) main_function -> . MAIN LPAREN RPAREN LBRACE statement_list RBRACE

  ! shift/reduce conflict for MAIN resolved as shift
    FUNCTION        reduce using rule 13 (function_list -> empty .)
    MAIN            shift and go to state 17

  ! MAIN            [ reduce using rule 13 (function_list -> empty .) ]

    main_function                  shift and go to state 19

state 9

    (3) vars -> VARS var_list .
    (4) var_list -> var_list . type id_list SEMICOLON
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    MAIN            reduce using rule 3 (vars -> VARS var_list .)
    FUNCTION        reduce using rule 3 (vars -> VARS var_list .)
    RBRACE          reduce using rule 3 (vars -> VARS var_list .)
    ID              reduce using rule 3 (vars -> VARS var_list .)
    READ            reduce using rule 3 (vars -> VARS var_list .)
    WRITE           reduce using rule 3 (vars -> VARS var_list .)
    IF              reduce using rule 3 (vars -> VARS var_list .)
    WHILE           reduce using rule 3 (vars -> VARS var_list .)
    FOR             reduce using rule 3 (vars -> VARS var_list .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 20

state 10

    (5) var_list -> type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 21

state 11

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 12

    (7) type -> FLOAT .

    ID              reduce using rule 7 (type -> FLOAT .)


state 13

    (8) type -> BOOL .

    ID              reduce using rule 8 (type -> BOOL .)


state 14

    (9) type -> CHAR .

    ID              reduce using rule 9 (type -> CHAR .)


state 15

    (1) program -> PROGRAM ID SEMICOLON vars function_list main_function .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars function_list main_function .)


state 16

    (12) function_list -> function_list function .

    MAIN            reduce using rule 12 (function_list -> function_list function .)
    FUNCTION        reduce using rule 12 (function_list -> function_list function .)


state 17

    (17) main_function -> MAIN . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 23


state 18

    (14) function -> FUNCTION . type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 24

state 19

    (2) program -> PROGRAM ID SEMICOLON vars empty main_function .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars empty main_function .)


state 20

    (4) var_list -> var_list type . id_list SEMICOLON
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 25

state 21

    (5) var_list -> type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID

    SEMICOLON       shift and go to state 26
    COMMA           shift and go to state 27


state 22

    (11) id_list -> ID .

    SEMICOLON       reduce using rule 11 (id_list -> ID .)
    COMMA           reduce using rule 11 (id_list -> ID .)


state 23

    (17) main_function -> MAIN LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 28


state 24

    (14) function -> FUNCTION type . ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE

    ID              shift and go to state 29


state 25

    (4) var_list -> var_list type id_list . SEMICOLON
    (10) id_list -> id_list . COMMA ID

    SEMICOLON       shift and go to state 30
    COMMA           shift and go to state 27


state 26

    (5) var_list -> type id_list SEMICOLON .

    INT             reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FLOAT           reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    BOOL            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    CHAR            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    MAIN            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FUNCTION        reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    RBRACE          reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    ID              reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    READ            reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    WRITE           reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    IF              reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    WHILE           reduce using rule 5 (var_list -> type id_list SEMICOLON .)
    FOR             reduce using rule 5 (var_list -> type id_list SEMICOLON .)


state 27

    (10) id_list -> id_list COMMA . ID

    ID              shift and go to state 31


state 28

    (17) main_function -> MAIN LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 32


state 29

    (14) function -> FUNCTION type ID . LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE

    LPAREN          shift and go to state 33


state 30

    (4) var_list -> var_list type id_list SEMICOLON .

    INT             reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FLOAT           reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    BOOL            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    CHAR            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    MAIN            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FUNCTION        reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    RBRACE          reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    ID              reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    READ            reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    IF              reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)
    FOR             reduce using rule 4 (var_list -> var_list type id_list SEMICOLON .)


state 31

    (10) id_list -> id_list COMMA ID .

    SEMICOLON       reduce using rule 10 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 10 (id_list -> id_list COMMA ID .)


state 32

    (17) main_function -> MAIN LPAREN RPAREN LBRACE . statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 34
    empty                          shift and go to state 35

state 33

    (14) function -> FUNCTION type ID LPAREN . param_list RPAREN SEMICOLON vars statement_list RBRACE
    (15) param_list -> . param_list COMMA type ID
    (16) param_list -> . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 36
    param_list                     shift and go to state 37

state 34

    (17) main_function -> MAIN LPAREN RPAREN LBRACE statement_list . RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 38
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 35

    (19) statement_list -> empty .

    RBRACE          reduce using rule 19 (statement_list -> empty .)
    ID              reduce using rule 19 (statement_list -> empty .)
    READ            reduce using rule 19 (statement_list -> empty .)
    WRITE           reduce using rule 19 (statement_list -> empty .)
    IF              reduce using rule 19 (statement_list -> empty .)
    WHILE           reduce using rule 19 (statement_list -> empty .)
    FOR             reduce using rule 19 (statement_list -> empty .)


state 36

    (16) param_list -> type . ID

    ID              shift and go to state 53


state 37

    (14) function -> FUNCTION type ID LPAREN param_list . RPAREN SEMICOLON vars statement_list RBRACE
    (15) param_list -> param_list . COMMA type ID

    RPAREN          shift and go to state 54
    COMMA           shift and go to state 55


state 38

    (17) main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .

    $end            reduce using rule 17 (main_function -> MAIN LPAREN RPAREN LBRACE statement_list RBRACE .)


state 39

    (18) statement_list -> statement_list statement .

    RBRACE          reduce using rule 18 (statement_list -> statement_list statement .)
    ID              reduce using rule 18 (statement_list -> statement_list statement .)
    READ            reduce using rule 18 (statement_list -> statement_list statement .)
    WRITE           reduce using rule 18 (statement_list -> statement_list statement .)
    IF              reduce using rule 18 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 18 (statement_list -> statement_list statement .)
    FOR             reduce using rule 18 (statement_list -> statement_list statement .)


state 40

    (20) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 56


state 41

    (21) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 57


state 42

    (22) statement -> read_statement . SEMICOLON

    SEMICOLON       shift and go to state 58


state 43

    (23) statement -> write_statement . SEMICOLON

    SEMICOLON       shift and go to state 59


state 44

    (24) statement -> if_statement .

    RBRACE          reduce using rule 24 (statement -> if_statement .)
    ID              reduce using rule 24 (statement -> if_statement .)
    READ            reduce using rule 24 (statement -> if_statement .)
    WRITE           reduce using rule 24 (statement -> if_statement .)
    IF              reduce using rule 24 (statement -> if_statement .)
    WHILE           reduce using rule 24 (statement -> if_statement .)
    FOR             reduce using rule 24 (statement -> if_statement .)


state 45

    (25) statement -> while_statement .

    RBRACE          reduce using rule 25 (statement -> while_statement .)
    ID              reduce using rule 25 (statement -> while_statement .)
    READ            reduce using rule 25 (statement -> while_statement .)
    WRITE           reduce using rule 25 (statement -> while_statement .)
    IF              reduce using rule 25 (statement -> while_statement .)
    WHILE           reduce using rule 25 (statement -> while_statement .)
    FOR             reduce using rule 25 (statement -> while_statement .)


state 46

    (26) statement -> for_statement .

    RBRACE          reduce using rule 26 (statement -> for_statement .)
    ID              reduce using rule 26 (statement -> for_statement .)
    READ            reduce using rule 26 (statement -> for_statement .)
    WRITE           reduce using rule 26 (statement -> for_statement .)
    IF              reduce using rule 26 (statement -> for_statement .)
    WHILE           reduce using rule 26 (statement -> for_statement .)
    FOR             reduce using rule 26 (statement -> for_statement .)


state 47

    (27) assignment -> ID . ASSIGN expression
    (28) assignment -> ID . LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> ID . LPAREN arg_list RPAREN

    ASSIGN          shift and go to state 60
    LBRACKET        shift and go to state 61
    LPAREN          shift and go to state 62


state 48

    (32) read_statement -> READ . id_list
    (10) id_list -> . id_list COMMA ID
    (11) id_list -> . ID

    ID              shift and go to state 22

    id_list                        shift and go to state 63

state 49

    (33) write_statement -> WRITE . LPAREN write_list RPAREN

    LPAREN          shift and go to state 64


state 50

    (37) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> IF . LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    LPAREN          shift and go to state 65


state 51

    (39) while_statement -> WHILE . LPAREN expression RPAREN DO LBRACE statement_list RBRACE

    LPAREN          shift and go to state 66


state 52

    (40) for_statement -> FOR . ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    ID              shift and go to state 67


state 53

    (16) param_list -> type ID .

    RPAREN          reduce using rule 16 (param_list -> type ID .)
    COMMA           reduce using rule 16 (param_list -> type ID .)


state 54

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN . SEMICOLON vars statement_list RBRACE

    SEMICOLON       shift and go to state 68


state 55

    (15) param_list -> param_list COMMA . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . BOOL
    (9) type -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 69

state 56

    (20) statement -> assignment SEMICOLON .

    RBRACE          reduce using rule 20 (statement -> assignment SEMICOLON .)
    ID              reduce using rule 20 (statement -> assignment SEMICOLON .)
    READ            reduce using rule 20 (statement -> assignment SEMICOLON .)
    WRITE           reduce using rule 20 (statement -> assignment SEMICOLON .)
    IF              reduce using rule 20 (statement -> assignment SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> assignment SEMICOLON .)
    FOR             reduce using rule 20 (statement -> assignment SEMICOLON .)


state 57

    (21) statement -> function_call SEMICOLON .

    RBRACE          reduce using rule 21 (statement -> function_call SEMICOLON .)
    ID              reduce using rule 21 (statement -> function_call SEMICOLON .)
    READ            reduce using rule 21 (statement -> function_call SEMICOLON .)
    WRITE           reduce using rule 21 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 21 (statement -> function_call SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> function_call SEMICOLON .)
    FOR             reduce using rule 21 (statement -> function_call SEMICOLON .)


state 58

    (22) statement -> read_statement SEMICOLON .

    RBRACE          reduce using rule 22 (statement -> read_statement SEMICOLON .)
    ID              reduce using rule 22 (statement -> read_statement SEMICOLON .)
    READ            reduce using rule 22 (statement -> read_statement SEMICOLON .)
    WRITE           reduce using rule 22 (statement -> read_statement SEMICOLON .)
    IF              reduce using rule 22 (statement -> read_statement SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> read_statement SEMICOLON .)
    FOR             reduce using rule 22 (statement -> read_statement SEMICOLON .)


state 59

    (23) statement -> write_statement SEMICOLON .

    RBRACE          reduce using rule 23 (statement -> write_statement SEMICOLON .)
    ID              reduce using rule 23 (statement -> write_statement SEMICOLON .)
    READ            reduce using rule 23 (statement -> write_statement SEMICOLON .)
    WRITE           reduce using rule 23 (statement -> write_statement SEMICOLON .)
    IF              reduce using rule 23 (statement -> write_statement SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> write_statement SEMICOLON .)
    FOR             reduce using rule 23 (statement -> write_statement SEMICOLON .)


state 60

    (27) assignment -> ID ASSIGN . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 71
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 61

    (28) assignment -> ID LBRACKET . expression RBRACKET ASSIGN expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 78
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 62

    (29) function_call -> ID LPAREN . arg_list RPAREN
    (30) arg_list -> . arg_list COMMA expression
    (31) arg_list -> . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    arg_list                       shift and go to state 79
    expression                     shift and go to state 80
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 63

    (32) read_statement -> READ id_list .
    (10) id_list -> id_list . COMMA ID

    SEMICOLON       reduce using rule 32 (read_statement -> READ id_list .)
    COMMA           shift and go to state 27


state 64

    (33) write_statement -> WRITE LPAREN . write_list RPAREN
    (34) write_list -> . write_list COMMA expression
    (35) write_list -> . STRING
    (36) write_list -> . ID COMMA expression

    STRING          shift and go to state 82
    ID              shift and go to state 83

    write_list                     shift and go to state 81

state 65

    (37) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> IF LPAREN . expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 84
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 66

    (39) while_statement -> WHILE LPAREN . expression RPAREN DO LBRACE statement_list RBRACE
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 85
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 67

    (40) for_statement -> FOR ID . LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    LBRACKET        shift and go to state 86


state 68

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON . vars statement_list RBRACE
    (3) vars -> . VARS var_list

    VARS            shift and go to state 6

    vars                           shift and go to state 87

state 69

    (15) param_list -> param_list COMMA type . ID

    ID              shift and go to state 88


state 70

    (57) factor -> ID .
    (58) factor -> ID . LBRACKET expression RBRACKET

    TIMES           reduce using rule 57 (factor -> ID .)
    DIVIDE          reduce using rule 57 (factor -> ID .)
    PLUS            reduce using rule 57 (factor -> ID .)
    MINUS           reduce using rule 57 (factor -> ID .)
    EQ              reduce using rule 57 (factor -> ID .)
    NE              reduce using rule 57 (factor -> ID .)
    LT              reduce using rule 57 (factor -> ID .)
    LE              reduce using rule 57 (factor -> ID .)
    GT              reduce using rule 57 (factor -> ID .)
    GE              reduce using rule 57 (factor -> ID .)
    AND             reduce using rule 57 (factor -> ID .)
    OR              reduce using rule 57 (factor -> ID .)
    SEMICOLON       reduce using rule 57 (factor -> ID .)
    RBRACKET        reduce using rule 57 (factor -> ID .)
    RPAREN          reduce using rule 57 (factor -> ID .)
    COMMA           reduce using rule 57 (factor -> ID .)
    TO              reduce using rule 57 (factor -> ID .)
    LBRACKET        shift and go to state 89


state 71

    (27) assignment -> ID ASSIGN expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    SEMICOLON       reduce using rule 27 (assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 72

    (51) expression -> term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 51 (expression -> term .)
    MINUS           reduce using rule 51 (expression -> term .)
    EQ              reduce using rule 51 (expression -> term .)
    NE              reduce using rule 51 (expression -> term .)
    LT              reduce using rule 51 (expression -> term .)
    LE              reduce using rule 51 (expression -> term .)
    GT              reduce using rule 51 (expression -> term .)
    GE              reduce using rule 51 (expression -> term .)
    AND             reduce using rule 51 (expression -> term .)
    OR              reduce using rule 51 (expression -> term .)
    SEMICOLON       reduce using rule 51 (expression -> term .)
    RBRACKET        reduce using rule 51 (expression -> term .)
    RPAREN          reduce using rule 51 (expression -> term .)
    COMMA           reduce using rule 51 (expression -> term .)
    TO              reduce using rule 51 (expression -> term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 73

    (52) expression -> STRING .

    PLUS            reduce using rule 52 (expression -> STRING .)
    MINUS           reduce using rule 52 (expression -> STRING .)
    EQ              reduce using rule 52 (expression -> STRING .)
    NE              reduce using rule 52 (expression -> STRING .)
    LT              reduce using rule 52 (expression -> STRING .)
    LE              reduce using rule 52 (expression -> STRING .)
    GT              reduce using rule 52 (expression -> STRING .)
    GE              reduce using rule 52 (expression -> STRING .)
    AND             reduce using rule 52 (expression -> STRING .)
    OR              reduce using rule 52 (expression -> STRING .)
    SEMICOLON       reduce using rule 52 (expression -> STRING .)
    RBRACKET        reduce using rule 52 (expression -> STRING .)
    RPAREN          reduce using rule 52 (expression -> STRING .)
    COMMA           reduce using rule 52 (expression -> STRING .)
    TO              reduce using rule 52 (expression -> STRING .)


state 74

    (55) term -> factor .

    TIMES           reduce using rule 55 (term -> factor .)
    DIVIDE          reduce using rule 55 (term -> factor .)
    PLUS            reduce using rule 55 (term -> factor .)
    MINUS           reduce using rule 55 (term -> factor .)
    EQ              reduce using rule 55 (term -> factor .)
    NE              reduce using rule 55 (term -> factor .)
    LT              reduce using rule 55 (term -> factor .)
    LE              reduce using rule 55 (term -> factor .)
    GT              reduce using rule 55 (term -> factor .)
    GE              reduce using rule 55 (term -> factor .)
    AND             reduce using rule 55 (term -> factor .)
    OR              reduce using rule 55 (term -> factor .)
    SEMICOLON       reduce using rule 55 (term -> factor .)
    RBRACKET        reduce using rule 55 (term -> factor .)
    RPAREN          reduce using rule 55 (term -> factor .)
    COMMA           reduce using rule 55 (term -> factor .)
    TO              reduce using rule 55 (term -> factor .)


state 75

    (56) factor -> LPAREN . expression RPAREN
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 102
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 76

    (59) factor -> INTEGER .

    TIMES           reduce using rule 59 (factor -> INTEGER .)
    DIVIDE          reduce using rule 59 (factor -> INTEGER .)
    PLUS            reduce using rule 59 (factor -> INTEGER .)
    MINUS           reduce using rule 59 (factor -> INTEGER .)
    EQ              reduce using rule 59 (factor -> INTEGER .)
    NE              reduce using rule 59 (factor -> INTEGER .)
    LT              reduce using rule 59 (factor -> INTEGER .)
    LE              reduce using rule 59 (factor -> INTEGER .)
    GT              reduce using rule 59 (factor -> INTEGER .)
    GE              reduce using rule 59 (factor -> INTEGER .)
    AND             reduce using rule 59 (factor -> INTEGER .)
    OR              reduce using rule 59 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 59 (factor -> INTEGER .)
    RBRACKET        reduce using rule 59 (factor -> INTEGER .)
    RPAREN          reduce using rule 59 (factor -> INTEGER .)
    COMMA           reduce using rule 59 (factor -> INTEGER .)
    TO              reduce using rule 59 (factor -> INTEGER .)


state 77

    (60) factor -> FLOATING_POINT .

    TIMES           reduce using rule 60 (factor -> FLOATING_POINT .)
    DIVIDE          reduce using rule 60 (factor -> FLOATING_POINT .)
    PLUS            reduce using rule 60 (factor -> FLOATING_POINT .)
    MINUS           reduce using rule 60 (factor -> FLOATING_POINT .)
    EQ              reduce using rule 60 (factor -> FLOATING_POINT .)
    NE              reduce using rule 60 (factor -> FLOATING_POINT .)
    LT              reduce using rule 60 (factor -> FLOATING_POINT .)
    LE              reduce using rule 60 (factor -> FLOATING_POINT .)
    GT              reduce using rule 60 (factor -> FLOATING_POINT .)
    GE              reduce using rule 60 (factor -> FLOATING_POINT .)
    AND             reduce using rule 60 (factor -> FLOATING_POINT .)
    OR              reduce using rule 60 (factor -> FLOATING_POINT .)
    SEMICOLON       reduce using rule 60 (factor -> FLOATING_POINT .)
    RBRACKET        reduce using rule 60 (factor -> FLOATING_POINT .)
    RPAREN          reduce using rule 60 (factor -> FLOATING_POINT .)
    COMMA           reduce using rule 60 (factor -> FLOATING_POINT .)
    TO              reduce using rule 60 (factor -> FLOATING_POINT .)


state 78

    (28) assignment -> ID LBRACKET expression . RBRACKET ASSIGN expression
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RBRACKET        shift and go to state 103
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 79

    (29) function_call -> ID LPAREN arg_list . RPAREN
    (30) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 80

    (31) arg_list -> expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          reduce using rule 31 (arg_list -> expression .)
    COMMA           reduce using rule 31 (arg_list -> expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 81

    (33) write_statement -> WRITE LPAREN write_list . RPAREN
    (34) write_list -> write_list . COMMA expression

    RPAREN          shift and go to state 106
    COMMA           shift and go to state 107


state 82

    (35) write_list -> STRING .

    RPAREN          reduce using rule 35 (write_list -> STRING .)
    COMMA           reduce using rule 35 (write_list -> STRING .)


state 83

    (36) write_list -> ID . COMMA expression

    COMMA           shift and go to state 108


state 84

    (37) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> IF LPAREN expression . RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 85

    (39) while_statement -> WHILE LPAREN expression . RPAREN DO LBRACE statement_list RBRACE
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 86

    (40) for_statement -> FOR ID LBRACKET . expression TO expression RBRACKET DO LBRACE statement_list RBRACE
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 111
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 87

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars . statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 112
    empty                          shift and go to state 35

state 88

    (15) param_list -> param_list COMMA type ID .

    RPAREN          reduce using rule 15 (param_list -> param_list COMMA type ID .)
    COMMA           reduce using rule 15 (param_list -> param_list COMMA type ID .)


state 89

    (58) factor -> ID LBRACKET . expression RBRACKET
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 113
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 90

    (41) expression -> expression PLUS . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 114
    factor                         shift and go to state 74

state 91

    (42) expression -> expression MINUS . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 115
    factor                         shift and go to state 74

state 92

    (43) expression -> expression EQ . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 116
    factor                         shift and go to state 74

state 93

    (44) expression -> expression NE . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 117
    factor                         shift and go to state 74

state 94

    (45) expression -> expression LT . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 118
    factor                         shift and go to state 74

state 95

    (46) expression -> expression LE . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 119
    factor                         shift and go to state 74

state 96

    (47) expression -> expression GT . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 120
    factor                         shift and go to state 74

state 97

    (48) expression -> expression GE . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 121
    factor                         shift and go to state 74

state 98

    (49) expression -> expression AND . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 122
    factor                         shift and go to state 74

state 99

    (50) expression -> expression OR . term
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    term                           shift and go to state 123
    factor                         shift and go to state 74

state 100

    (53) term -> term TIMES . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    factor                         shift and go to state 124

state 101

    (54) term -> term DIVIDE . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    factor                         shift and go to state 125

state 102

    (56) factor -> LPAREN expression . RPAREN
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 103

    (28) assignment -> ID LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 127


state 104

    (29) function_call -> ID LPAREN arg_list RPAREN .

    SEMICOLON       reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)


state 105

    (30) arg_list -> arg_list COMMA . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 128
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 106

    (33) write_statement -> WRITE LPAREN write_list RPAREN .

    SEMICOLON       reduce using rule 33 (write_statement -> WRITE LPAREN write_list RPAREN .)


state 107

    (34) write_list -> write_list COMMA . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 129
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 108

    (36) write_list -> ID COMMA . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 130
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 109

    (37) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE
    (38) if_statement -> IF LPAREN expression RPAREN . THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    THEN            shift and go to state 131


state 110

    (39) while_statement -> WHILE LPAREN expression RPAREN . DO LBRACE statement_list RBRACE

    DO              shift and go to state 132


state 111

    (40) for_statement -> FOR ID LBRACKET expression . TO expression RBRACKET DO LBRACE statement_list RBRACE
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    TO              shift and go to state 133
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 112

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list . RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 134
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 113

    (58) factor -> ID LBRACKET expression . RBRACKET
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RBRACKET        shift and go to state 135
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 114

    (41) expression -> expression PLUS term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 41 (expression -> expression PLUS term .)
    MINUS           reduce using rule 41 (expression -> expression PLUS term .)
    EQ              reduce using rule 41 (expression -> expression PLUS term .)
    NE              reduce using rule 41 (expression -> expression PLUS term .)
    LT              reduce using rule 41 (expression -> expression PLUS term .)
    LE              reduce using rule 41 (expression -> expression PLUS term .)
    GT              reduce using rule 41 (expression -> expression PLUS term .)
    GE              reduce using rule 41 (expression -> expression PLUS term .)
    AND             reduce using rule 41 (expression -> expression PLUS term .)
    OR              reduce using rule 41 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 41 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 41 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 41 (expression -> expression PLUS term .)
    COMMA           reduce using rule 41 (expression -> expression PLUS term .)
    TO              reduce using rule 41 (expression -> expression PLUS term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 115

    (42) expression -> expression MINUS term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 42 (expression -> expression MINUS term .)
    MINUS           reduce using rule 42 (expression -> expression MINUS term .)
    EQ              reduce using rule 42 (expression -> expression MINUS term .)
    NE              reduce using rule 42 (expression -> expression MINUS term .)
    LT              reduce using rule 42 (expression -> expression MINUS term .)
    LE              reduce using rule 42 (expression -> expression MINUS term .)
    GT              reduce using rule 42 (expression -> expression MINUS term .)
    GE              reduce using rule 42 (expression -> expression MINUS term .)
    AND             reduce using rule 42 (expression -> expression MINUS term .)
    OR              reduce using rule 42 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 42 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 42 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 42 (expression -> expression MINUS term .)
    COMMA           reduce using rule 42 (expression -> expression MINUS term .)
    TO              reduce using rule 42 (expression -> expression MINUS term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 116

    (43) expression -> expression EQ term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 43 (expression -> expression EQ term .)
    MINUS           reduce using rule 43 (expression -> expression EQ term .)
    EQ              reduce using rule 43 (expression -> expression EQ term .)
    NE              reduce using rule 43 (expression -> expression EQ term .)
    LT              reduce using rule 43 (expression -> expression EQ term .)
    LE              reduce using rule 43 (expression -> expression EQ term .)
    GT              reduce using rule 43 (expression -> expression EQ term .)
    GE              reduce using rule 43 (expression -> expression EQ term .)
    AND             reduce using rule 43 (expression -> expression EQ term .)
    OR              reduce using rule 43 (expression -> expression EQ term .)
    SEMICOLON       reduce using rule 43 (expression -> expression EQ term .)
    RBRACKET        reduce using rule 43 (expression -> expression EQ term .)
    RPAREN          reduce using rule 43 (expression -> expression EQ term .)
    COMMA           reduce using rule 43 (expression -> expression EQ term .)
    TO              reduce using rule 43 (expression -> expression EQ term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 117

    (44) expression -> expression NE term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 44 (expression -> expression NE term .)
    MINUS           reduce using rule 44 (expression -> expression NE term .)
    EQ              reduce using rule 44 (expression -> expression NE term .)
    NE              reduce using rule 44 (expression -> expression NE term .)
    LT              reduce using rule 44 (expression -> expression NE term .)
    LE              reduce using rule 44 (expression -> expression NE term .)
    GT              reduce using rule 44 (expression -> expression NE term .)
    GE              reduce using rule 44 (expression -> expression NE term .)
    AND             reduce using rule 44 (expression -> expression NE term .)
    OR              reduce using rule 44 (expression -> expression NE term .)
    SEMICOLON       reduce using rule 44 (expression -> expression NE term .)
    RBRACKET        reduce using rule 44 (expression -> expression NE term .)
    RPAREN          reduce using rule 44 (expression -> expression NE term .)
    COMMA           reduce using rule 44 (expression -> expression NE term .)
    TO              reduce using rule 44 (expression -> expression NE term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 118

    (45) expression -> expression LT term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 45 (expression -> expression LT term .)
    MINUS           reduce using rule 45 (expression -> expression LT term .)
    EQ              reduce using rule 45 (expression -> expression LT term .)
    NE              reduce using rule 45 (expression -> expression LT term .)
    LT              reduce using rule 45 (expression -> expression LT term .)
    LE              reduce using rule 45 (expression -> expression LT term .)
    GT              reduce using rule 45 (expression -> expression LT term .)
    GE              reduce using rule 45 (expression -> expression LT term .)
    AND             reduce using rule 45 (expression -> expression LT term .)
    OR              reduce using rule 45 (expression -> expression LT term .)
    SEMICOLON       reduce using rule 45 (expression -> expression LT term .)
    RBRACKET        reduce using rule 45 (expression -> expression LT term .)
    RPAREN          reduce using rule 45 (expression -> expression LT term .)
    COMMA           reduce using rule 45 (expression -> expression LT term .)
    TO              reduce using rule 45 (expression -> expression LT term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 119

    (46) expression -> expression LE term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 46 (expression -> expression LE term .)
    MINUS           reduce using rule 46 (expression -> expression LE term .)
    EQ              reduce using rule 46 (expression -> expression LE term .)
    NE              reduce using rule 46 (expression -> expression LE term .)
    LT              reduce using rule 46 (expression -> expression LE term .)
    LE              reduce using rule 46 (expression -> expression LE term .)
    GT              reduce using rule 46 (expression -> expression LE term .)
    GE              reduce using rule 46 (expression -> expression LE term .)
    AND             reduce using rule 46 (expression -> expression LE term .)
    OR              reduce using rule 46 (expression -> expression LE term .)
    SEMICOLON       reduce using rule 46 (expression -> expression LE term .)
    RBRACKET        reduce using rule 46 (expression -> expression LE term .)
    RPAREN          reduce using rule 46 (expression -> expression LE term .)
    COMMA           reduce using rule 46 (expression -> expression LE term .)
    TO              reduce using rule 46 (expression -> expression LE term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 120

    (47) expression -> expression GT term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 47 (expression -> expression GT term .)
    MINUS           reduce using rule 47 (expression -> expression GT term .)
    EQ              reduce using rule 47 (expression -> expression GT term .)
    NE              reduce using rule 47 (expression -> expression GT term .)
    LT              reduce using rule 47 (expression -> expression GT term .)
    LE              reduce using rule 47 (expression -> expression GT term .)
    GT              reduce using rule 47 (expression -> expression GT term .)
    GE              reduce using rule 47 (expression -> expression GT term .)
    AND             reduce using rule 47 (expression -> expression GT term .)
    OR              reduce using rule 47 (expression -> expression GT term .)
    SEMICOLON       reduce using rule 47 (expression -> expression GT term .)
    RBRACKET        reduce using rule 47 (expression -> expression GT term .)
    RPAREN          reduce using rule 47 (expression -> expression GT term .)
    COMMA           reduce using rule 47 (expression -> expression GT term .)
    TO              reduce using rule 47 (expression -> expression GT term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 121

    (48) expression -> expression GE term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 48 (expression -> expression GE term .)
    MINUS           reduce using rule 48 (expression -> expression GE term .)
    EQ              reduce using rule 48 (expression -> expression GE term .)
    NE              reduce using rule 48 (expression -> expression GE term .)
    LT              reduce using rule 48 (expression -> expression GE term .)
    LE              reduce using rule 48 (expression -> expression GE term .)
    GT              reduce using rule 48 (expression -> expression GE term .)
    GE              reduce using rule 48 (expression -> expression GE term .)
    AND             reduce using rule 48 (expression -> expression GE term .)
    OR              reduce using rule 48 (expression -> expression GE term .)
    SEMICOLON       reduce using rule 48 (expression -> expression GE term .)
    RBRACKET        reduce using rule 48 (expression -> expression GE term .)
    RPAREN          reduce using rule 48 (expression -> expression GE term .)
    COMMA           reduce using rule 48 (expression -> expression GE term .)
    TO              reduce using rule 48 (expression -> expression GE term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 122

    (49) expression -> expression AND term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 49 (expression -> expression AND term .)
    MINUS           reduce using rule 49 (expression -> expression AND term .)
    EQ              reduce using rule 49 (expression -> expression AND term .)
    NE              reduce using rule 49 (expression -> expression AND term .)
    LT              reduce using rule 49 (expression -> expression AND term .)
    LE              reduce using rule 49 (expression -> expression AND term .)
    GT              reduce using rule 49 (expression -> expression AND term .)
    GE              reduce using rule 49 (expression -> expression AND term .)
    AND             reduce using rule 49 (expression -> expression AND term .)
    OR              reduce using rule 49 (expression -> expression AND term .)
    SEMICOLON       reduce using rule 49 (expression -> expression AND term .)
    RBRACKET        reduce using rule 49 (expression -> expression AND term .)
    RPAREN          reduce using rule 49 (expression -> expression AND term .)
    COMMA           reduce using rule 49 (expression -> expression AND term .)
    TO              reduce using rule 49 (expression -> expression AND term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 123

    (50) expression -> expression OR term .
    (53) term -> term . TIMES factor
    (54) term -> term . DIVIDE factor

    PLUS            reduce using rule 50 (expression -> expression OR term .)
    MINUS           reduce using rule 50 (expression -> expression OR term .)
    EQ              reduce using rule 50 (expression -> expression OR term .)
    NE              reduce using rule 50 (expression -> expression OR term .)
    LT              reduce using rule 50 (expression -> expression OR term .)
    LE              reduce using rule 50 (expression -> expression OR term .)
    GT              reduce using rule 50 (expression -> expression OR term .)
    GE              reduce using rule 50 (expression -> expression OR term .)
    AND             reduce using rule 50 (expression -> expression OR term .)
    OR              reduce using rule 50 (expression -> expression OR term .)
    SEMICOLON       reduce using rule 50 (expression -> expression OR term .)
    RBRACKET        reduce using rule 50 (expression -> expression OR term .)
    RPAREN          reduce using rule 50 (expression -> expression OR term .)
    COMMA           reduce using rule 50 (expression -> expression OR term .)
    TO              reduce using rule 50 (expression -> expression OR term .)
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101


state 124

    (53) term -> term TIMES factor .

    TIMES           reduce using rule 53 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 53 (term -> term TIMES factor .)
    PLUS            reduce using rule 53 (term -> term TIMES factor .)
    MINUS           reduce using rule 53 (term -> term TIMES factor .)
    EQ              reduce using rule 53 (term -> term TIMES factor .)
    NE              reduce using rule 53 (term -> term TIMES factor .)
    LT              reduce using rule 53 (term -> term TIMES factor .)
    LE              reduce using rule 53 (term -> term TIMES factor .)
    GT              reduce using rule 53 (term -> term TIMES factor .)
    GE              reduce using rule 53 (term -> term TIMES factor .)
    AND             reduce using rule 53 (term -> term TIMES factor .)
    OR              reduce using rule 53 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 53 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 53 (term -> term TIMES factor .)
    RPAREN          reduce using rule 53 (term -> term TIMES factor .)
    COMMA           reduce using rule 53 (term -> term TIMES factor .)
    TO              reduce using rule 53 (term -> term TIMES factor .)


state 125

    (54) term -> term DIVIDE factor .

    TIMES           reduce using rule 54 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 54 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 54 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 54 (term -> term DIVIDE factor .)
    EQ              reduce using rule 54 (term -> term DIVIDE factor .)
    NE              reduce using rule 54 (term -> term DIVIDE factor .)
    LT              reduce using rule 54 (term -> term DIVIDE factor .)
    LE              reduce using rule 54 (term -> term DIVIDE factor .)
    GT              reduce using rule 54 (term -> term DIVIDE factor .)
    GE              reduce using rule 54 (term -> term DIVIDE factor .)
    AND             reduce using rule 54 (term -> term DIVIDE factor .)
    OR              reduce using rule 54 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 54 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 54 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 54 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 54 (term -> term DIVIDE factor .)
    TO              reduce using rule 54 (term -> term DIVIDE factor .)


state 126

    (56) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 56 (factor -> LPAREN expression RPAREN .)


state 127

    (28) assignment -> ID LBRACKET expression RBRACKET ASSIGN . expression
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 136
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 128

    (30) arg_list -> arg_list COMMA expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          reduce using rule 30 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 30 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 129

    (34) write_list -> write_list COMMA expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          reduce using rule 34 (write_list -> write_list COMMA expression .)
    COMMA           reduce using rule 34 (write_list -> write_list COMMA expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 130

    (36) write_list -> ID COMMA expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RPAREN          reduce using rule 36 (write_list -> ID COMMA expression .)
    COMMA           reduce using rule 36 (write_list -> ID COMMA expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 131

    (37) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE
    (38) if_statement -> IF LPAREN expression RPAREN THEN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    LBRACE          shift and go to state 137


state 132

    (39) while_statement -> WHILE LPAREN expression RPAREN DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138


state 133

    (40) for_statement -> FOR ID LBRACKET expression TO . expression RBRACKET DO LBRACE statement_list RBRACE
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (43) expression -> . expression EQ term
    (44) expression -> . expression NE term
    (45) expression -> . expression LT term
    (46) expression -> . expression LE term
    (47) expression -> . expression GT term
    (48) expression -> . expression GE term
    (49) expression -> . expression AND term
    (50) expression -> . expression OR term
    (51) expression -> . term
    (52) expression -> . STRING
    (53) term -> . term TIMES factor
    (54) term -> . term DIVIDE factor
    (55) term -> . factor
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . ID
    (58) factor -> . ID LBRACKET expression RBRACKET
    (59) factor -> . INTEGER
    (60) factor -> . FLOATING_POINT

    STRING          shift and go to state 73
    LPAREN          shift and go to state 75
    ID              shift and go to state 70
    INTEGER         shift and go to state 76
    FLOATING_POINT  shift and go to state 77

    expression                     shift and go to state 139
    term                           shift and go to state 72
    factor                         shift and go to state 74

state 134

    (14) function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE .

    MAIN            reduce using rule 14 (function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE .)
    FUNCTION        reduce using rule 14 (function -> FUNCTION type ID LPAREN param_list RPAREN SEMICOLON vars statement_list RBRACE .)


state 135

    (58) factor -> ID LBRACKET expression RBRACKET .

    TIMES           reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 58 (factor -> ID LBRACKET expression RBRACKET .)


state 136

    (28) assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    SEMICOLON       reduce using rule 28 (assignment -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 137

    (37) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE
    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 140
    empty                          shift and go to state 35

state 138

    (39) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE . statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 141
    empty                          shift and go to state 35

state 139

    (40) for_statement -> FOR ID LBRACKET expression TO expression . RBRACKET DO LBRACE statement_list RBRACE
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (43) expression -> expression . EQ term
    (44) expression -> expression . NE term
    (45) expression -> expression . LT term
    (46) expression -> expression . LE term
    (47) expression -> expression . GT term
    (48) expression -> expression . GE term
    (49) expression -> expression . AND term
    (50) expression -> expression . OR term

    RBRACKET        shift and go to state 142
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    EQ              shift and go to state 92
    NE              shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    GT              shift and go to state 96
    GE              shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99


state 140

    (37) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE
    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 143
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 141

    (39) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list . RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 144
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 142

    (40) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET . DO LBRACE statement_list RBRACE

    DO              shift and go to state 145


state 143

    (37) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .
    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    RBRACE          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ID              reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    READ            reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    IF              reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 146


state 144

    (39) while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (while_statement -> WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE .)


state 145

    (40) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 147


state 146

    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 148


state 147

    (40) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE . statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 149
    empty                          shift and go to state 35

state 148

    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (18) statement_list -> . statement_list statement
    (19) statement_list -> . empty
    (61) empty -> .

    RBRACE          reduce using rule 61 (empty -> .)
    ID              reduce using rule 61 (empty -> .)
    READ            reduce using rule 61 (empty -> .)
    WRITE           reduce using rule 61 (empty -> .)
    IF              reduce using rule 61 (empty -> .)
    WHILE           reduce using rule 61 (empty -> .)
    FOR             reduce using rule 61 (empty -> .)

    statement_list                 shift and go to state 150
    empty                          shift and go to state 35

state 149

    (40) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list . RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 151
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 150

    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (18) statement_list -> statement_list . statement
    (20) statement -> . assignment SEMICOLON
    (21) statement -> . function_call SEMICOLON
    (22) statement -> . read_statement SEMICOLON
    (23) statement -> . write_statement SEMICOLON
    (24) statement -> . if_statement
    (25) statement -> . while_statement
    (26) statement -> . for_statement
    (27) assignment -> . ID ASSIGN expression
    (28) assignment -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (32) read_statement -> . READ id_list
    (33) write_statement -> . WRITE LPAREN write_list RPAREN
    (37) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE
    (38) if_statement -> . IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (39) while_statement -> . WHILE LPAREN expression RPAREN DO LBRACE statement_list RBRACE
    (40) for_statement -> . FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE

    RBRACE          shift and go to state 152
    ID              shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51
    FOR             shift and go to state 52

    statement                      shift and go to state 39
    assignment                     shift and go to state 40
    function_call                  shift and go to state 41
    read_statement                 shift and go to state 42
    write_statement                shift and go to state 43
    if_statement                   shift and go to state 44
    while_statement                shift and go to state 45
    for_statement                  shift and go to state 46

state 151

    (40) for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    ID              reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    READ            reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    IF              reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)
    FOR             reduce using rule 40 (for_statement -> FOR ID LBRACKET expression TO expression RBRACKET DO LBRACE statement_list RBRACE .)


state 152

    (38) if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    READ            reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN THEN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 8 resolved as shift
