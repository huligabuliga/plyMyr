run started
pc =  1
goto node detected
pc =  2
label node detected
pc =  3
pc =  4
equal node detected
arg1:  40
arg2:  
result:  y
Assigning value to global variable
Value of  y  is now  40
equal node end
pc =  5
add node detected
perform_operation ended
+ node detected
new temporal variable detected
Declared temp variable:  Ti1
get_value statrted
recieving, getting value of  x
getting arg1 value:  500
get_value statrted
recieving, getting value of  y
getting arg2 value:  40
arg1_value 500 arg2_value: 40 sum is 540
pc =  6
equal node detected
arg1:  Ti1
arg2:  
result:  c
Assigning value to global variable
Value of  c  is now  540
equal node end
pc =  7
param node start
memory_map:  [500, 40, 540, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 540]
stack:  []
result:  "sum is"
arg1:  
arg2:  
global_vars:  {'x': 0, 'y': 1, 'c': 2}
local_vars:  [{}]
temp_vars:  {'Ti1': 50} {} {}
stack:  ['"sum is"']
param node end
pc =  8
param node start
memory_map:  [500, 40, 540, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 540]
stack:  ['"sum is"']
result:  c
arg1:  
arg2:  
global_vars:  {'x': 0, 'y': 1, 'c': 2}
local_vars:  [{}]
temp_vars:  {'Ti1': 50} {} {}
stack:  ['"sum is"', 540]
param node end
pc =  9
write node detected
pc =  10
EndProg node detected
