run started
pc =  1
goto node detected
pc =  29
label node detected
pc =  30
equal node detected
arg1:  3
arg2:  
result:  num
Assigning value to global variable
Value of  num  is now  3
equal node end
pc =  31
ERA node detected
memory map before ERA:  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
memory_map:  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
memory_map after era:  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
local_vars:  [{}]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
checking var_name:  n
adding var_name:  n
checking var:  result
adding var:  result
pc =  32
param node start
memory_map:  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
stack:  []
result:  par1
arg1:  num
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 0, 'result': 1}]
temp_vars:  {} {} {}
arg 1 found in global_vars num
stack:  [3]
memory_map after param:  [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
param node end
pc =  33
gosub node start
memory_map in gosub: [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
memory_map in after allocating local variable: [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Assigning 3 value to param n
memory_map in after setting value: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Value of n is now 3
call stack:  [33]
memory_map in after appending result: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
function_name_stack:  ['factorial']
memory_map after allocating temp: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
memory_map after gosub: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
memory_map after pass: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
gosub node end
pc =  2
label node detected
pc =  3
less than or equal node detected
perform_comparison started
get_value started
memory_map in get value: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 2
get_value started
memory_map in get value: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
receiving, getting value of  0
<= node detected
pc =  4
gotoF node detected
pc =  13
label node detected
pc =  14
param node start
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
stack:  [0]
result:  "factorial:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 0} {} {'Tb1': 50}
stack:  [0, '"factorial:"']
memory_map after param:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
param node end
pc =  15
param node start
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
stack:  [0, '"factorial:"']
result:  n
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 0} {} {'Tb1': 50}
stack:  [0, '"factorial:"', 'n']
memory_map after param:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
param node end
pc =  16
write node detected
pc =  17
param node start
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
stack:  [0]
result:  "result so far:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 0} {} {'Tb1': 50}
stack:  [0, '"result so far:"']
memory_map after param:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
param node end
pc =  18
param node start
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
stack:  [0, '"result so far:"']
result:  result
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 0} {} {'Tb1': 50}
stack:  [0, '"result so far:"', 0]
memory_map after param:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
param node end
pc =  19
write node detected
pc =  20
ERA node detected
memory map before ERA:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
memory_map after era:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False]
local_vars:  [{'n': 2, 'result': 1}, {'n': 2, 'result': 1}]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
checking var_name:  n
checking var:  result
pc =  21
subtract node detected
perform_operation ended
- node detected
new temporal variable detected
Declared temp variable:  Ti1
get_value started
memory_map in get value: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 2
getting arg1 value:  3
get_value started
memory_map in get value: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
receiving, getting value of  1
getting arg2 value:  1
memory_map in perform_operation get  +: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
arg1_value 3 arg2_value: 1 difference is 2
pc =  22
param node start
memory_map:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
stack:  [0]
result:  par1
arg1:  Ti1
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 2, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 0, 'Ti1': 51} {} {'Tb1': 50}
found in temp_vars
stack:  [0, 2]
memory_map after param:  [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
param node end
pc =  23
gosub node start
memory_map in gosub: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
memory_map in after allocating local variable: [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
Assigning 2 value to param n
memory_map in after setting value: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
Value of n is now 2
call stack:  [33, 23]
memory_map in after appending result: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
function_name_stack:  ['factorial', 'factorial']
memory_map after allocating temp: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
memory_map after gosub: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
memory_map after pass: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
gosub node end
pc =  2
label node detected
pc =  3
less than or equal node detected
perform_comparison started
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 4
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
receiving, getting value of  0
<= node detected
pc =  4
gotoF node detected
pc =  13
label node detected
pc =  14
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
stack:  [0, 2]
result:  "factorial:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, '"factorial:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
param node end
pc =  15
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
stack:  [0, 2, '"factorial:"']
result:  n
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, '"factorial:"', 'n']
memory_map after param:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
param node end
pc =  16
write node detected
pc =  17
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
stack:  [0, 2]
result:  "result so far:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, '"result so far:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
param node end
pc =  18
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
stack:  [0, 2, '"result so far:"']
result:  result
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, '"result so far:"', 0]
memory_map after param:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
param node end
pc =  19
write node detected
pc =  20
ERA node detected
memory map before ERA:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
memory_map after era:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 4, 'result': 1}]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
checking var_name:  n
checking var:  result
pc =  21
subtract node detected
perform_operation ended
- node detected
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 4
getting arg1 value:  2
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 2]
receiving, getting value of  1
getting arg2 value:  1
memory_map in perform_operation get  +: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
arg1_value 2 arg2_value: 1 difference is 1
pc =  22
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
stack:  [0, 2]
result:  par1
arg1:  Ti1
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 4, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
found in temp_vars
stack:  [0, 2, 1]
memory_map after param:  [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
param node end
pc =  23
gosub node start
memory_map in gosub: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
memory_map in after allocating local variable: [3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
Assigning 1 value to param n
memory_map in after setting value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
Value of n is now 1
call stack:  [33, 23, 23]
memory_map in after appending result: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
function_name_stack:  ['factorial', 'factorial', 'factorial']
memory_map after allocating temp: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
memory_map after gosub: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
memory_map after pass: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
gosub node end
pc =  2
label node detected
pc =  3
less than or equal node detected
perform_comparison started
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 6
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
receiving, getting value of  0
<= node detected
pc =  4
gotoF node detected
pc =  13
label node detected
pc =  14
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
stack:  [0, 2, 2]
result:  "factorial:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, '"factorial:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
param node end
pc =  15
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
stack:  [0, 2, 2, '"factorial:"']
result:  n
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, '"factorial:"', 'n']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
param node end
pc =  16
write node detected
pc =  17
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
stack:  [0, 2, 2]
result:  "result so far:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, '"result so far:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
param node end
pc =  18
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
stack:  [0, 2, 2, '"result so far:"']
result:  result
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, '"result so far:"', 0]
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
param node end
pc =  19
write node detected
pc =  20
ERA node detected
memory map before ERA:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
memory_map after era:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 6, 'result': 1}]
function info {'return_type': 'int', 'param_types': ['int'], 'params': ['n'], 'vars': [('int', ['result'])]}
checking var_name:  n
checking var:  result
pc =  21
subtract node detected
perform_operation ended
- node detected
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 6
getting arg1 value:  1
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 1]
receiving, getting value of  1
getting arg2 value:  1
memory_map in perform_operation get  +: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
arg1_value 1 arg2_value: 1 difference is 0
pc =  22
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
stack:  [0, 2, 2]
result:  par1
arg1:  Ti1
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 6, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
found in temp_vars
stack:  [0, 2, 2, 0]
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
param node end
pc =  23
gosub node start
memory_map in gosub: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
memory_map in after allocating local variable: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
Assigning 0 value to param n
memory_map in after setting value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
Value of n is now 0
call stack:  [33, 23, 23, 23]
memory_map in after appending result: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
function_name_stack:  ['factorial', 'factorial', 'factorial', 'factorial']
memory_map after allocating temp: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
memory_map after gosub: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
memory_map after pass: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
gosub node end
pc =  2
label node detected
pc =  3
less than or equal node detected
perform_comparison started
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 8
get_value started
memory_map in get value: [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, False, 0]
receiving, getting value of  0
<= node detected
pc =  4
gotoF node detected
pc =  5
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
stack:  [0, 2, 2, 2]
result:  "factorial:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 8, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"factorial:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
param node end
pc =  6
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
stack:  [0, 2, 2, 2, '"factorial:"']
result:  n
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 8, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"factorial:"', 'n']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
param node end
pc =  7
write node detected
pc =  8
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
stack:  [0, 2, 2, 2]
result:  "result so far:"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 8, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"result so far:"']
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
param node end
pc =  9
param node start
memory_map:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
stack:  [0, 2, 2, 2, '"result so far:"']
result:  result
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1}
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 8, 'result': 1}]
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"result so far:"', 0]
memory_map after param:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
param node end
pc =  10
write node detected
pc =  11
return node detected
memory_map in return before exit:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}, {'n': 8, 'result': 1}]
global_vars:  {'num': 0, 'result': 1}
global_vars bein dececlared during return:  {'num': 0, 'result': 1}
return_value:  1
memory map after exit:  [3, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0]
stack:  [0, 2, 2, 2, 1]
pc =  12
goto node detected
pc =  27
label node detected
pc =  28
EndFunc node detected
call stack:  [33, 23, 23, 23]
going to return address:  23
pc:  23
code:  ('=', 'factorial', '', 'Ti2')
function_name:  factorial
assining value to global variable:  1
global_vars:  {'num': 0, 'result': 1, 'factorial': 2}
pc =  24
equal node detected
arg1:  factorial
arg2:  
result:  Ti2
Declaring temp variable:  Ti2
Assigning value to a temporal variable
Value of  Ti2  is now  1
equal node end
pc =  25
multiply node detected
perform_operation ended
* node detected
new temporal variable detected
Declared temp variable:  Ti3
get_value started
memory_map in get value: [3, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 0]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 6
getting arg1 value:  1
get_value started
memory_map in get value: [3, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 0]
receiving, getting value of  Ti2
getting arg2 value:  1
arg1_value 1 arg2_value: 1 product is 1
pc =  26
return node detected
memory_map in return before exit:  [3, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 1]
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}, {'n': 6, 'result': 1}]
global_vars:  {'num': 0, 'result': 1, 'factorial': 2}
temp return_value:  1
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51, 'Ti2': 52, 'Ti3': 53} {} {'Tb1': 50}
return_value:  1
memory map after exit:  [3, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 1]
stack:  [0, 2, 2, 2, 1]
pc =  27
label node detected
pc =  28
EndFunc node detected
call stack:  [33, 23, 23]
going to return address:  23
pc:  23
code:  ('=', 'factorial', '', 'Ti2')
function_name:  factorial
assining value to global variable:  1
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
pc =  24
equal node detected
arg1:  factorial
arg2:  
result:  Ti2
Assigning value to a temporal variable
Value of  Ti2  is now  1
equal node end
pc =  25
multiply node detected
perform_operation ended
* node detected
get_value started
memory_map in get value: [3, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 1]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 4
getting arg1 value:  2
get_value started
memory_map in get value: [3, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 1]
receiving, getting value of  Ti2
getting arg2 value:  1
arg1_value 2 arg2_value: 1 product is 2
pc =  26
return node detected
memory_map in return before exit:  [3, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 2]
local_vars:  [{'n': 2, 'result': 1}, {'n': 4, 'result': 1}]
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
temp return_value:  2
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51, 'Ti2': 52, 'Ti3': 53} {} {'Tb1': 50}
return_value:  2
memory map after exit:  [3, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 1, 2]
stack:  [0, 2, 2, 2, 2]
pc =  27
label node detected
pc =  28
EndFunc node detected
call stack:  [33, 23]
going to return address:  23
pc:  23
code:  ('=', 'factorial', '', 'Ti2')
function_name:  factorial
assining value to global variable:  2
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
pc =  24
equal node detected
arg1:  factorial
arg2:  
result:  Ti2
Assigning value to a temporal variable
Value of  Ti2  is now  2
equal node end
pc =  25
multiply node detected
perform_operation ended
* node detected
get_value started
memory_map in get value: [3, 0, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2]
receiving, getting value of  n
get_value: found in local_vars
get_Value: address 2
getting arg1 value:  1
get_value started
memory_map in get value: [3, 0, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2]
receiving, getting value of  Ti2
getting arg2 value:  2
arg1_value 1 arg2_value: 2 product is 2
pc =  26
return node detected
memory_map in return before exit:  [3, 0, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2]
local_vars:  [{'n': 2, 'result': 1}]
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
temp return_value:  2
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51, 'Ti2': 52, 'Ti3': 53} {} {'Tb1': 50}
return_value:  2
memory map after exit:  [3, 0, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2]
stack:  [0, 2, 2, 2, 2]
pc =  27
label node detected
pc =  28
EndFunc node detected
call stack:  [33]
going to return address:  33
pc:  33
code:  ('=', 'factorial', '', 'Ti4')
function_name:  factorial
assining value to global variable:  2
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
pc =  34
equal node detected
arg1:  factorial
arg2:  
result:  Ti4
Declaring temp variable:  Ti4
Assigning value to a temporal variable
Value of  Ti4  is now  2
equal node end
pc =  35
equal node detected
arg1:  Ti4
arg2:  
result:  result
Assigning value to global variable
Value of  result  is now  2
equal node end
pc =  36
param node start
memory_map:  [3, 2, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2, 2]
stack:  [0, 2, 2, 2]
result:  "factorial of num is"
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
local_vars:  []
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51, 'Ti2': 52, 'Ti3': 53, 'Ti4': 54} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"factorial of num is"']
memory_map after param:  [3, 2, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2, 2]
param node end
pc =  37
param node start
memory_map:  [3, 2, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2, 2]
stack:  [0, 2, 2, 2, '"factorial of num is"']
result:  result
arg1:  
arg2:  
global_vars:  {'num': 0, 'result': 1, 'factorial': 3}
local_vars:  []
temp_vars:  {'Ti<bound method MemoryMap.next_temp_index of <memorymap.MemoryMap object at 0x000001F0DBAFF910>>': 2, 'Ti1': 51, 'Ti2': 52, 'Ti3': 53, 'Ti4': 54} {} {'Tb1': 50}
stack:  [0, 2, 2, 2, '"factorial of num is"', 2]
memory_map after param:  [3, 2, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, True, 0, 2, 2, 2]
param node end
pc =  38
write node detected
pc =  39
EndProg node detected
